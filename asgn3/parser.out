Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA

Grammar

Rule 0     S' -> program
Rule 1     program -> imports classes
Rule 2     program -> classes
Rule 3     imports -> imports IMPORT ID SEMICOLON
Rule 4     imports -> IMPORT ID SEMICOLON
Rule 5     classes -> classes class SEMICOLON
Rule 6     classes -> class SEMICOLON
Rule 7     class -> CLASS CLASS_TYPE INHERITS CLASS_TYPE LBRACE features_list RBRACE
Rule 8     class -> CLASS CLASS_TYPE LBRACE features_list RBRACE
Rule 9     class -> CLASS CLASS_TYPE INHERITS CLASS_TYPE LBRACE RBRACE
Rule 10    class -> CLASS CLASS_TYPE LBRACE RBRACE
Rule 11    features_list -> features_list feature SEMICOLON
Rule 12    features_list -> feature SEMICOLON
Rule 13    feature -> modifier ID LPAREN formal_parameter_list RPAREN COLON type LBRACE expression RBRACE
Rule 14    feature -> modifier ID LPAREN RPAREN COLON type LBRACE expression RBRACE
Rule 15    feature -> ID LPAREN formal_parameter_list RPAREN COLON type LBRACE expression RBRACE
Rule 16    feature -> ID LPAREN RPAREN COLON type LBRACE expression RBRACE
Rule 17    feature -> modifier formal
Rule 18    feature -> formal
Rule 19    modifier -> PUBLIC
Rule 20    modifier -> PRIVATE
Rule 21    type -> CLASS_TYPE
Rule 22    type -> INTEGER_TYPE
Rule 23    type -> BOOL_TYPE
Rule 24    type -> STRING_TYPE
Rule 25    type -> OBJECT
Rule 26    type -> SELF_TYPE
Rule 27    formal_parameter_list -> formal_parameter_list formal_parameter
Rule 28    formal_parameter_list -> formal_parameter
Rule 29    formal_parameter -> ID COLON type
Rule 30    formal_parameter -> ID LSQRBRACKET RSQRBRACKET COLON type
Rule 31    formal -> ID COLON type GETS expression SEMICOLON
Rule 32    formal -> ID COLON type SEMICOLON
Rule 33    formal -> ID COLON type LSQRBRACKET RSQRBRACKET SEMICOLON
Rule 34    expression -> ID GETS expression
Rule 35    expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression
Rule 36    expression -> expression PERIOD ID LPAREN argument_list RPAREN
Rule 37    expression -> expression PERIOD ID LPAREN RPAREN
Rule 38    expression -> ID LPAREN argument_list RPAREN
Rule 39    expression -> ID LPAREN RPAREN
Rule 40    expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
Rule 41    expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
Rule 42    expression -> if_then_else
Rule 43    expression -> while
Rule 44    expression -> for
Rule 45    expression -> block_expression
Rule 46    expression -> let_expression
Rule 47    expression -> NEW type
Rule 48    expression -> ISVOID expression
Rule 49    expression -> expression PLUS expression
Rule 50    expression -> expression MINUS expression
Rule 51    expression -> expression TIMES expression
Rule 52    expression -> expression DIVIDE expression
Rule 53    expression -> expression MOD expression
Rule 54    expression -> expression LT expression
Rule 55    expression -> expression GT expression
Rule 56    expression -> expression LTEQ expression
Rule 57    expression -> expression GTEQ expression
Rule 58    expression -> expression EQUAL expression
Rule 59    expression -> expression OR expression
Rule 60    expression -> expression AND expression
Rule 61    expression -> NOT expression
Rule 62    expression -> TILDA expression
Rule 63    expression -> LPAREN expression RPAREN
Rule 64    expression -> SELF
Rule 65    expression -> ID
Rule 66    expression -> ID LSQRBRACKET expression RSQRBRACKET
Rule 67    expression -> INTEGER
Rule 68    expression -> STRING
Rule 69    expression -> TRUE
Rule 70    expression -> FALSE
Rule 71    expression -> BREAK
Rule 72    expression -> CONTINUE
Rule 73    argument_list -> argument_list expression
Rule 74    argument_list -> expression
Rule 75    if_then_else -> IF expression THEN expression ELSE expression FI
Rule 76    while -> WHILE expression LOOP expression POOL
Rule 77    for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
Rule 78    block_expression -> LBRACE block_list RBRACE
Rule 79    block_list -> block_list expression SEMICOLON
Rule 80    block_list -> expression SEMICOLON
Rule 81    let_expression -> LET formal IN expression

Terminals, with rules where they appear

AND                  : 60
AT                   : 40 41
BOOL_TYPE            : 23
BREAK                : 71
CLASS                : 7 8 9 10
CLASS_TYPE           : 7 7 8 9 9 10 21 40 41
COLON                : 13 14 15 16 29 30 31 32 33
COMMA                : 
CONTINUE             : 72
DIVIDE               : 52
ELSE                 : 75
EQUAL                : 58
FALSE                : 70
FI                   : 75
FOR                  : 77
GETS                 : 31 34 35
GT                   : 55
GTEQ                 : 57
ID                   : 3 4 13 14 15 16 29 30 31 32 33 34 35 36 37 38 39 40 41 65 66
IF                   : 75
IMPORT               : 3 4
IN                   : 81
INHERITS             : 7 9
INTEGER              : 67
INTEGER_TYPE         : 22
ISVOID               : 48
LBRACE               : 7 8 9 10 13 14 15 16 78
LET                  : 81
LOOP                 : 76 77
LPAREN               : 13 14 15 16 36 37 38 39 40 41 63 77
LSQRBRACKET          : 30 33 35 66
LT                   : 54
LTEQ                 : 56
MINUS                : 50
MOD                  : 53
NEW                  : 47
NOT                  : 61
OBJECT               : 25
OR                   : 59
PERIOD               : 36 37 40 41
PLUS                 : 49
POOL                 : 76 77
PRIVATE              : 20
PUBLIC               : 19
RBRACE               : 7 8 9 10 13 14 15 16 78
RPAREN               : 13 14 15 16 36 37 38 39 40 41 63
RSQRBRACKET          : 30 33 35 66
SELF                 : 64
SELF_TYPE            : 26
SEMICOLON            : 3 4 5 6 11 12 31 32 33 77 77 79 80
STRING               : 68
STRING_TYPE          : 24
THEN                 : 75
TILDA                : 62
TIMES                : 51
TRUE                 : 69
WHILE                : 76
error                : 

Nonterminals, with rules where they appear

argument_list        : 36 38 40 73
block_expression     : 45
block_list           : 78 79
class                : 5 6
classes              : 1 2 5
expression           : 13 14 15 16 31 34 35 35 36 37 40 41 48 49 49 50 50 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 62 63 66 73 74 75 75 75 76 76 77 77 77 77 79 80 81
feature              : 11 12
features_list        : 7 8 11
for                  : 44
formal               : 17 18 81
formal_parameter     : 27 28
formal_parameter_list : 13 15 27
if_then_else         : 42
imports              : 1 3
let_expression       : 46
modifier             : 13 14 17
program              : 0
type                 : 13 14 15 16 29 30 31 32 33 47
while                : 43

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . imports classes
    (2) program -> . classes
    (3) imports -> . imports IMPORT ID SEMICOLON
    (4) imports -> . IMPORT ID SEMICOLON
    (5) classes -> . classes class SEMICOLON
    (6) classes -> . class SEMICOLON
    (7) class -> . CLASS CLASS_TYPE INHERITS CLASS_TYPE LBRACE features_list RBRACE
    (8) class -> . CLASS CLASS_TYPE LBRACE features_list RBRACE
    (9) class -> . CLASS CLASS_TYPE INHERITS CLASS_TYPE LBRACE RBRACE
    (10) class -> . CLASS CLASS_TYPE LBRACE RBRACE

    IMPORT          shift and go to state 6
    CLASS           shift and go to state 4

    classes                        shift and go to state 5
    imports                        shift and go to state 2
    program                        shift and go to state 1
    class                          shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> imports . classes
    (3) imports -> imports . IMPORT ID SEMICOLON
    (5) classes -> . classes class SEMICOLON
    (6) classes -> . class SEMICOLON
    (7) class -> . CLASS CLASS_TYPE INHERITS CLASS_TYPE LBRACE features_list RBRACE
    (8) class -> . CLASS CLASS_TYPE LBRACE features_list RBRACE
    (9) class -> . CLASS CLASS_TYPE INHERITS CLASS_TYPE LBRACE RBRACE
    (10) class -> . CLASS CLASS_TYPE LBRACE RBRACE

    IMPORT          shift and go to state 8
    CLASS           shift and go to state 4

    classes                        shift and go to state 7
    class                          shift and go to state 3

state 3

    (6) classes -> class . SEMICOLON

    SEMICOLON       shift and go to state 9


state 4

    (7) class -> CLASS . CLASS_TYPE INHERITS CLASS_TYPE LBRACE features_list RBRACE
    (8) class -> CLASS . CLASS_TYPE LBRACE features_list RBRACE
    (9) class -> CLASS . CLASS_TYPE INHERITS CLASS_TYPE LBRACE RBRACE
    (10) class -> CLASS . CLASS_TYPE LBRACE RBRACE

    CLASS_TYPE      shift and go to state 10


state 5

    (2) program -> classes .
    (5) classes -> classes . class SEMICOLON
    (7) class -> . CLASS CLASS_TYPE INHERITS CLASS_TYPE LBRACE features_list RBRACE
    (8) class -> . CLASS CLASS_TYPE LBRACE features_list RBRACE
    (9) class -> . CLASS CLASS_TYPE INHERITS CLASS_TYPE LBRACE RBRACE
    (10) class -> . CLASS CLASS_TYPE LBRACE RBRACE

    $end            reduce using rule 2 (program -> classes .)
    CLASS           shift and go to state 4

    class                          shift and go to state 11

state 6

    (4) imports -> IMPORT . ID SEMICOLON

    ID              shift and go to state 12


state 7

    (1) program -> imports classes .
    (5) classes -> classes . class SEMICOLON
    (7) class -> . CLASS CLASS_TYPE INHERITS CLASS_TYPE LBRACE features_list RBRACE
    (8) class -> . CLASS CLASS_TYPE LBRACE features_list RBRACE
    (9) class -> . CLASS CLASS_TYPE INHERITS CLASS_TYPE LBRACE RBRACE
    (10) class -> . CLASS CLASS_TYPE LBRACE RBRACE

    $end            reduce using rule 1 (program -> imports classes .)
    CLASS           shift and go to state 4

    class                          shift and go to state 11

state 8

    (3) imports -> imports IMPORT . ID SEMICOLON

    ID              shift and go to state 13


state 9

    (6) classes -> class SEMICOLON .

    CLASS           reduce using rule 6 (classes -> class SEMICOLON .)
    $end            reduce using rule 6 (classes -> class SEMICOLON .)


state 10

    (7) class -> CLASS CLASS_TYPE . INHERITS CLASS_TYPE LBRACE features_list RBRACE
    (8) class -> CLASS CLASS_TYPE . LBRACE features_list RBRACE
    (9) class -> CLASS CLASS_TYPE . INHERITS CLASS_TYPE LBRACE RBRACE
    (10) class -> CLASS CLASS_TYPE . LBRACE RBRACE

    INHERITS        shift and go to state 14
    LBRACE          shift and go to state 15


state 11

    (5) classes -> classes class . SEMICOLON

    SEMICOLON       shift and go to state 16


state 12

    (4) imports -> IMPORT ID . SEMICOLON

    SEMICOLON       shift and go to state 17


state 13

    (3) imports -> imports IMPORT ID . SEMICOLON

    SEMICOLON       shift and go to state 18


state 14

    (7) class -> CLASS CLASS_TYPE INHERITS . CLASS_TYPE LBRACE features_list RBRACE
    (9) class -> CLASS CLASS_TYPE INHERITS . CLASS_TYPE LBRACE RBRACE

    CLASS_TYPE      shift and go to state 19


state 15

    (8) class -> CLASS CLASS_TYPE LBRACE . features_list RBRACE
    (10) class -> CLASS CLASS_TYPE LBRACE . RBRACE
    (11) features_list -> . features_list feature SEMICOLON
    (12) features_list -> . feature SEMICOLON
    (13) feature -> . modifier ID LPAREN formal_parameter_list RPAREN COLON type LBRACE expression RBRACE
    (14) feature -> . modifier ID LPAREN RPAREN COLON type LBRACE expression RBRACE
    (15) feature -> . ID LPAREN formal_parameter_list RPAREN COLON type LBRACE expression RBRACE
    (16) feature -> . ID LPAREN RPAREN COLON type LBRACE expression RBRACE
    (17) feature -> . modifier formal
    (18) feature -> . formal
    (19) modifier -> . PUBLIC
    (20) modifier -> . PRIVATE
    (31) formal -> . ID COLON type GETS expression SEMICOLON
    (32) formal -> . ID COLON type SEMICOLON
    (33) formal -> . ID COLON type LSQRBRACKET RSQRBRACKET SEMICOLON

    RBRACE          shift and go to state 20
    ID              shift and go to state 26
    PUBLIC          shift and go to state 25
    PRIVATE         shift and go to state 23

    features_list                  shift and go to state 24
    feature                        shift and go to state 22
    modifier                       shift and go to state 27
    formal                         shift and go to state 21

state 16

    (5) classes -> classes class SEMICOLON .

    CLASS           reduce using rule 5 (classes -> classes class SEMICOLON .)
    $end            reduce using rule 5 (classes -> classes class SEMICOLON .)


state 17

    (4) imports -> IMPORT ID SEMICOLON .

    IMPORT          reduce using rule 4 (imports -> IMPORT ID SEMICOLON .)
    CLASS           reduce using rule 4 (imports -> IMPORT ID SEMICOLON .)


state 18

    (3) imports -> imports IMPORT ID SEMICOLON .

    IMPORT          reduce using rule 3 (imports -> imports IMPORT ID SEMICOLON .)
    CLASS           reduce using rule 3 (imports -> imports IMPORT ID SEMICOLON .)


state 19

    (7) class -> CLASS CLASS_TYPE INHERITS CLASS_TYPE . LBRACE features_list RBRACE
    (9) class -> CLASS CLASS_TYPE INHERITS CLASS_TYPE . LBRACE RBRACE

    LBRACE          shift and go to state 28


state 20

    (10) class -> CLASS CLASS_TYPE LBRACE RBRACE .

    SEMICOLON       reduce using rule 10 (class -> CLASS CLASS_TYPE LBRACE RBRACE .)


state 21

    (18) feature -> formal .

    SEMICOLON       reduce using rule 18 (feature -> formal .)


state 22

    (12) features_list -> feature . SEMICOLON

    SEMICOLON       shift and go to state 29


state 23

    (20) modifier -> PRIVATE .

    ID              reduce using rule 20 (modifier -> PRIVATE .)


state 24

    (8) class -> CLASS CLASS_TYPE LBRACE features_list . RBRACE
    (11) features_list -> features_list . feature SEMICOLON
    (13) feature -> . modifier ID LPAREN formal_parameter_list RPAREN COLON type LBRACE expression RBRACE
    (14) feature -> . modifier ID LPAREN RPAREN COLON type LBRACE expression RBRACE
    (15) feature -> . ID LPAREN formal_parameter_list RPAREN COLON type LBRACE expression RBRACE
    (16) feature -> . ID LPAREN RPAREN COLON type LBRACE expression RBRACE
    (17) feature -> . modifier formal
    (18) feature -> . formal
    (19) modifier -> . PUBLIC
    (20) modifier -> . PRIVATE
    (31) formal -> . ID COLON type GETS expression SEMICOLON
    (32) formal -> . ID COLON type SEMICOLON
    (33) formal -> . ID COLON type LSQRBRACKET RSQRBRACKET SEMICOLON

    RBRACE          shift and go to state 30
    ID              shift and go to state 26
    PUBLIC          shift and go to state 25
    PRIVATE         shift and go to state 23

    feature                        shift and go to state 31
    modifier                       shift and go to state 27
    formal                         shift and go to state 21

state 25

    (19) modifier -> PUBLIC .

    ID              reduce using rule 19 (modifier -> PUBLIC .)


state 26

    (15) feature -> ID . LPAREN formal_parameter_list RPAREN COLON type LBRACE expression RBRACE
    (16) feature -> ID . LPAREN RPAREN COLON type LBRACE expression RBRACE
    (31) formal -> ID . COLON type GETS expression SEMICOLON
    (32) formal -> ID . COLON type SEMICOLON
    (33) formal -> ID . COLON type LSQRBRACKET RSQRBRACKET SEMICOLON

    LPAREN          shift and go to state 33
    COLON           shift and go to state 32


state 27

    (13) feature -> modifier . ID LPAREN formal_parameter_list RPAREN COLON type LBRACE expression RBRACE
    (14) feature -> modifier . ID LPAREN RPAREN COLON type LBRACE expression RBRACE
    (17) feature -> modifier . formal
    (31) formal -> . ID COLON type GETS expression SEMICOLON
    (32) formal -> . ID COLON type SEMICOLON
    (33) formal -> . ID COLON type LSQRBRACKET RSQRBRACKET SEMICOLON

    ID              shift and go to state 34

    formal                         shift and go to state 35

state 28

    (7) class -> CLASS CLASS_TYPE INHERITS CLASS_TYPE LBRACE . features_list RBRACE
    (9) class -> CLASS CLASS_TYPE INHERITS CLASS_TYPE LBRACE . RBRACE
    (11) features_list -> . features_list feature SEMICOLON
    (12) features_list -> . feature SEMICOLON
    (13) feature -> . modifier ID LPAREN formal_parameter_list RPAREN COLON type LBRACE expression RBRACE
    (14) feature -> . modifier ID LPAREN RPAREN COLON type LBRACE expression RBRACE
    (15) feature -> . ID LPAREN formal_parameter_list RPAREN COLON type LBRACE expression RBRACE
    (16) feature -> . ID LPAREN RPAREN COLON type LBRACE expression RBRACE
    (17) feature -> . modifier formal
    (18) feature -> . formal
    (19) modifier -> . PUBLIC
    (20) modifier -> . PRIVATE
    (31) formal -> . ID COLON type GETS expression SEMICOLON
    (32) formal -> . ID COLON type SEMICOLON
    (33) formal -> . ID COLON type LSQRBRACKET RSQRBRACKET SEMICOLON

    RBRACE          shift and go to state 36
    ID              shift and go to state 26
    PUBLIC          shift and go to state 25
    PRIVATE         shift and go to state 23

    features_list                  shift and go to state 37
    feature                        shift and go to state 22
    modifier                       shift and go to state 27
    formal                         shift and go to state 21

state 29

    (12) features_list -> feature SEMICOLON .

    RBRACE          reduce using rule 12 (features_list -> feature SEMICOLON .)
    ID              reduce using rule 12 (features_list -> feature SEMICOLON .)
    PUBLIC          reduce using rule 12 (features_list -> feature SEMICOLON .)
    PRIVATE         reduce using rule 12 (features_list -> feature SEMICOLON .)


state 30

    (8) class -> CLASS CLASS_TYPE LBRACE features_list RBRACE .

    SEMICOLON       reduce using rule 8 (class -> CLASS CLASS_TYPE LBRACE features_list RBRACE .)


state 31

    (11) features_list -> features_list feature . SEMICOLON

    SEMICOLON       shift and go to state 38


state 32

    (31) formal -> ID COLON . type GETS expression SEMICOLON
    (32) formal -> ID COLON . type SEMICOLON
    (33) formal -> ID COLON . type LSQRBRACKET RSQRBRACKET SEMICOLON
    (21) type -> . CLASS_TYPE
    (22) type -> . INTEGER_TYPE
    (23) type -> . BOOL_TYPE
    (24) type -> . STRING_TYPE
    (25) type -> . OBJECT
    (26) type -> . SELF_TYPE

    CLASS_TYPE      shift and go to state 40
    INTEGER_TYPE    shift and go to state 43
    BOOL_TYPE       shift and go to state 45
    STRING_TYPE     shift and go to state 42
    OBJECT          shift and go to state 41
    SELF_TYPE       shift and go to state 39

    type                           shift and go to state 44

state 33

    (15) feature -> ID LPAREN . formal_parameter_list RPAREN COLON type LBRACE expression RBRACE
    (16) feature -> ID LPAREN . RPAREN COLON type LBRACE expression RBRACE
    (27) formal_parameter_list -> . formal_parameter_list formal_parameter
    (28) formal_parameter_list -> . formal_parameter
    (29) formal_parameter -> . ID COLON type
    (30) formal_parameter -> . ID LSQRBRACKET RSQRBRACKET COLON type

    RPAREN          shift and go to state 47
    ID              shift and go to state 49

    formal_parameter_list          shift and go to state 46
    formal_parameter               shift and go to state 48

state 34

    (13) feature -> modifier ID . LPAREN formal_parameter_list RPAREN COLON type LBRACE expression RBRACE
    (14) feature -> modifier ID . LPAREN RPAREN COLON type LBRACE expression RBRACE
    (31) formal -> ID . COLON type GETS expression SEMICOLON
    (32) formal -> ID . COLON type SEMICOLON
    (33) formal -> ID . COLON type LSQRBRACKET RSQRBRACKET SEMICOLON

    LPAREN          shift and go to state 50
    COLON           shift and go to state 32


state 35

    (17) feature -> modifier formal .

    SEMICOLON       reduce using rule 17 (feature -> modifier formal .)


state 36

    (9) class -> CLASS CLASS_TYPE INHERITS CLASS_TYPE LBRACE RBRACE .

    SEMICOLON       reduce using rule 9 (class -> CLASS CLASS_TYPE INHERITS CLASS_TYPE LBRACE RBRACE .)


state 37

    (7) class -> CLASS CLASS_TYPE INHERITS CLASS_TYPE LBRACE features_list . RBRACE
    (11) features_list -> features_list . feature SEMICOLON
    (13) feature -> . modifier ID LPAREN formal_parameter_list RPAREN COLON type LBRACE expression RBRACE
    (14) feature -> . modifier ID LPAREN RPAREN COLON type LBRACE expression RBRACE
    (15) feature -> . ID LPAREN formal_parameter_list RPAREN COLON type LBRACE expression RBRACE
    (16) feature -> . ID LPAREN RPAREN COLON type LBRACE expression RBRACE
    (17) feature -> . modifier formal
    (18) feature -> . formal
    (19) modifier -> . PUBLIC
    (20) modifier -> . PRIVATE
    (31) formal -> . ID COLON type GETS expression SEMICOLON
    (32) formal -> . ID COLON type SEMICOLON
    (33) formal -> . ID COLON type LSQRBRACKET RSQRBRACKET SEMICOLON

    RBRACE          shift and go to state 51
    ID              shift and go to state 26
    PUBLIC          shift and go to state 25
    PRIVATE         shift and go to state 23

    feature                        shift and go to state 31
    modifier                       shift and go to state 27
    formal                         shift and go to state 21

state 38

    (11) features_list -> features_list feature SEMICOLON .

    RBRACE          reduce using rule 11 (features_list -> features_list feature SEMICOLON .)
    ID              reduce using rule 11 (features_list -> features_list feature SEMICOLON .)
    PUBLIC          reduce using rule 11 (features_list -> features_list feature SEMICOLON .)
    PRIVATE         reduce using rule 11 (features_list -> features_list feature SEMICOLON .)


state 39

    (26) type -> SELF_TYPE .

    SEMICOLON       reduce using rule 26 (type -> SELF_TYPE .)
    PERIOD          reduce using rule 26 (type -> SELF_TYPE .)
    AT              reduce using rule 26 (type -> SELF_TYPE .)
    PLUS            reduce using rule 26 (type -> SELF_TYPE .)
    MINUS           reduce using rule 26 (type -> SELF_TYPE .)
    TIMES           reduce using rule 26 (type -> SELF_TYPE .)
    DIVIDE          reduce using rule 26 (type -> SELF_TYPE .)
    MOD             reduce using rule 26 (type -> SELF_TYPE .)
    LT              reduce using rule 26 (type -> SELF_TYPE .)
    GT              reduce using rule 26 (type -> SELF_TYPE .)
    LTEQ            reduce using rule 26 (type -> SELF_TYPE .)
    GTEQ            reduce using rule 26 (type -> SELF_TYPE .)
    EQUAL           reduce using rule 26 (type -> SELF_TYPE .)
    OR              reduce using rule 26 (type -> SELF_TYPE .)
    AND             reduce using rule 26 (type -> SELF_TYPE .)
    LOOP            reduce using rule 26 (type -> SELF_TYPE .)
    THEN            reduce using rule 26 (type -> SELF_TYPE .)
    RPAREN          reduce using rule 26 (type -> SELF_TYPE .)
    RSQRBRACKET     reduce using rule 26 (type -> SELF_TYPE .)
    ID              reduce using rule 26 (type -> SELF_TYPE .)
    NEW             reduce using rule 26 (type -> SELF_TYPE .)
    ISVOID          reduce using rule 26 (type -> SELF_TYPE .)
    NOT             reduce using rule 26 (type -> SELF_TYPE .)
    TILDA           reduce using rule 26 (type -> SELF_TYPE .)
    LPAREN          reduce using rule 26 (type -> SELF_TYPE .)
    SELF            reduce using rule 26 (type -> SELF_TYPE .)
    INTEGER         reduce using rule 26 (type -> SELF_TYPE .)
    STRING          reduce using rule 26 (type -> SELF_TYPE .)
    TRUE            reduce using rule 26 (type -> SELF_TYPE .)
    FALSE           reduce using rule 26 (type -> SELF_TYPE .)
    BREAK           reduce using rule 26 (type -> SELF_TYPE .)
    CONTINUE        reduce using rule 26 (type -> SELF_TYPE .)
    IF              reduce using rule 26 (type -> SELF_TYPE .)
    WHILE           reduce using rule 26 (type -> SELF_TYPE .)
    FOR             reduce using rule 26 (type -> SELF_TYPE .)
    LBRACE          reduce using rule 26 (type -> SELF_TYPE .)
    LET             reduce using rule 26 (type -> SELF_TYPE .)
    RBRACE          reduce using rule 26 (type -> SELF_TYPE .)
    POOL            reduce using rule 26 (type -> SELF_TYPE .)
    ELSE            reduce using rule 26 (type -> SELF_TYPE .)
    FI              reduce using rule 26 (type -> SELF_TYPE .)
    GETS            reduce using rule 26 (type -> SELF_TYPE .)
    LSQRBRACKET     reduce using rule 26 (type -> SELF_TYPE .)


state 40

    (21) type -> CLASS_TYPE .

    SEMICOLON       reduce using rule 21 (type -> CLASS_TYPE .)
    PERIOD          reduce using rule 21 (type -> CLASS_TYPE .)
    AT              reduce using rule 21 (type -> CLASS_TYPE .)
    PLUS            reduce using rule 21 (type -> CLASS_TYPE .)
    MINUS           reduce using rule 21 (type -> CLASS_TYPE .)
    TIMES           reduce using rule 21 (type -> CLASS_TYPE .)
    DIVIDE          reduce using rule 21 (type -> CLASS_TYPE .)
    MOD             reduce using rule 21 (type -> CLASS_TYPE .)
    LT              reduce using rule 21 (type -> CLASS_TYPE .)
    GT              reduce using rule 21 (type -> CLASS_TYPE .)
    LTEQ            reduce using rule 21 (type -> CLASS_TYPE .)
    GTEQ            reduce using rule 21 (type -> CLASS_TYPE .)
    EQUAL           reduce using rule 21 (type -> CLASS_TYPE .)
    OR              reduce using rule 21 (type -> CLASS_TYPE .)
    AND             reduce using rule 21 (type -> CLASS_TYPE .)
    LOOP            reduce using rule 21 (type -> CLASS_TYPE .)
    THEN            reduce using rule 21 (type -> CLASS_TYPE .)
    RPAREN          reduce using rule 21 (type -> CLASS_TYPE .)
    RSQRBRACKET     reduce using rule 21 (type -> CLASS_TYPE .)
    ID              reduce using rule 21 (type -> CLASS_TYPE .)
    NEW             reduce using rule 21 (type -> CLASS_TYPE .)
    ISVOID          reduce using rule 21 (type -> CLASS_TYPE .)
    NOT             reduce using rule 21 (type -> CLASS_TYPE .)
    TILDA           reduce using rule 21 (type -> CLASS_TYPE .)
    LPAREN          reduce using rule 21 (type -> CLASS_TYPE .)
    SELF            reduce using rule 21 (type -> CLASS_TYPE .)
    INTEGER         reduce using rule 21 (type -> CLASS_TYPE .)
    STRING          reduce using rule 21 (type -> CLASS_TYPE .)
    TRUE            reduce using rule 21 (type -> CLASS_TYPE .)
    FALSE           reduce using rule 21 (type -> CLASS_TYPE .)
    BREAK           reduce using rule 21 (type -> CLASS_TYPE .)
    CONTINUE        reduce using rule 21 (type -> CLASS_TYPE .)
    IF              reduce using rule 21 (type -> CLASS_TYPE .)
    WHILE           reduce using rule 21 (type -> CLASS_TYPE .)
    FOR             reduce using rule 21 (type -> CLASS_TYPE .)
    LBRACE          reduce using rule 21 (type -> CLASS_TYPE .)
    LET             reduce using rule 21 (type -> CLASS_TYPE .)
    RBRACE          reduce using rule 21 (type -> CLASS_TYPE .)
    POOL            reduce using rule 21 (type -> CLASS_TYPE .)
    ELSE            reduce using rule 21 (type -> CLASS_TYPE .)
    FI              reduce using rule 21 (type -> CLASS_TYPE .)
    GETS            reduce using rule 21 (type -> CLASS_TYPE .)
    LSQRBRACKET     reduce using rule 21 (type -> CLASS_TYPE .)


state 41

    (25) type -> OBJECT .

    SEMICOLON       reduce using rule 25 (type -> OBJECT .)
    PERIOD          reduce using rule 25 (type -> OBJECT .)
    AT              reduce using rule 25 (type -> OBJECT .)
    PLUS            reduce using rule 25 (type -> OBJECT .)
    MINUS           reduce using rule 25 (type -> OBJECT .)
    TIMES           reduce using rule 25 (type -> OBJECT .)
    DIVIDE          reduce using rule 25 (type -> OBJECT .)
    MOD             reduce using rule 25 (type -> OBJECT .)
    LT              reduce using rule 25 (type -> OBJECT .)
    GT              reduce using rule 25 (type -> OBJECT .)
    LTEQ            reduce using rule 25 (type -> OBJECT .)
    GTEQ            reduce using rule 25 (type -> OBJECT .)
    EQUAL           reduce using rule 25 (type -> OBJECT .)
    OR              reduce using rule 25 (type -> OBJECT .)
    AND             reduce using rule 25 (type -> OBJECT .)
    LOOP            reduce using rule 25 (type -> OBJECT .)
    THEN            reduce using rule 25 (type -> OBJECT .)
    RPAREN          reduce using rule 25 (type -> OBJECT .)
    RSQRBRACKET     reduce using rule 25 (type -> OBJECT .)
    ID              reduce using rule 25 (type -> OBJECT .)
    NEW             reduce using rule 25 (type -> OBJECT .)
    ISVOID          reduce using rule 25 (type -> OBJECT .)
    NOT             reduce using rule 25 (type -> OBJECT .)
    TILDA           reduce using rule 25 (type -> OBJECT .)
    LPAREN          reduce using rule 25 (type -> OBJECT .)
    SELF            reduce using rule 25 (type -> OBJECT .)
    INTEGER         reduce using rule 25 (type -> OBJECT .)
    STRING          reduce using rule 25 (type -> OBJECT .)
    TRUE            reduce using rule 25 (type -> OBJECT .)
    FALSE           reduce using rule 25 (type -> OBJECT .)
    BREAK           reduce using rule 25 (type -> OBJECT .)
    CONTINUE        reduce using rule 25 (type -> OBJECT .)
    IF              reduce using rule 25 (type -> OBJECT .)
    WHILE           reduce using rule 25 (type -> OBJECT .)
    FOR             reduce using rule 25 (type -> OBJECT .)
    LBRACE          reduce using rule 25 (type -> OBJECT .)
    LET             reduce using rule 25 (type -> OBJECT .)
    RBRACE          reduce using rule 25 (type -> OBJECT .)
    POOL            reduce using rule 25 (type -> OBJECT .)
    ELSE            reduce using rule 25 (type -> OBJECT .)
    FI              reduce using rule 25 (type -> OBJECT .)
    GETS            reduce using rule 25 (type -> OBJECT .)
    LSQRBRACKET     reduce using rule 25 (type -> OBJECT .)


state 42

    (24) type -> STRING_TYPE .

    SEMICOLON       reduce using rule 24 (type -> STRING_TYPE .)
    PERIOD          reduce using rule 24 (type -> STRING_TYPE .)
    AT              reduce using rule 24 (type -> STRING_TYPE .)
    PLUS            reduce using rule 24 (type -> STRING_TYPE .)
    MINUS           reduce using rule 24 (type -> STRING_TYPE .)
    TIMES           reduce using rule 24 (type -> STRING_TYPE .)
    DIVIDE          reduce using rule 24 (type -> STRING_TYPE .)
    MOD             reduce using rule 24 (type -> STRING_TYPE .)
    LT              reduce using rule 24 (type -> STRING_TYPE .)
    GT              reduce using rule 24 (type -> STRING_TYPE .)
    LTEQ            reduce using rule 24 (type -> STRING_TYPE .)
    GTEQ            reduce using rule 24 (type -> STRING_TYPE .)
    EQUAL           reduce using rule 24 (type -> STRING_TYPE .)
    OR              reduce using rule 24 (type -> STRING_TYPE .)
    AND             reduce using rule 24 (type -> STRING_TYPE .)
    LOOP            reduce using rule 24 (type -> STRING_TYPE .)
    THEN            reduce using rule 24 (type -> STRING_TYPE .)
    RPAREN          reduce using rule 24 (type -> STRING_TYPE .)
    RSQRBRACKET     reduce using rule 24 (type -> STRING_TYPE .)
    ID              reduce using rule 24 (type -> STRING_TYPE .)
    NEW             reduce using rule 24 (type -> STRING_TYPE .)
    ISVOID          reduce using rule 24 (type -> STRING_TYPE .)
    NOT             reduce using rule 24 (type -> STRING_TYPE .)
    TILDA           reduce using rule 24 (type -> STRING_TYPE .)
    LPAREN          reduce using rule 24 (type -> STRING_TYPE .)
    SELF            reduce using rule 24 (type -> STRING_TYPE .)
    INTEGER         reduce using rule 24 (type -> STRING_TYPE .)
    STRING          reduce using rule 24 (type -> STRING_TYPE .)
    TRUE            reduce using rule 24 (type -> STRING_TYPE .)
    FALSE           reduce using rule 24 (type -> STRING_TYPE .)
    BREAK           reduce using rule 24 (type -> STRING_TYPE .)
    CONTINUE        reduce using rule 24 (type -> STRING_TYPE .)
    IF              reduce using rule 24 (type -> STRING_TYPE .)
    WHILE           reduce using rule 24 (type -> STRING_TYPE .)
    FOR             reduce using rule 24 (type -> STRING_TYPE .)
    LBRACE          reduce using rule 24 (type -> STRING_TYPE .)
    LET             reduce using rule 24 (type -> STRING_TYPE .)
    RBRACE          reduce using rule 24 (type -> STRING_TYPE .)
    POOL            reduce using rule 24 (type -> STRING_TYPE .)
    ELSE            reduce using rule 24 (type -> STRING_TYPE .)
    FI              reduce using rule 24 (type -> STRING_TYPE .)
    GETS            reduce using rule 24 (type -> STRING_TYPE .)
    LSQRBRACKET     reduce using rule 24 (type -> STRING_TYPE .)


state 43

    (22) type -> INTEGER_TYPE .

    SEMICOLON       reduce using rule 22 (type -> INTEGER_TYPE .)
    PERIOD          reduce using rule 22 (type -> INTEGER_TYPE .)
    AT              reduce using rule 22 (type -> INTEGER_TYPE .)
    PLUS            reduce using rule 22 (type -> INTEGER_TYPE .)
    MINUS           reduce using rule 22 (type -> INTEGER_TYPE .)
    TIMES           reduce using rule 22 (type -> INTEGER_TYPE .)
    DIVIDE          reduce using rule 22 (type -> INTEGER_TYPE .)
    MOD             reduce using rule 22 (type -> INTEGER_TYPE .)
    LT              reduce using rule 22 (type -> INTEGER_TYPE .)
    GT              reduce using rule 22 (type -> INTEGER_TYPE .)
    LTEQ            reduce using rule 22 (type -> INTEGER_TYPE .)
    GTEQ            reduce using rule 22 (type -> INTEGER_TYPE .)
    EQUAL           reduce using rule 22 (type -> INTEGER_TYPE .)
    OR              reduce using rule 22 (type -> INTEGER_TYPE .)
    AND             reduce using rule 22 (type -> INTEGER_TYPE .)
    LOOP            reduce using rule 22 (type -> INTEGER_TYPE .)
    THEN            reduce using rule 22 (type -> INTEGER_TYPE .)
    RPAREN          reduce using rule 22 (type -> INTEGER_TYPE .)
    RSQRBRACKET     reduce using rule 22 (type -> INTEGER_TYPE .)
    ID              reduce using rule 22 (type -> INTEGER_TYPE .)
    NEW             reduce using rule 22 (type -> INTEGER_TYPE .)
    ISVOID          reduce using rule 22 (type -> INTEGER_TYPE .)
    NOT             reduce using rule 22 (type -> INTEGER_TYPE .)
    TILDA           reduce using rule 22 (type -> INTEGER_TYPE .)
    LPAREN          reduce using rule 22 (type -> INTEGER_TYPE .)
    SELF            reduce using rule 22 (type -> INTEGER_TYPE .)
    INTEGER         reduce using rule 22 (type -> INTEGER_TYPE .)
    STRING          reduce using rule 22 (type -> INTEGER_TYPE .)
    TRUE            reduce using rule 22 (type -> INTEGER_TYPE .)
    FALSE           reduce using rule 22 (type -> INTEGER_TYPE .)
    BREAK           reduce using rule 22 (type -> INTEGER_TYPE .)
    CONTINUE        reduce using rule 22 (type -> INTEGER_TYPE .)
    IF              reduce using rule 22 (type -> INTEGER_TYPE .)
    WHILE           reduce using rule 22 (type -> INTEGER_TYPE .)
    FOR             reduce using rule 22 (type -> INTEGER_TYPE .)
    LBRACE          reduce using rule 22 (type -> INTEGER_TYPE .)
    LET             reduce using rule 22 (type -> INTEGER_TYPE .)
    RBRACE          reduce using rule 22 (type -> INTEGER_TYPE .)
    POOL            reduce using rule 22 (type -> INTEGER_TYPE .)
    ELSE            reduce using rule 22 (type -> INTEGER_TYPE .)
    FI              reduce using rule 22 (type -> INTEGER_TYPE .)
    GETS            reduce using rule 22 (type -> INTEGER_TYPE .)
    LSQRBRACKET     reduce using rule 22 (type -> INTEGER_TYPE .)


state 44

    (31) formal -> ID COLON type . GETS expression SEMICOLON
    (32) formal -> ID COLON type . SEMICOLON
    (33) formal -> ID COLON type . LSQRBRACKET RSQRBRACKET SEMICOLON

    GETS            shift and go to state 54
    SEMICOLON       shift and go to state 52
    LSQRBRACKET     shift and go to state 53


state 45

    (23) type -> BOOL_TYPE .

    SEMICOLON       reduce using rule 23 (type -> BOOL_TYPE .)
    PERIOD          reduce using rule 23 (type -> BOOL_TYPE .)
    AT              reduce using rule 23 (type -> BOOL_TYPE .)
    PLUS            reduce using rule 23 (type -> BOOL_TYPE .)
    MINUS           reduce using rule 23 (type -> BOOL_TYPE .)
    TIMES           reduce using rule 23 (type -> BOOL_TYPE .)
    DIVIDE          reduce using rule 23 (type -> BOOL_TYPE .)
    MOD             reduce using rule 23 (type -> BOOL_TYPE .)
    LT              reduce using rule 23 (type -> BOOL_TYPE .)
    GT              reduce using rule 23 (type -> BOOL_TYPE .)
    LTEQ            reduce using rule 23 (type -> BOOL_TYPE .)
    GTEQ            reduce using rule 23 (type -> BOOL_TYPE .)
    EQUAL           reduce using rule 23 (type -> BOOL_TYPE .)
    OR              reduce using rule 23 (type -> BOOL_TYPE .)
    AND             reduce using rule 23 (type -> BOOL_TYPE .)
    LOOP            reduce using rule 23 (type -> BOOL_TYPE .)
    THEN            reduce using rule 23 (type -> BOOL_TYPE .)
    RPAREN          reduce using rule 23 (type -> BOOL_TYPE .)
    RSQRBRACKET     reduce using rule 23 (type -> BOOL_TYPE .)
    ID              reduce using rule 23 (type -> BOOL_TYPE .)
    NEW             reduce using rule 23 (type -> BOOL_TYPE .)
    ISVOID          reduce using rule 23 (type -> BOOL_TYPE .)
    NOT             reduce using rule 23 (type -> BOOL_TYPE .)
    TILDA           reduce using rule 23 (type -> BOOL_TYPE .)
    LPAREN          reduce using rule 23 (type -> BOOL_TYPE .)
    SELF            reduce using rule 23 (type -> BOOL_TYPE .)
    INTEGER         reduce using rule 23 (type -> BOOL_TYPE .)
    STRING          reduce using rule 23 (type -> BOOL_TYPE .)
    TRUE            reduce using rule 23 (type -> BOOL_TYPE .)
    FALSE           reduce using rule 23 (type -> BOOL_TYPE .)
    BREAK           reduce using rule 23 (type -> BOOL_TYPE .)
    CONTINUE        reduce using rule 23 (type -> BOOL_TYPE .)
    IF              reduce using rule 23 (type -> BOOL_TYPE .)
    WHILE           reduce using rule 23 (type -> BOOL_TYPE .)
    FOR             reduce using rule 23 (type -> BOOL_TYPE .)
    LBRACE          reduce using rule 23 (type -> BOOL_TYPE .)
    LET             reduce using rule 23 (type -> BOOL_TYPE .)
    RBRACE          reduce using rule 23 (type -> BOOL_TYPE .)
    POOL            reduce using rule 23 (type -> BOOL_TYPE .)
    ELSE            reduce using rule 23 (type -> BOOL_TYPE .)
    FI              reduce using rule 23 (type -> BOOL_TYPE .)
    GETS            reduce using rule 23 (type -> BOOL_TYPE .)
    LSQRBRACKET     reduce using rule 23 (type -> BOOL_TYPE .)


state 46

    (15) feature -> ID LPAREN formal_parameter_list . RPAREN COLON type LBRACE expression RBRACE
    (27) formal_parameter_list -> formal_parameter_list . formal_parameter
    (29) formal_parameter -> . ID COLON type
    (30) formal_parameter -> . ID LSQRBRACKET RSQRBRACKET COLON type

    RPAREN          shift and go to state 55
    ID              shift and go to state 49

    formal_parameter               shift and go to state 56

state 47

    (16) feature -> ID LPAREN RPAREN . COLON type LBRACE expression RBRACE

    COLON           shift and go to state 57


state 48

    (28) formal_parameter_list -> formal_parameter .

    RPAREN          reduce using rule 28 (formal_parameter_list -> formal_parameter .)
    ID              reduce using rule 28 (formal_parameter_list -> formal_parameter .)


state 49

    (29) formal_parameter -> ID . COLON type
    (30) formal_parameter -> ID . LSQRBRACKET RSQRBRACKET COLON type

    COLON           shift and go to state 58
    LSQRBRACKET     shift and go to state 59


state 50

    (13) feature -> modifier ID LPAREN . formal_parameter_list RPAREN COLON type LBRACE expression RBRACE
    (14) feature -> modifier ID LPAREN . RPAREN COLON type LBRACE expression RBRACE
    (27) formal_parameter_list -> . formal_parameter_list formal_parameter
    (28) formal_parameter_list -> . formal_parameter
    (29) formal_parameter -> . ID COLON type
    (30) formal_parameter -> . ID LSQRBRACKET RSQRBRACKET COLON type

    RPAREN          shift and go to state 61
    ID              shift and go to state 49

    formal_parameter_list          shift and go to state 60
    formal_parameter               shift and go to state 48

state 51

    (7) class -> CLASS CLASS_TYPE INHERITS CLASS_TYPE LBRACE features_list RBRACE .

    SEMICOLON       reduce using rule 7 (class -> CLASS CLASS_TYPE INHERITS CLASS_TYPE LBRACE features_list RBRACE .)


state 52

    (32) formal -> ID COLON type SEMICOLON .

    IN              reduce using rule 32 (formal -> ID COLON type SEMICOLON .)
    SEMICOLON       reduce using rule 32 (formal -> ID COLON type SEMICOLON .)


state 53

    (33) formal -> ID COLON type LSQRBRACKET . RSQRBRACKET SEMICOLON

    RSQRBRACKET     shift and go to state 62


state 54

    (31) formal -> ID COLON type GETS . expression SEMICOLON
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 86
    if_then_else                   shift and go to state 76

state 55

    (15) feature -> ID LPAREN formal_parameter_list RPAREN . COLON type LBRACE expression RBRACE

    COLON           shift and go to state 87


state 56

    (27) formal_parameter_list -> formal_parameter_list formal_parameter .

    RPAREN          reduce using rule 27 (formal_parameter_list -> formal_parameter_list formal_parameter .)
    ID              reduce using rule 27 (formal_parameter_list -> formal_parameter_list formal_parameter .)


state 57

    (16) feature -> ID LPAREN RPAREN COLON . type LBRACE expression RBRACE
    (21) type -> . CLASS_TYPE
    (22) type -> . INTEGER_TYPE
    (23) type -> . BOOL_TYPE
    (24) type -> . STRING_TYPE
    (25) type -> . OBJECT
    (26) type -> . SELF_TYPE

    CLASS_TYPE      shift and go to state 40
    INTEGER_TYPE    shift and go to state 43
    BOOL_TYPE       shift and go to state 45
    STRING_TYPE     shift and go to state 42
    OBJECT          shift and go to state 41
    SELF_TYPE       shift and go to state 39

    type                           shift and go to state 88

state 58

    (29) formal_parameter -> ID COLON . type
    (21) type -> . CLASS_TYPE
    (22) type -> . INTEGER_TYPE
    (23) type -> . BOOL_TYPE
    (24) type -> . STRING_TYPE
    (25) type -> . OBJECT
    (26) type -> . SELF_TYPE

    CLASS_TYPE      shift and go to state 40
    INTEGER_TYPE    shift and go to state 43
    BOOL_TYPE       shift and go to state 45
    STRING_TYPE     shift and go to state 42
    OBJECT          shift and go to state 41
    SELF_TYPE       shift and go to state 39

    type                           shift and go to state 89

state 59

    (30) formal_parameter -> ID LSQRBRACKET . RSQRBRACKET COLON type

    RSQRBRACKET     shift and go to state 90


state 60

    (13) feature -> modifier ID LPAREN formal_parameter_list . RPAREN COLON type LBRACE expression RBRACE
    (27) formal_parameter_list -> formal_parameter_list . formal_parameter
    (29) formal_parameter -> . ID COLON type
    (30) formal_parameter -> . ID LSQRBRACKET RSQRBRACKET COLON type

    RPAREN          shift and go to state 91
    ID              shift and go to state 49

    formal_parameter               shift and go to state 56

state 61

    (14) feature -> modifier ID LPAREN RPAREN . COLON type LBRACE expression RBRACE

    COLON           shift and go to state 92


state 62

    (33) formal -> ID COLON type LSQRBRACKET RSQRBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 93


state 63

    (46) expression -> let_expression .

    PERIOD          reduce using rule 46 (expression -> let_expression .)
    AT              reduce using rule 46 (expression -> let_expression .)
    PLUS            reduce using rule 46 (expression -> let_expression .)
    MINUS           reduce using rule 46 (expression -> let_expression .)
    TIMES           reduce using rule 46 (expression -> let_expression .)
    DIVIDE          reduce using rule 46 (expression -> let_expression .)
    MOD             reduce using rule 46 (expression -> let_expression .)
    LT              reduce using rule 46 (expression -> let_expression .)
    GT              reduce using rule 46 (expression -> let_expression .)
    LTEQ            reduce using rule 46 (expression -> let_expression .)
    GTEQ            reduce using rule 46 (expression -> let_expression .)
    EQUAL           reduce using rule 46 (expression -> let_expression .)
    OR              reduce using rule 46 (expression -> let_expression .)
    AND             reduce using rule 46 (expression -> let_expression .)
    SEMICOLON       reduce using rule 46 (expression -> let_expression .)
    LOOP            reduce using rule 46 (expression -> let_expression .)
    THEN            reduce using rule 46 (expression -> let_expression .)
    RPAREN          reduce using rule 46 (expression -> let_expression .)
    RSQRBRACKET     reduce using rule 46 (expression -> let_expression .)
    ID              reduce using rule 46 (expression -> let_expression .)
    NEW             reduce using rule 46 (expression -> let_expression .)
    ISVOID          reduce using rule 46 (expression -> let_expression .)
    NOT             reduce using rule 46 (expression -> let_expression .)
    TILDA           reduce using rule 46 (expression -> let_expression .)
    LPAREN          reduce using rule 46 (expression -> let_expression .)
    SELF            reduce using rule 46 (expression -> let_expression .)
    INTEGER         reduce using rule 46 (expression -> let_expression .)
    STRING          reduce using rule 46 (expression -> let_expression .)
    TRUE            reduce using rule 46 (expression -> let_expression .)
    FALSE           reduce using rule 46 (expression -> let_expression .)
    BREAK           reduce using rule 46 (expression -> let_expression .)
    CONTINUE        reduce using rule 46 (expression -> let_expression .)
    IF              reduce using rule 46 (expression -> let_expression .)
    WHILE           reduce using rule 46 (expression -> let_expression .)
    FOR             reduce using rule 46 (expression -> let_expression .)
    LBRACE          reduce using rule 46 (expression -> let_expression .)
    LET             reduce using rule 46 (expression -> let_expression .)
    RBRACE          reduce using rule 46 (expression -> let_expression .)
    POOL            reduce using rule 46 (expression -> let_expression .)
    ELSE            reduce using rule 46 (expression -> let_expression .)
    FI              reduce using rule 46 (expression -> let_expression .)


state 64

    (76) while -> WHILE . expression LOOP expression POOL
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 94
    if_then_else                   shift and go to state 76

state 65

    (75) if_then_else -> IF . expression THEN expression ELSE expression FI
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 95
    if_then_else                   shift and go to state 76

state 66

    (47) expression -> NEW . type
    (21) type -> . CLASS_TYPE
    (22) type -> . INTEGER_TYPE
    (23) type -> . BOOL_TYPE
    (24) type -> . STRING_TYPE
    (25) type -> . OBJECT
    (26) type -> . SELF_TYPE

    CLASS_TYPE      shift and go to state 40
    INTEGER_TYPE    shift and go to state 43
    BOOL_TYPE       shift and go to state 45
    STRING_TYPE     shift and go to state 42
    OBJECT          shift and go to state 41
    SELF_TYPE       shift and go to state 39

    type                           shift and go to state 96

state 67

    (69) expression -> TRUE .

    PERIOD          reduce using rule 69 (expression -> TRUE .)
    AT              reduce using rule 69 (expression -> TRUE .)
    PLUS            reduce using rule 69 (expression -> TRUE .)
    MINUS           reduce using rule 69 (expression -> TRUE .)
    TIMES           reduce using rule 69 (expression -> TRUE .)
    DIVIDE          reduce using rule 69 (expression -> TRUE .)
    MOD             reduce using rule 69 (expression -> TRUE .)
    LT              reduce using rule 69 (expression -> TRUE .)
    GT              reduce using rule 69 (expression -> TRUE .)
    LTEQ            reduce using rule 69 (expression -> TRUE .)
    GTEQ            reduce using rule 69 (expression -> TRUE .)
    EQUAL           reduce using rule 69 (expression -> TRUE .)
    OR              reduce using rule 69 (expression -> TRUE .)
    AND             reduce using rule 69 (expression -> TRUE .)
    SEMICOLON       reduce using rule 69 (expression -> TRUE .)
    LOOP            reduce using rule 69 (expression -> TRUE .)
    THEN            reduce using rule 69 (expression -> TRUE .)
    RPAREN          reduce using rule 69 (expression -> TRUE .)
    RSQRBRACKET     reduce using rule 69 (expression -> TRUE .)
    ID              reduce using rule 69 (expression -> TRUE .)
    NEW             reduce using rule 69 (expression -> TRUE .)
    ISVOID          reduce using rule 69 (expression -> TRUE .)
    NOT             reduce using rule 69 (expression -> TRUE .)
    TILDA           reduce using rule 69 (expression -> TRUE .)
    LPAREN          reduce using rule 69 (expression -> TRUE .)
    SELF            reduce using rule 69 (expression -> TRUE .)
    INTEGER         reduce using rule 69 (expression -> TRUE .)
    STRING          reduce using rule 69 (expression -> TRUE .)
    TRUE            reduce using rule 69 (expression -> TRUE .)
    FALSE           reduce using rule 69 (expression -> TRUE .)
    BREAK           reduce using rule 69 (expression -> TRUE .)
    CONTINUE        reduce using rule 69 (expression -> TRUE .)
    IF              reduce using rule 69 (expression -> TRUE .)
    WHILE           reduce using rule 69 (expression -> TRUE .)
    FOR             reduce using rule 69 (expression -> TRUE .)
    LBRACE          reduce using rule 69 (expression -> TRUE .)
    LET             reduce using rule 69 (expression -> TRUE .)
    RBRACE          reduce using rule 69 (expression -> TRUE .)
    POOL            reduce using rule 69 (expression -> TRUE .)
    ELSE            reduce using rule 69 (expression -> TRUE .)
    FI              reduce using rule 69 (expression -> TRUE .)


state 68

    (68) expression -> STRING .

    PERIOD          reduce using rule 68 (expression -> STRING .)
    AT              reduce using rule 68 (expression -> STRING .)
    PLUS            reduce using rule 68 (expression -> STRING .)
    MINUS           reduce using rule 68 (expression -> STRING .)
    TIMES           reduce using rule 68 (expression -> STRING .)
    DIVIDE          reduce using rule 68 (expression -> STRING .)
    MOD             reduce using rule 68 (expression -> STRING .)
    LT              reduce using rule 68 (expression -> STRING .)
    GT              reduce using rule 68 (expression -> STRING .)
    LTEQ            reduce using rule 68 (expression -> STRING .)
    GTEQ            reduce using rule 68 (expression -> STRING .)
    EQUAL           reduce using rule 68 (expression -> STRING .)
    OR              reduce using rule 68 (expression -> STRING .)
    AND             reduce using rule 68 (expression -> STRING .)
    SEMICOLON       reduce using rule 68 (expression -> STRING .)
    LOOP            reduce using rule 68 (expression -> STRING .)
    THEN            reduce using rule 68 (expression -> STRING .)
    RPAREN          reduce using rule 68 (expression -> STRING .)
    RSQRBRACKET     reduce using rule 68 (expression -> STRING .)
    ID              reduce using rule 68 (expression -> STRING .)
    NEW             reduce using rule 68 (expression -> STRING .)
    ISVOID          reduce using rule 68 (expression -> STRING .)
    NOT             reduce using rule 68 (expression -> STRING .)
    TILDA           reduce using rule 68 (expression -> STRING .)
    LPAREN          reduce using rule 68 (expression -> STRING .)
    SELF            reduce using rule 68 (expression -> STRING .)
    INTEGER         reduce using rule 68 (expression -> STRING .)
    STRING          reduce using rule 68 (expression -> STRING .)
    TRUE            reduce using rule 68 (expression -> STRING .)
    FALSE           reduce using rule 68 (expression -> STRING .)
    BREAK           reduce using rule 68 (expression -> STRING .)
    CONTINUE        reduce using rule 68 (expression -> STRING .)
    IF              reduce using rule 68 (expression -> STRING .)
    WHILE           reduce using rule 68 (expression -> STRING .)
    FOR             reduce using rule 68 (expression -> STRING .)
    LBRACE          reduce using rule 68 (expression -> STRING .)
    LET             reduce using rule 68 (expression -> STRING .)
    RBRACE          reduce using rule 68 (expression -> STRING .)
    POOL            reduce using rule 68 (expression -> STRING .)
    ELSE            reduce using rule 68 (expression -> STRING .)
    FI              reduce using rule 68 (expression -> STRING .)


state 69

    (44) expression -> for .

    PERIOD          reduce using rule 44 (expression -> for .)
    AT              reduce using rule 44 (expression -> for .)
    PLUS            reduce using rule 44 (expression -> for .)
    MINUS           reduce using rule 44 (expression -> for .)
    TIMES           reduce using rule 44 (expression -> for .)
    DIVIDE          reduce using rule 44 (expression -> for .)
    MOD             reduce using rule 44 (expression -> for .)
    LT              reduce using rule 44 (expression -> for .)
    GT              reduce using rule 44 (expression -> for .)
    LTEQ            reduce using rule 44 (expression -> for .)
    GTEQ            reduce using rule 44 (expression -> for .)
    EQUAL           reduce using rule 44 (expression -> for .)
    OR              reduce using rule 44 (expression -> for .)
    AND             reduce using rule 44 (expression -> for .)
    SEMICOLON       reduce using rule 44 (expression -> for .)
    LOOP            reduce using rule 44 (expression -> for .)
    THEN            reduce using rule 44 (expression -> for .)
    RPAREN          reduce using rule 44 (expression -> for .)
    RSQRBRACKET     reduce using rule 44 (expression -> for .)
    ID              reduce using rule 44 (expression -> for .)
    NEW             reduce using rule 44 (expression -> for .)
    ISVOID          reduce using rule 44 (expression -> for .)
    NOT             reduce using rule 44 (expression -> for .)
    TILDA           reduce using rule 44 (expression -> for .)
    LPAREN          reduce using rule 44 (expression -> for .)
    SELF            reduce using rule 44 (expression -> for .)
    INTEGER         reduce using rule 44 (expression -> for .)
    STRING          reduce using rule 44 (expression -> for .)
    TRUE            reduce using rule 44 (expression -> for .)
    FALSE           reduce using rule 44 (expression -> for .)
    BREAK           reduce using rule 44 (expression -> for .)
    CONTINUE        reduce using rule 44 (expression -> for .)
    IF              reduce using rule 44 (expression -> for .)
    WHILE           reduce using rule 44 (expression -> for .)
    FOR             reduce using rule 44 (expression -> for .)
    LBRACE          reduce using rule 44 (expression -> for .)
    LET             reduce using rule 44 (expression -> for .)
    RBRACE          reduce using rule 44 (expression -> for .)
    POOL            reduce using rule 44 (expression -> for .)
    ELSE            reduce using rule 44 (expression -> for .)
    FI              reduce using rule 44 (expression -> for .)


state 70

    (48) expression -> ISVOID . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 97
    if_then_else                   shift and go to state 76

state 71

    (62) expression -> TILDA . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 98
    if_then_else                   shift and go to state 76

state 72

    (77) for -> FOR . LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL

    LPAREN          shift and go to state 99


state 73

    (63) expression -> LPAREN . expression RPAREN
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 100
    if_then_else                   shift and go to state 76

state 74

    (45) expression -> block_expression .

    PERIOD          reduce using rule 45 (expression -> block_expression .)
    AT              reduce using rule 45 (expression -> block_expression .)
    PLUS            reduce using rule 45 (expression -> block_expression .)
    MINUS           reduce using rule 45 (expression -> block_expression .)
    TIMES           reduce using rule 45 (expression -> block_expression .)
    DIVIDE          reduce using rule 45 (expression -> block_expression .)
    MOD             reduce using rule 45 (expression -> block_expression .)
    LT              reduce using rule 45 (expression -> block_expression .)
    GT              reduce using rule 45 (expression -> block_expression .)
    LTEQ            reduce using rule 45 (expression -> block_expression .)
    GTEQ            reduce using rule 45 (expression -> block_expression .)
    EQUAL           reduce using rule 45 (expression -> block_expression .)
    OR              reduce using rule 45 (expression -> block_expression .)
    AND             reduce using rule 45 (expression -> block_expression .)
    SEMICOLON       reduce using rule 45 (expression -> block_expression .)
    LOOP            reduce using rule 45 (expression -> block_expression .)
    THEN            reduce using rule 45 (expression -> block_expression .)
    RPAREN          reduce using rule 45 (expression -> block_expression .)
    RSQRBRACKET     reduce using rule 45 (expression -> block_expression .)
    ID              reduce using rule 45 (expression -> block_expression .)
    NEW             reduce using rule 45 (expression -> block_expression .)
    ISVOID          reduce using rule 45 (expression -> block_expression .)
    NOT             reduce using rule 45 (expression -> block_expression .)
    TILDA           reduce using rule 45 (expression -> block_expression .)
    LPAREN          reduce using rule 45 (expression -> block_expression .)
    SELF            reduce using rule 45 (expression -> block_expression .)
    INTEGER         reduce using rule 45 (expression -> block_expression .)
    STRING          reduce using rule 45 (expression -> block_expression .)
    TRUE            reduce using rule 45 (expression -> block_expression .)
    FALSE           reduce using rule 45 (expression -> block_expression .)
    BREAK           reduce using rule 45 (expression -> block_expression .)
    CONTINUE        reduce using rule 45 (expression -> block_expression .)
    IF              reduce using rule 45 (expression -> block_expression .)
    WHILE           reduce using rule 45 (expression -> block_expression .)
    FOR             reduce using rule 45 (expression -> block_expression .)
    LBRACE          reduce using rule 45 (expression -> block_expression .)
    LET             reduce using rule 45 (expression -> block_expression .)
    RBRACE          reduce using rule 45 (expression -> block_expression .)
    POOL            reduce using rule 45 (expression -> block_expression .)
    ELSE            reduce using rule 45 (expression -> block_expression .)
    FI              reduce using rule 45 (expression -> block_expression .)


state 75

    (34) expression -> ID . GETS expression
    (35) expression -> ID . LSQRBRACKET expression RSQRBRACKET GETS expression
    (38) expression -> ID . LPAREN argument_list RPAREN
    (39) expression -> ID . LPAREN RPAREN
    (65) expression -> ID .
    (66) expression -> ID . LSQRBRACKET expression RSQRBRACKET

  ! shift/reduce conflict for LPAREN resolved as shift
    GETS            shift and go to state 103
    LSQRBRACKET     shift and go to state 101
    LPAREN          shift and go to state 102
    PERIOD          reduce using rule 65 (expression -> ID .)
    AT              reduce using rule 65 (expression -> ID .)
    PLUS            reduce using rule 65 (expression -> ID .)
    MINUS           reduce using rule 65 (expression -> ID .)
    TIMES           reduce using rule 65 (expression -> ID .)
    DIVIDE          reduce using rule 65 (expression -> ID .)
    MOD             reduce using rule 65 (expression -> ID .)
    LT              reduce using rule 65 (expression -> ID .)
    GT              reduce using rule 65 (expression -> ID .)
    LTEQ            reduce using rule 65 (expression -> ID .)
    GTEQ            reduce using rule 65 (expression -> ID .)
    EQUAL           reduce using rule 65 (expression -> ID .)
    OR              reduce using rule 65 (expression -> ID .)
    AND             reduce using rule 65 (expression -> ID .)
    SEMICOLON       reduce using rule 65 (expression -> ID .)
    LOOP            reduce using rule 65 (expression -> ID .)
    THEN            reduce using rule 65 (expression -> ID .)
    RPAREN          reduce using rule 65 (expression -> ID .)
    RSQRBRACKET     reduce using rule 65 (expression -> ID .)
    ID              reduce using rule 65 (expression -> ID .)
    NEW             reduce using rule 65 (expression -> ID .)
    ISVOID          reduce using rule 65 (expression -> ID .)
    NOT             reduce using rule 65 (expression -> ID .)
    TILDA           reduce using rule 65 (expression -> ID .)
    SELF            reduce using rule 65 (expression -> ID .)
    INTEGER         reduce using rule 65 (expression -> ID .)
    STRING          reduce using rule 65 (expression -> ID .)
    TRUE            reduce using rule 65 (expression -> ID .)
    FALSE           reduce using rule 65 (expression -> ID .)
    BREAK           reduce using rule 65 (expression -> ID .)
    CONTINUE        reduce using rule 65 (expression -> ID .)
    IF              reduce using rule 65 (expression -> ID .)
    WHILE           reduce using rule 65 (expression -> ID .)
    FOR             reduce using rule 65 (expression -> ID .)
    LBRACE          reduce using rule 65 (expression -> ID .)
    LET             reduce using rule 65 (expression -> ID .)
    RBRACE          reduce using rule 65 (expression -> ID .)
    POOL            reduce using rule 65 (expression -> ID .)
    ELSE            reduce using rule 65 (expression -> ID .)
    FI              reduce using rule 65 (expression -> ID .)

  ! LPAREN          [ reduce using rule 65 (expression -> ID .) ]


state 76

    (42) expression -> if_then_else .

    PERIOD          reduce using rule 42 (expression -> if_then_else .)
    AT              reduce using rule 42 (expression -> if_then_else .)
    PLUS            reduce using rule 42 (expression -> if_then_else .)
    MINUS           reduce using rule 42 (expression -> if_then_else .)
    TIMES           reduce using rule 42 (expression -> if_then_else .)
    DIVIDE          reduce using rule 42 (expression -> if_then_else .)
    MOD             reduce using rule 42 (expression -> if_then_else .)
    LT              reduce using rule 42 (expression -> if_then_else .)
    GT              reduce using rule 42 (expression -> if_then_else .)
    LTEQ            reduce using rule 42 (expression -> if_then_else .)
    GTEQ            reduce using rule 42 (expression -> if_then_else .)
    EQUAL           reduce using rule 42 (expression -> if_then_else .)
    OR              reduce using rule 42 (expression -> if_then_else .)
    AND             reduce using rule 42 (expression -> if_then_else .)
    SEMICOLON       reduce using rule 42 (expression -> if_then_else .)
    LOOP            reduce using rule 42 (expression -> if_then_else .)
    THEN            reduce using rule 42 (expression -> if_then_else .)
    RPAREN          reduce using rule 42 (expression -> if_then_else .)
    RSQRBRACKET     reduce using rule 42 (expression -> if_then_else .)
    ID              reduce using rule 42 (expression -> if_then_else .)
    NEW             reduce using rule 42 (expression -> if_then_else .)
    ISVOID          reduce using rule 42 (expression -> if_then_else .)
    NOT             reduce using rule 42 (expression -> if_then_else .)
    TILDA           reduce using rule 42 (expression -> if_then_else .)
    LPAREN          reduce using rule 42 (expression -> if_then_else .)
    SELF            reduce using rule 42 (expression -> if_then_else .)
    INTEGER         reduce using rule 42 (expression -> if_then_else .)
    STRING          reduce using rule 42 (expression -> if_then_else .)
    TRUE            reduce using rule 42 (expression -> if_then_else .)
    FALSE           reduce using rule 42 (expression -> if_then_else .)
    BREAK           reduce using rule 42 (expression -> if_then_else .)
    CONTINUE        reduce using rule 42 (expression -> if_then_else .)
    IF              reduce using rule 42 (expression -> if_then_else .)
    WHILE           reduce using rule 42 (expression -> if_then_else .)
    FOR             reduce using rule 42 (expression -> if_then_else .)
    LBRACE          reduce using rule 42 (expression -> if_then_else .)
    LET             reduce using rule 42 (expression -> if_then_else .)
    RBRACE          reduce using rule 42 (expression -> if_then_else .)
    POOL            reduce using rule 42 (expression -> if_then_else .)
    ELSE            reduce using rule 42 (expression -> if_then_else .)
    FI              reduce using rule 42 (expression -> if_then_else .)


state 77

    (78) block_expression -> LBRACE . block_list RBRACE
    (79) block_list -> . block_list expression SEMICOLON
    (80) block_list -> . expression SEMICOLON
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    block_expression               shift and go to state 74
    while                          shift and go to state 82
    block_list                     shift and go to state 104
    expression                     shift and go to state 105
    if_then_else                   shift and go to state 76

state 78

    (70) expression -> FALSE .

    PERIOD          reduce using rule 70 (expression -> FALSE .)
    AT              reduce using rule 70 (expression -> FALSE .)
    PLUS            reduce using rule 70 (expression -> FALSE .)
    MINUS           reduce using rule 70 (expression -> FALSE .)
    TIMES           reduce using rule 70 (expression -> FALSE .)
    DIVIDE          reduce using rule 70 (expression -> FALSE .)
    MOD             reduce using rule 70 (expression -> FALSE .)
    LT              reduce using rule 70 (expression -> FALSE .)
    GT              reduce using rule 70 (expression -> FALSE .)
    LTEQ            reduce using rule 70 (expression -> FALSE .)
    GTEQ            reduce using rule 70 (expression -> FALSE .)
    EQUAL           reduce using rule 70 (expression -> FALSE .)
    OR              reduce using rule 70 (expression -> FALSE .)
    AND             reduce using rule 70 (expression -> FALSE .)
    SEMICOLON       reduce using rule 70 (expression -> FALSE .)
    LOOP            reduce using rule 70 (expression -> FALSE .)
    THEN            reduce using rule 70 (expression -> FALSE .)
    RPAREN          reduce using rule 70 (expression -> FALSE .)
    RSQRBRACKET     reduce using rule 70 (expression -> FALSE .)
    ID              reduce using rule 70 (expression -> FALSE .)
    NEW             reduce using rule 70 (expression -> FALSE .)
    ISVOID          reduce using rule 70 (expression -> FALSE .)
    NOT             reduce using rule 70 (expression -> FALSE .)
    TILDA           reduce using rule 70 (expression -> FALSE .)
    LPAREN          reduce using rule 70 (expression -> FALSE .)
    SELF            reduce using rule 70 (expression -> FALSE .)
    INTEGER         reduce using rule 70 (expression -> FALSE .)
    STRING          reduce using rule 70 (expression -> FALSE .)
    TRUE            reduce using rule 70 (expression -> FALSE .)
    FALSE           reduce using rule 70 (expression -> FALSE .)
    BREAK           reduce using rule 70 (expression -> FALSE .)
    CONTINUE        reduce using rule 70 (expression -> FALSE .)
    IF              reduce using rule 70 (expression -> FALSE .)
    WHILE           reduce using rule 70 (expression -> FALSE .)
    FOR             reduce using rule 70 (expression -> FALSE .)
    LBRACE          reduce using rule 70 (expression -> FALSE .)
    LET             reduce using rule 70 (expression -> FALSE .)
    RBRACE          reduce using rule 70 (expression -> FALSE .)
    POOL            reduce using rule 70 (expression -> FALSE .)
    ELSE            reduce using rule 70 (expression -> FALSE .)
    FI              reduce using rule 70 (expression -> FALSE .)


state 79

    (67) expression -> INTEGER .

    PERIOD          reduce using rule 67 (expression -> INTEGER .)
    AT              reduce using rule 67 (expression -> INTEGER .)
    PLUS            reduce using rule 67 (expression -> INTEGER .)
    MINUS           reduce using rule 67 (expression -> INTEGER .)
    TIMES           reduce using rule 67 (expression -> INTEGER .)
    DIVIDE          reduce using rule 67 (expression -> INTEGER .)
    MOD             reduce using rule 67 (expression -> INTEGER .)
    LT              reduce using rule 67 (expression -> INTEGER .)
    GT              reduce using rule 67 (expression -> INTEGER .)
    LTEQ            reduce using rule 67 (expression -> INTEGER .)
    GTEQ            reduce using rule 67 (expression -> INTEGER .)
    EQUAL           reduce using rule 67 (expression -> INTEGER .)
    OR              reduce using rule 67 (expression -> INTEGER .)
    AND             reduce using rule 67 (expression -> INTEGER .)
    SEMICOLON       reduce using rule 67 (expression -> INTEGER .)
    LOOP            reduce using rule 67 (expression -> INTEGER .)
    THEN            reduce using rule 67 (expression -> INTEGER .)
    RPAREN          reduce using rule 67 (expression -> INTEGER .)
    RSQRBRACKET     reduce using rule 67 (expression -> INTEGER .)
    ID              reduce using rule 67 (expression -> INTEGER .)
    NEW             reduce using rule 67 (expression -> INTEGER .)
    ISVOID          reduce using rule 67 (expression -> INTEGER .)
    NOT             reduce using rule 67 (expression -> INTEGER .)
    TILDA           reduce using rule 67 (expression -> INTEGER .)
    LPAREN          reduce using rule 67 (expression -> INTEGER .)
    SELF            reduce using rule 67 (expression -> INTEGER .)
    INTEGER         reduce using rule 67 (expression -> INTEGER .)
    STRING          reduce using rule 67 (expression -> INTEGER .)
    TRUE            reduce using rule 67 (expression -> INTEGER .)
    FALSE           reduce using rule 67 (expression -> INTEGER .)
    BREAK           reduce using rule 67 (expression -> INTEGER .)
    CONTINUE        reduce using rule 67 (expression -> INTEGER .)
    IF              reduce using rule 67 (expression -> INTEGER .)
    WHILE           reduce using rule 67 (expression -> INTEGER .)
    FOR             reduce using rule 67 (expression -> INTEGER .)
    LBRACE          reduce using rule 67 (expression -> INTEGER .)
    LET             reduce using rule 67 (expression -> INTEGER .)
    RBRACE          reduce using rule 67 (expression -> INTEGER .)
    POOL            reduce using rule 67 (expression -> INTEGER .)
    ELSE            reduce using rule 67 (expression -> INTEGER .)
    FI              reduce using rule 67 (expression -> INTEGER .)


state 80

    (71) expression -> BREAK .

    PERIOD          reduce using rule 71 (expression -> BREAK .)
    AT              reduce using rule 71 (expression -> BREAK .)
    PLUS            reduce using rule 71 (expression -> BREAK .)
    MINUS           reduce using rule 71 (expression -> BREAK .)
    TIMES           reduce using rule 71 (expression -> BREAK .)
    DIVIDE          reduce using rule 71 (expression -> BREAK .)
    MOD             reduce using rule 71 (expression -> BREAK .)
    LT              reduce using rule 71 (expression -> BREAK .)
    GT              reduce using rule 71 (expression -> BREAK .)
    LTEQ            reduce using rule 71 (expression -> BREAK .)
    GTEQ            reduce using rule 71 (expression -> BREAK .)
    EQUAL           reduce using rule 71 (expression -> BREAK .)
    OR              reduce using rule 71 (expression -> BREAK .)
    AND             reduce using rule 71 (expression -> BREAK .)
    SEMICOLON       reduce using rule 71 (expression -> BREAK .)
    LOOP            reduce using rule 71 (expression -> BREAK .)
    THEN            reduce using rule 71 (expression -> BREAK .)
    RPAREN          reduce using rule 71 (expression -> BREAK .)
    RSQRBRACKET     reduce using rule 71 (expression -> BREAK .)
    ID              reduce using rule 71 (expression -> BREAK .)
    NEW             reduce using rule 71 (expression -> BREAK .)
    ISVOID          reduce using rule 71 (expression -> BREAK .)
    NOT             reduce using rule 71 (expression -> BREAK .)
    TILDA           reduce using rule 71 (expression -> BREAK .)
    LPAREN          reduce using rule 71 (expression -> BREAK .)
    SELF            reduce using rule 71 (expression -> BREAK .)
    INTEGER         reduce using rule 71 (expression -> BREAK .)
    STRING          reduce using rule 71 (expression -> BREAK .)
    TRUE            reduce using rule 71 (expression -> BREAK .)
    FALSE           reduce using rule 71 (expression -> BREAK .)
    BREAK           reduce using rule 71 (expression -> BREAK .)
    CONTINUE        reduce using rule 71 (expression -> BREAK .)
    IF              reduce using rule 71 (expression -> BREAK .)
    WHILE           reduce using rule 71 (expression -> BREAK .)
    FOR             reduce using rule 71 (expression -> BREAK .)
    LBRACE          reduce using rule 71 (expression -> BREAK .)
    LET             reduce using rule 71 (expression -> BREAK .)
    RBRACE          reduce using rule 71 (expression -> BREAK .)
    POOL            reduce using rule 71 (expression -> BREAK .)
    ELSE            reduce using rule 71 (expression -> BREAK .)
    FI              reduce using rule 71 (expression -> BREAK .)


state 81

    (64) expression -> SELF .

    PERIOD          reduce using rule 64 (expression -> SELF .)
    AT              reduce using rule 64 (expression -> SELF .)
    PLUS            reduce using rule 64 (expression -> SELF .)
    MINUS           reduce using rule 64 (expression -> SELF .)
    TIMES           reduce using rule 64 (expression -> SELF .)
    DIVIDE          reduce using rule 64 (expression -> SELF .)
    MOD             reduce using rule 64 (expression -> SELF .)
    LT              reduce using rule 64 (expression -> SELF .)
    GT              reduce using rule 64 (expression -> SELF .)
    LTEQ            reduce using rule 64 (expression -> SELF .)
    GTEQ            reduce using rule 64 (expression -> SELF .)
    EQUAL           reduce using rule 64 (expression -> SELF .)
    OR              reduce using rule 64 (expression -> SELF .)
    AND             reduce using rule 64 (expression -> SELF .)
    SEMICOLON       reduce using rule 64 (expression -> SELF .)
    LOOP            reduce using rule 64 (expression -> SELF .)
    THEN            reduce using rule 64 (expression -> SELF .)
    RPAREN          reduce using rule 64 (expression -> SELF .)
    RSQRBRACKET     reduce using rule 64 (expression -> SELF .)
    ID              reduce using rule 64 (expression -> SELF .)
    NEW             reduce using rule 64 (expression -> SELF .)
    ISVOID          reduce using rule 64 (expression -> SELF .)
    NOT             reduce using rule 64 (expression -> SELF .)
    TILDA           reduce using rule 64 (expression -> SELF .)
    LPAREN          reduce using rule 64 (expression -> SELF .)
    SELF            reduce using rule 64 (expression -> SELF .)
    INTEGER         reduce using rule 64 (expression -> SELF .)
    STRING          reduce using rule 64 (expression -> SELF .)
    TRUE            reduce using rule 64 (expression -> SELF .)
    FALSE           reduce using rule 64 (expression -> SELF .)
    BREAK           reduce using rule 64 (expression -> SELF .)
    CONTINUE        reduce using rule 64 (expression -> SELF .)
    IF              reduce using rule 64 (expression -> SELF .)
    WHILE           reduce using rule 64 (expression -> SELF .)
    FOR             reduce using rule 64 (expression -> SELF .)
    LBRACE          reduce using rule 64 (expression -> SELF .)
    LET             reduce using rule 64 (expression -> SELF .)
    RBRACE          reduce using rule 64 (expression -> SELF .)
    POOL            reduce using rule 64 (expression -> SELF .)
    ELSE            reduce using rule 64 (expression -> SELF .)
    FI              reduce using rule 64 (expression -> SELF .)


state 82

    (43) expression -> while .

    PERIOD          reduce using rule 43 (expression -> while .)
    AT              reduce using rule 43 (expression -> while .)
    PLUS            reduce using rule 43 (expression -> while .)
    MINUS           reduce using rule 43 (expression -> while .)
    TIMES           reduce using rule 43 (expression -> while .)
    DIVIDE          reduce using rule 43 (expression -> while .)
    MOD             reduce using rule 43 (expression -> while .)
    LT              reduce using rule 43 (expression -> while .)
    GT              reduce using rule 43 (expression -> while .)
    LTEQ            reduce using rule 43 (expression -> while .)
    GTEQ            reduce using rule 43 (expression -> while .)
    EQUAL           reduce using rule 43 (expression -> while .)
    OR              reduce using rule 43 (expression -> while .)
    AND             reduce using rule 43 (expression -> while .)
    SEMICOLON       reduce using rule 43 (expression -> while .)
    LOOP            reduce using rule 43 (expression -> while .)
    THEN            reduce using rule 43 (expression -> while .)
    RPAREN          reduce using rule 43 (expression -> while .)
    RSQRBRACKET     reduce using rule 43 (expression -> while .)
    ID              reduce using rule 43 (expression -> while .)
    NEW             reduce using rule 43 (expression -> while .)
    ISVOID          reduce using rule 43 (expression -> while .)
    NOT             reduce using rule 43 (expression -> while .)
    TILDA           reduce using rule 43 (expression -> while .)
    LPAREN          reduce using rule 43 (expression -> while .)
    SELF            reduce using rule 43 (expression -> while .)
    INTEGER         reduce using rule 43 (expression -> while .)
    STRING          reduce using rule 43 (expression -> while .)
    TRUE            reduce using rule 43 (expression -> while .)
    FALSE           reduce using rule 43 (expression -> while .)
    BREAK           reduce using rule 43 (expression -> while .)
    CONTINUE        reduce using rule 43 (expression -> while .)
    IF              reduce using rule 43 (expression -> while .)
    WHILE           reduce using rule 43 (expression -> while .)
    FOR             reduce using rule 43 (expression -> while .)
    LBRACE          reduce using rule 43 (expression -> while .)
    LET             reduce using rule 43 (expression -> while .)
    RBRACE          reduce using rule 43 (expression -> while .)
    POOL            reduce using rule 43 (expression -> while .)
    ELSE            reduce using rule 43 (expression -> while .)
    FI              reduce using rule 43 (expression -> while .)


state 83

    (72) expression -> CONTINUE .

    PERIOD          reduce using rule 72 (expression -> CONTINUE .)
    AT              reduce using rule 72 (expression -> CONTINUE .)
    PLUS            reduce using rule 72 (expression -> CONTINUE .)
    MINUS           reduce using rule 72 (expression -> CONTINUE .)
    TIMES           reduce using rule 72 (expression -> CONTINUE .)
    DIVIDE          reduce using rule 72 (expression -> CONTINUE .)
    MOD             reduce using rule 72 (expression -> CONTINUE .)
    LT              reduce using rule 72 (expression -> CONTINUE .)
    GT              reduce using rule 72 (expression -> CONTINUE .)
    LTEQ            reduce using rule 72 (expression -> CONTINUE .)
    GTEQ            reduce using rule 72 (expression -> CONTINUE .)
    EQUAL           reduce using rule 72 (expression -> CONTINUE .)
    OR              reduce using rule 72 (expression -> CONTINUE .)
    AND             reduce using rule 72 (expression -> CONTINUE .)
    SEMICOLON       reduce using rule 72 (expression -> CONTINUE .)
    LOOP            reduce using rule 72 (expression -> CONTINUE .)
    THEN            reduce using rule 72 (expression -> CONTINUE .)
    RPAREN          reduce using rule 72 (expression -> CONTINUE .)
    RSQRBRACKET     reduce using rule 72 (expression -> CONTINUE .)
    ID              reduce using rule 72 (expression -> CONTINUE .)
    NEW             reduce using rule 72 (expression -> CONTINUE .)
    ISVOID          reduce using rule 72 (expression -> CONTINUE .)
    NOT             reduce using rule 72 (expression -> CONTINUE .)
    TILDA           reduce using rule 72 (expression -> CONTINUE .)
    LPAREN          reduce using rule 72 (expression -> CONTINUE .)
    SELF            reduce using rule 72 (expression -> CONTINUE .)
    INTEGER         reduce using rule 72 (expression -> CONTINUE .)
    STRING          reduce using rule 72 (expression -> CONTINUE .)
    TRUE            reduce using rule 72 (expression -> CONTINUE .)
    FALSE           reduce using rule 72 (expression -> CONTINUE .)
    BREAK           reduce using rule 72 (expression -> CONTINUE .)
    CONTINUE        reduce using rule 72 (expression -> CONTINUE .)
    IF              reduce using rule 72 (expression -> CONTINUE .)
    WHILE           reduce using rule 72 (expression -> CONTINUE .)
    FOR             reduce using rule 72 (expression -> CONTINUE .)
    LBRACE          reduce using rule 72 (expression -> CONTINUE .)
    LET             reduce using rule 72 (expression -> CONTINUE .)
    RBRACE          reduce using rule 72 (expression -> CONTINUE .)
    POOL            reduce using rule 72 (expression -> CONTINUE .)
    ELSE            reduce using rule 72 (expression -> CONTINUE .)
    FI              reduce using rule 72 (expression -> CONTINUE .)


state 84

    (81) let_expression -> LET . formal IN expression
    (31) formal -> . ID COLON type GETS expression SEMICOLON
    (32) formal -> . ID COLON type SEMICOLON
    (33) formal -> . ID COLON type LSQRBRACKET RSQRBRACKET SEMICOLON

    ID              shift and go to state 106

    formal                         shift and go to state 107

state 85

    (61) expression -> NOT . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 108
    if_then_else                   shift and go to state 76

state 86

    (31) formal -> ID COLON type GETS expression . SEMICOLON
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    SEMICOLON       shift and go to state 112
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 87

    (15) feature -> ID LPAREN formal_parameter_list RPAREN COLON . type LBRACE expression RBRACE
    (21) type -> . CLASS_TYPE
    (22) type -> . INTEGER_TYPE
    (23) type -> . BOOL_TYPE
    (24) type -> . STRING_TYPE
    (25) type -> . OBJECT
    (26) type -> . SELF_TYPE

    CLASS_TYPE      shift and go to state 40
    INTEGER_TYPE    shift and go to state 43
    BOOL_TYPE       shift and go to state 45
    STRING_TYPE     shift and go to state 42
    OBJECT          shift and go to state 41
    SELF_TYPE       shift and go to state 39

    type                           shift and go to state 124

state 88

    (16) feature -> ID LPAREN RPAREN COLON type . LBRACE expression RBRACE

    LBRACE          shift and go to state 125


state 89

    (29) formal_parameter -> ID COLON type .

    RPAREN          reduce using rule 29 (formal_parameter -> ID COLON type .)
    ID              reduce using rule 29 (formal_parameter -> ID COLON type .)


state 90

    (30) formal_parameter -> ID LSQRBRACKET RSQRBRACKET . COLON type

    COLON           shift and go to state 126


state 91

    (13) feature -> modifier ID LPAREN formal_parameter_list RPAREN . COLON type LBRACE expression RBRACE

    COLON           shift and go to state 127


state 92

    (14) feature -> modifier ID LPAREN RPAREN COLON . type LBRACE expression RBRACE
    (21) type -> . CLASS_TYPE
    (22) type -> . INTEGER_TYPE
    (23) type -> . BOOL_TYPE
    (24) type -> . STRING_TYPE
    (25) type -> . OBJECT
    (26) type -> . SELF_TYPE

    CLASS_TYPE      shift and go to state 40
    INTEGER_TYPE    shift and go to state 43
    BOOL_TYPE       shift and go to state 45
    STRING_TYPE     shift and go to state 42
    OBJECT          shift and go to state 41
    SELF_TYPE       shift and go to state 39

    type                           shift and go to state 128

state 93

    (33) formal -> ID COLON type LSQRBRACKET RSQRBRACKET SEMICOLON .

    IN              reduce using rule 33 (formal -> ID COLON type LSQRBRACKET RSQRBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 33 (formal -> ID COLON type LSQRBRACKET RSQRBRACKET SEMICOLON .)


state 94

    (76) while -> WHILE expression . LOOP expression POOL
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    LOOP            shift and go to state 129
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 95

    (75) if_then_else -> IF expression . THEN expression ELSE expression FI
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    THEN            shift and go to state 130
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 96

    (47) expression -> NEW type .

    PERIOD          reduce using rule 47 (expression -> NEW type .)
    AT              reduce using rule 47 (expression -> NEW type .)
    PLUS            reduce using rule 47 (expression -> NEW type .)
    MINUS           reduce using rule 47 (expression -> NEW type .)
    TIMES           reduce using rule 47 (expression -> NEW type .)
    DIVIDE          reduce using rule 47 (expression -> NEW type .)
    MOD             reduce using rule 47 (expression -> NEW type .)
    LT              reduce using rule 47 (expression -> NEW type .)
    GT              reduce using rule 47 (expression -> NEW type .)
    LTEQ            reduce using rule 47 (expression -> NEW type .)
    GTEQ            reduce using rule 47 (expression -> NEW type .)
    EQUAL           reduce using rule 47 (expression -> NEW type .)
    OR              reduce using rule 47 (expression -> NEW type .)
    AND             reduce using rule 47 (expression -> NEW type .)
    SEMICOLON       reduce using rule 47 (expression -> NEW type .)
    LOOP            reduce using rule 47 (expression -> NEW type .)
    THEN            reduce using rule 47 (expression -> NEW type .)
    RPAREN          reduce using rule 47 (expression -> NEW type .)
    RSQRBRACKET     reduce using rule 47 (expression -> NEW type .)
    ID              reduce using rule 47 (expression -> NEW type .)
    NEW             reduce using rule 47 (expression -> NEW type .)
    ISVOID          reduce using rule 47 (expression -> NEW type .)
    NOT             reduce using rule 47 (expression -> NEW type .)
    TILDA           reduce using rule 47 (expression -> NEW type .)
    LPAREN          reduce using rule 47 (expression -> NEW type .)
    SELF            reduce using rule 47 (expression -> NEW type .)
    INTEGER         reduce using rule 47 (expression -> NEW type .)
    STRING          reduce using rule 47 (expression -> NEW type .)
    TRUE            reduce using rule 47 (expression -> NEW type .)
    FALSE           reduce using rule 47 (expression -> NEW type .)
    BREAK           reduce using rule 47 (expression -> NEW type .)
    CONTINUE        reduce using rule 47 (expression -> NEW type .)
    IF              reduce using rule 47 (expression -> NEW type .)
    WHILE           reduce using rule 47 (expression -> NEW type .)
    FOR             reduce using rule 47 (expression -> NEW type .)
    LBRACE          reduce using rule 47 (expression -> NEW type .)
    LET             reduce using rule 47 (expression -> NEW type .)
    RBRACE          reduce using rule 47 (expression -> NEW type .)
    POOL            reduce using rule 47 (expression -> NEW type .)
    ELSE            reduce using rule 47 (expression -> NEW type .)
    FI              reduce using rule 47 (expression -> NEW type .)


state 97

    (48) expression -> ISVOID expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    PLUS            reduce using rule 48 (expression -> ISVOID expression .)
    MINUS           reduce using rule 48 (expression -> ISVOID expression .)
    TIMES           reduce using rule 48 (expression -> ISVOID expression .)
    DIVIDE          reduce using rule 48 (expression -> ISVOID expression .)
    MOD             reduce using rule 48 (expression -> ISVOID expression .)
    LT              reduce using rule 48 (expression -> ISVOID expression .)
    GT              reduce using rule 48 (expression -> ISVOID expression .)
    LTEQ            reduce using rule 48 (expression -> ISVOID expression .)
    GTEQ            reduce using rule 48 (expression -> ISVOID expression .)
    EQUAL           reduce using rule 48 (expression -> ISVOID expression .)
    OR              reduce using rule 48 (expression -> ISVOID expression .)
    AND             reduce using rule 48 (expression -> ISVOID expression .)
    SEMICOLON       reduce using rule 48 (expression -> ISVOID expression .)
    LOOP            reduce using rule 48 (expression -> ISVOID expression .)
    THEN            reduce using rule 48 (expression -> ISVOID expression .)
    RPAREN          reduce using rule 48 (expression -> ISVOID expression .)
    RSQRBRACKET     reduce using rule 48 (expression -> ISVOID expression .)
    ID              reduce using rule 48 (expression -> ISVOID expression .)
    NEW             reduce using rule 48 (expression -> ISVOID expression .)
    ISVOID          reduce using rule 48 (expression -> ISVOID expression .)
    NOT             reduce using rule 48 (expression -> ISVOID expression .)
    TILDA           reduce using rule 48 (expression -> ISVOID expression .)
    LPAREN          reduce using rule 48 (expression -> ISVOID expression .)
    SELF            reduce using rule 48 (expression -> ISVOID expression .)
    INTEGER         reduce using rule 48 (expression -> ISVOID expression .)
    STRING          reduce using rule 48 (expression -> ISVOID expression .)
    TRUE            reduce using rule 48 (expression -> ISVOID expression .)
    FALSE           reduce using rule 48 (expression -> ISVOID expression .)
    BREAK           reduce using rule 48 (expression -> ISVOID expression .)
    CONTINUE        reduce using rule 48 (expression -> ISVOID expression .)
    IF              reduce using rule 48 (expression -> ISVOID expression .)
    WHILE           reduce using rule 48 (expression -> ISVOID expression .)
    FOR             reduce using rule 48 (expression -> ISVOID expression .)
    LBRACE          reduce using rule 48 (expression -> ISVOID expression .)
    LET             reduce using rule 48 (expression -> ISVOID expression .)
    RBRACE          reduce using rule 48 (expression -> ISVOID expression .)
    POOL            reduce using rule 48 (expression -> ISVOID expression .)
    ELSE            reduce using rule 48 (expression -> ISVOID expression .)
    FI              reduce using rule 48 (expression -> ISVOID expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119

  ! PERIOD          [ reduce using rule 48 (expression -> ISVOID expression .) ]
  ! AT              [ reduce using rule 48 (expression -> ISVOID expression .) ]
  ! PLUS            [ shift and go to state 114 ]
  ! MINUS           [ shift and go to state 111 ]
  ! TIMES           [ shift and go to state 118 ]
  ! DIVIDE          [ shift and go to state 116 ]
  ! MOD             [ shift and go to state 123 ]
  ! LT              [ shift and go to state 113 ]
  ! GT              [ shift and go to state 115 ]
  ! LTEQ            [ shift and go to state 121 ]
  ! GTEQ            [ shift and go to state 109 ]
  ! EQUAL           [ shift and go to state 110 ]
  ! OR              [ shift and go to state 122 ]
  ! AND             [ shift and go to state 120 ]


state 98

    (62) expression -> TILDA expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    PLUS            reduce using rule 62 (expression -> TILDA expression .)
    MINUS           reduce using rule 62 (expression -> TILDA expression .)
    TIMES           reduce using rule 62 (expression -> TILDA expression .)
    DIVIDE          reduce using rule 62 (expression -> TILDA expression .)
    MOD             reduce using rule 62 (expression -> TILDA expression .)
    LT              reduce using rule 62 (expression -> TILDA expression .)
    GT              reduce using rule 62 (expression -> TILDA expression .)
    LTEQ            reduce using rule 62 (expression -> TILDA expression .)
    GTEQ            reduce using rule 62 (expression -> TILDA expression .)
    EQUAL           reduce using rule 62 (expression -> TILDA expression .)
    OR              reduce using rule 62 (expression -> TILDA expression .)
    AND             reduce using rule 62 (expression -> TILDA expression .)
    SEMICOLON       reduce using rule 62 (expression -> TILDA expression .)
    LOOP            reduce using rule 62 (expression -> TILDA expression .)
    THEN            reduce using rule 62 (expression -> TILDA expression .)
    RPAREN          reduce using rule 62 (expression -> TILDA expression .)
    RSQRBRACKET     reduce using rule 62 (expression -> TILDA expression .)
    ID              reduce using rule 62 (expression -> TILDA expression .)
    NEW             reduce using rule 62 (expression -> TILDA expression .)
    ISVOID          reduce using rule 62 (expression -> TILDA expression .)
    NOT             reduce using rule 62 (expression -> TILDA expression .)
    TILDA           reduce using rule 62 (expression -> TILDA expression .)
    LPAREN          reduce using rule 62 (expression -> TILDA expression .)
    SELF            reduce using rule 62 (expression -> TILDA expression .)
    INTEGER         reduce using rule 62 (expression -> TILDA expression .)
    STRING          reduce using rule 62 (expression -> TILDA expression .)
    TRUE            reduce using rule 62 (expression -> TILDA expression .)
    FALSE           reduce using rule 62 (expression -> TILDA expression .)
    BREAK           reduce using rule 62 (expression -> TILDA expression .)
    CONTINUE        reduce using rule 62 (expression -> TILDA expression .)
    IF              reduce using rule 62 (expression -> TILDA expression .)
    WHILE           reduce using rule 62 (expression -> TILDA expression .)
    FOR             reduce using rule 62 (expression -> TILDA expression .)
    LBRACE          reduce using rule 62 (expression -> TILDA expression .)
    LET             reduce using rule 62 (expression -> TILDA expression .)
    RBRACE          reduce using rule 62 (expression -> TILDA expression .)
    POOL            reduce using rule 62 (expression -> TILDA expression .)
    ELSE            reduce using rule 62 (expression -> TILDA expression .)
    FI              reduce using rule 62 (expression -> TILDA expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119

  ! PERIOD          [ reduce using rule 62 (expression -> TILDA expression .) ]
  ! AT              [ reduce using rule 62 (expression -> TILDA expression .) ]
  ! PLUS            [ shift and go to state 114 ]
  ! MINUS           [ shift and go to state 111 ]
  ! TIMES           [ shift and go to state 118 ]
  ! DIVIDE          [ shift and go to state 116 ]
  ! MOD             [ shift and go to state 123 ]
  ! LT              [ shift and go to state 113 ]
  ! GT              [ shift and go to state 115 ]
  ! LTEQ            [ shift and go to state 121 ]
  ! GTEQ            [ shift and go to state 109 ]
  ! EQUAL           [ shift and go to state 110 ]
  ! OR              [ shift and go to state 122 ]
  ! AND             [ shift and go to state 120 ]


state 99

    (77) for -> FOR LPAREN . expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 131
    if_then_else                   shift and go to state 76

state 100

    (63) expression -> LPAREN expression . RPAREN
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    RPAREN          shift and go to state 132
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 101

    (35) expression -> ID LSQRBRACKET . expression RSQRBRACKET GETS expression
    (66) expression -> ID LSQRBRACKET . expression RSQRBRACKET
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 133
    if_then_else                   shift and go to state 76

state 102

    (38) expression -> ID LPAREN . argument_list RPAREN
    (39) expression -> ID LPAREN . RPAREN
    (73) argument_list -> . argument_list expression
    (74) argument_list -> . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    RPAREN          shift and go to state 134
    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    argument_list                  shift and go to state 135
    block_expression               shift and go to state 74
    expression                     shift and go to state 136
    if_then_else                   shift and go to state 76

state 103

    (34) expression -> ID GETS . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 137
    if_then_else                   shift and go to state 76

state 104

    (78) block_expression -> LBRACE block_list . RBRACE
    (79) block_list -> block_list . expression SEMICOLON
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    RBRACE          shift and go to state 138
    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    block_expression               shift and go to state 74
    while                          shift and go to state 82
    expression                     shift and go to state 139
    if_then_else                   shift and go to state 76

state 105

    (80) block_list -> expression . SEMICOLON
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    SEMICOLON       shift and go to state 140
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 106

    (31) formal -> ID . COLON type GETS expression SEMICOLON
    (32) formal -> ID . COLON type SEMICOLON
    (33) formal -> ID . COLON type LSQRBRACKET RSQRBRACKET SEMICOLON

    COLON           shift and go to state 32


state 107

    (81) let_expression -> LET formal . IN expression

    IN              shift and go to state 141


state 108

    (61) expression -> NOT expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    OR              reduce using rule 61 (expression -> NOT expression .)
    AND             reduce using rule 61 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 61 (expression -> NOT expression .)
    LOOP            reduce using rule 61 (expression -> NOT expression .)
    THEN            reduce using rule 61 (expression -> NOT expression .)
    RPAREN          reduce using rule 61 (expression -> NOT expression .)
    RSQRBRACKET     reduce using rule 61 (expression -> NOT expression .)
    ID              reduce using rule 61 (expression -> NOT expression .)
    NEW             reduce using rule 61 (expression -> NOT expression .)
    ISVOID          reduce using rule 61 (expression -> NOT expression .)
    NOT             reduce using rule 61 (expression -> NOT expression .)
    TILDA           reduce using rule 61 (expression -> NOT expression .)
    LPAREN          reduce using rule 61 (expression -> NOT expression .)
    SELF            reduce using rule 61 (expression -> NOT expression .)
    INTEGER         reduce using rule 61 (expression -> NOT expression .)
    STRING          reduce using rule 61 (expression -> NOT expression .)
    TRUE            reduce using rule 61 (expression -> NOT expression .)
    FALSE           reduce using rule 61 (expression -> NOT expression .)
    BREAK           reduce using rule 61 (expression -> NOT expression .)
    CONTINUE        reduce using rule 61 (expression -> NOT expression .)
    IF              reduce using rule 61 (expression -> NOT expression .)
    WHILE           reduce using rule 61 (expression -> NOT expression .)
    FOR             reduce using rule 61 (expression -> NOT expression .)
    LBRACE          reduce using rule 61 (expression -> NOT expression .)
    LET             reduce using rule 61 (expression -> NOT expression .)
    RBRACE          reduce using rule 61 (expression -> NOT expression .)
    POOL            reduce using rule 61 (expression -> NOT expression .)
    ELSE            reduce using rule 61 (expression -> NOT expression .)
    FI              reduce using rule 61 (expression -> NOT expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110

  ! PERIOD          [ reduce using rule 61 (expression -> NOT expression .) ]
  ! AT              [ reduce using rule 61 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 61 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 61 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 61 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 61 (expression -> NOT expression .) ]
  ! MOD             [ reduce using rule 61 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 61 (expression -> NOT expression .) ]
  ! GT              [ reduce using rule 61 (expression -> NOT expression .) ]
  ! LTEQ            [ reduce using rule 61 (expression -> NOT expression .) ]
  ! GTEQ            [ reduce using rule 61 (expression -> NOT expression .) ]
  ! EQUAL           [ reduce using rule 61 (expression -> NOT expression .) ]
  ! OR              [ shift and go to state 122 ]
  ! AND             [ shift and go to state 120 ]


state 109

    (57) expression -> expression GTEQ . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 142
    if_then_else                   shift and go to state 76

state 110

    (58) expression -> expression EQUAL . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 143
    if_then_else                   shift and go to state 76

state 111

    (50) expression -> expression MINUS . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 144
    if_then_else                   shift and go to state 76

state 112

    (31) formal -> ID COLON type GETS expression SEMICOLON .

    IN              reduce using rule 31 (formal -> ID COLON type GETS expression SEMICOLON .)
    SEMICOLON       reduce using rule 31 (formal -> ID COLON type GETS expression SEMICOLON .)


state 113

    (54) expression -> expression LT . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 145
    if_then_else                   shift and go to state 76

state 114

    (49) expression -> expression PLUS . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 146
    if_then_else                   shift and go to state 76

state 115

    (55) expression -> expression GT . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 147
    if_then_else                   shift and go to state 76

state 116

    (52) expression -> expression DIVIDE . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 148
    if_then_else                   shift and go to state 76

state 117

    (36) expression -> expression PERIOD . ID LPAREN argument_list RPAREN
    (37) expression -> expression PERIOD . ID LPAREN RPAREN

    ID              shift and go to state 149


state 118

    (51) expression -> expression TIMES . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 150
    if_then_else                   shift and go to state 76

state 119

    (40) expression -> expression AT . CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression AT . CLASS_TYPE PERIOD ID LPAREN RPAREN

    CLASS_TYPE      shift and go to state 151


state 120

    (60) expression -> expression AND . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 152
    if_then_else                   shift and go to state 76

state 121

    (56) expression -> expression LTEQ . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 153
    if_then_else                   shift and go to state 76

state 122

    (59) expression -> expression OR . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 154
    if_then_else                   shift and go to state 76

state 123

    (53) expression -> expression MOD . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 155
    if_then_else                   shift and go to state 76

state 124

    (15) feature -> ID LPAREN formal_parameter_list RPAREN COLON type . LBRACE expression RBRACE

    LBRACE          shift and go to state 156


state 125

    (16) feature -> ID LPAREN RPAREN COLON type LBRACE . expression RBRACE
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 157
    if_then_else                   shift and go to state 76

state 126

    (30) formal_parameter -> ID LSQRBRACKET RSQRBRACKET COLON . type
    (21) type -> . CLASS_TYPE
    (22) type -> . INTEGER_TYPE
    (23) type -> . BOOL_TYPE
    (24) type -> . STRING_TYPE
    (25) type -> . OBJECT
    (26) type -> . SELF_TYPE

    CLASS_TYPE      shift and go to state 40
    INTEGER_TYPE    shift and go to state 43
    BOOL_TYPE       shift and go to state 45
    STRING_TYPE     shift and go to state 42
    OBJECT          shift and go to state 41
    SELF_TYPE       shift and go to state 39

    type                           shift and go to state 158

state 127

    (13) feature -> modifier ID LPAREN formal_parameter_list RPAREN COLON . type LBRACE expression RBRACE
    (21) type -> . CLASS_TYPE
    (22) type -> . INTEGER_TYPE
    (23) type -> . BOOL_TYPE
    (24) type -> . STRING_TYPE
    (25) type -> . OBJECT
    (26) type -> . SELF_TYPE

    CLASS_TYPE      shift and go to state 40
    INTEGER_TYPE    shift and go to state 43
    BOOL_TYPE       shift and go to state 45
    STRING_TYPE     shift and go to state 42
    OBJECT          shift and go to state 41
    SELF_TYPE       shift and go to state 39

    type                           shift and go to state 159

state 128

    (14) feature -> modifier ID LPAREN RPAREN COLON type . LBRACE expression RBRACE

    LBRACE          shift and go to state 160


state 129

    (76) while -> WHILE expression LOOP . expression POOL
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 161
    if_then_else                   shift and go to state 76

state 130

    (75) if_then_else -> IF expression THEN . expression ELSE expression FI
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 162
    if_then_else                   shift and go to state 76

state 131

    (77) for -> FOR LPAREN expression . SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    SEMICOLON       shift and go to state 163
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 132

    (63) expression -> LPAREN expression RPAREN .

    PERIOD          reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    AT              reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    LTEQ            reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    GTEQ            reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    LOOP            reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    RSQRBRACKET     reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    NEW             reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    ISVOID          reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    NOT             reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    TILDA           reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    SELF            reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    INTEGER         reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    STRING          reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    CONTINUE        reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    LET             reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    POOL            reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 63 (expression -> LPAREN expression RPAREN .)
    FI              reduce using rule 63 (expression -> LPAREN expression RPAREN .)


state 133

    (35) expression -> ID LSQRBRACKET expression . RSQRBRACKET GETS expression
    (66) expression -> ID LSQRBRACKET expression . RSQRBRACKET
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    RSQRBRACKET     shift and go to state 164
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 134

    (39) expression -> ID LPAREN RPAREN .

    PERIOD          reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    AT              reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    MOD             reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    LT              reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    GT              reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    LTEQ            reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    GTEQ            reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    EQUAL           reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    OR              reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    AND             reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    LOOP            reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    THEN            reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    RSQRBRACKET     reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    ID              reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    NEW             reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    ISVOID          reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    NOT             reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    TILDA           reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    LPAREN          reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    SELF            reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    INTEGER         reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    STRING          reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    TRUE            reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    FALSE           reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    BREAK           reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    CONTINUE        reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    IF              reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    WHILE           reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    FOR             reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    LBRACE          reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    LET             reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    RBRACE          reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    POOL            reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    ELSE            reduce using rule 39 (expression -> ID LPAREN RPAREN .)
    FI              reduce using rule 39 (expression -> ID LPAREN RPAREN .)


state 135

    (38) expression -> ID LPAREN argument_list . RPAREN
    (73) argument_list -> argument_list . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    RPAREN          shift and go to state 165
    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 166
    if_then_else                   shift and go to state 76

state 136

    (74) argument_list -> expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    RPAREN          reduce using rule 74 (argument_list -> expression .)
    ID              reduce using rule 74 (argument_list -> expression .)
    NEW             reduce using rule 74 (argument_list -> expression .)
    ISVOID          reduce using rule 74 (argument_list -> expression .)
    NOT             reduce using rule 74 (argument_list -> expression .)
    TILDA           reduce using rule 74 (argument_list -> expression .)
    LPAREN          reduce using rule 74 (argument_list -> expression .)
    SELF            reduce using rule 74 (argument_list -> expression .)
    INTEGER         reduce using rule 74 (argument_list -> expression .)
    STRING          reduce using rule 74 (argument_list -> expression .)
    TRUE            reduce using rule 74 (argument_list -> expression .)
    FALSE           reduce using rule 74 (argument_list -> expression .)
    BREAK           reduce using rule 74 (argument_list -> expression .)
    CONTINUE        reduce using rule 74 (argument_list -> expression .)
    IF              reduce using rule 74 (argument_list -> expression .)
    WHILE           reduce using rule 74 (argument_list -> expression .)
    FOR             reduce using rule 74 (argument_list -> expression .)
    LBRACE          reduce using rule 74 (argument_list -> expression .)
    LET             reduce using rule 74 (argument_list -> expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 137

    (34) expression -> ID GETS expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    SEMICOLON       reduce using rule 34 (expression -> ID GETS expression .)
    LOOP            reduce using rule 34 (expression -> ID GETS expression .)
    THEN            reduce using rule 34 (expression -> ID GETS expression .)
    RPAREN          reduce using rule 34 (expression -> ID GETS expression .)
    RSQRBRACKET     reduce using rule 34 (expression -> ID GETS expression .)
    ID              reduce using rule 34 (expression -> ID GETS expression .)
    NEW             reduce using rule 34 (expression -> ID GETS expression .)
    ISVOID          reduce using rule 34 (expression -> ID GETS expression .)
    NOT             reduce using rule 34 (expression -> ID GETS expression .)
    TILDA           reduce using rule 34 (expression -> ID GETS expression .)
    LPAREN          reduce using rule 34 (expression -> ID GETS expression .)
    SELF            reduce using rule 34 (expression -> ID GETS expression .)
    INTEGER         reduce using rule 34 (expression -> ID GETS expression .)
    STRING          reduce using rule 34 (expression -> ID GETS expression .)
    TRUE            reduce using rule 34 (expression -> ID GETS expression .)
    FALSE           reduce using rule 34 (expression -> ID GETS expression .)
    BREAK           reduce using rule 34 (expression -> ID GETS expression .)
    CONTINUE        reduce using rule 34 (expression -> ID GETS expression .)
    IF              reduce using rule 34 (expression -> ID GETS expression .)
    WHILE           reduce using rule 34 (expression -> ID GETS expression .)
    FOR             reduce using rule 34 (expression -> ID GETS expression .)
    LBRACE          reduce using rule 34 (expression -> ID GETS expression .)
    LET             reduce using rule 34 (expression -> ID GETS expression .)
    RBRACE          reduce using rule 34 (expression -> ID GETS expression .)
    POOL            reduce using rule 34 (expression -> ID GETS expression .)
    ELSE            reduce using rule 34 (expression -> ID GETS expression .)
    FI              reduce using rule 34 (expression -> ID GETS expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120

  ! PERIOD          [ reduce using rule 34 (expression -> ID GETS expression .) ]
  ! AT              [ reduce using rule 34 (expression -> ID GETS expression .) ]
  ! PLUS            [ reduce using rule 34 (expression -> ID GETS expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> ID GETS expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> ID GETS expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> ID GETS expression .) ]
  ! MOD             [ reduce using rule 34 (expression -> ID GETS expression .) ]
  ! LT              [ reduce using rule 34 (expression -> ID GETS expression .) ]
  ! GT              [ reduce using rule 34 (expression -> ID GETS expression .) ]
  ! LTEQ            [ reduce using rule 34 (expression -> ID GETS expression .) ]
  ! GTEQ            [ reduce using rule 34 (expression -> ID GETS expression .) ]
  ! EQUAL           [ reduce using rule 34 (expression -> ID GETS expression .) ]
  ! OR              [ reduce using rule 34 (expression -> ID GETS expression .) ]
  ! AND             [ reduce using rule 34 (expression -> ID GETS expression .) ]


state 138

    (78) block_expression -> LBRACE block_list RBRACE .

    POOL            reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    PERIOD          reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    AT              reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    PLUS            reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    MINUS           reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    TIMES           reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    DIVIDE          reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    MOD             reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    LT              reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    GT              reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    LTEQ            reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    GTEQ            reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    EQUAL           reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    OR              reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    AND             reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    SEMICOLON       reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    LOOP            reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    THEN            reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    RPAREN          reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    RSQRBRACKET     reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    ID              reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    NEW             reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    ISVOID          reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    NOT             reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    TILDA           reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    LPAREN          reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    SELF            reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    INTEGER         reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    STRING          reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    TRUE            reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    FALSE           reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    BREAK           reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    CONTINUE        reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    IF              reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    WHILE           reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    FOR             reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    LBRACE          reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    LET             reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    RBRACE          reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    ELSE            reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)
    FI              reduce using rule 78 (block_expression -> LBRACE block_list RBRACE .)


state 139

    (79) block_list -> block_list expression . SEMICOLON
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    SEMICOLON       shift and go to state 167
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 140

    (80) block_list -> expression SEMICOLON .

    RBRACE          reduce using rule 80 (block_list -> expression SEMICOLON .)
    ID              reduce using rule 80 (block_list -> expression SEMICOLON .)
    NEW             reduce using rule 80 (block_list -> expression SEMICOLON .)
    ISVOID          reduce using rule 80 (block_list -> expression SEMICOLON .)
    NOT             reduce using rule 80 (block_list -> expression SEMICOLON .)
    TILDA           reduce using rule 80 (block_list -> expression SEMICOLON .)
    LPAREN          reduce using rule 80 (block_list -> expression SEMICOLON .)
    SELF            reduce using rule 80 (block_list -> expression SEMICOLON .)
    INTEGER         reduce using rule 80 (block_list -> expression SEMICOLON .)
    STRING          reduce using rule 80 (block_list -> expression SEMICOLON .)
    TRUE            reduce using rule 80 (block_list -> expression SEMICOLON .)
    FALSE           reduce using rule 80 (block_list -> expression SEMICOLON .)
    BREAK           reduce using rule 80 (block_list -> expression SEMICOLON .)
    CONTINUE        reduce using rule 80 (block_list -> expression SEMICOLON .)
    IF              reduce using rule 80 (block_list -> expression SEMICOLON .)
    WHILE           reduce using rule 80 (block_list -> expression SEMICOLON .)
    FOR             reduce using rule 80 (block_list -> expression SEMICOLON .)
    LBRACE          reduce using rule 80 (block_list -> expression SEMICOLON .)
    LET             reduce using rule 80 (block_list -> expression SEMICOLON .)


state 141

    (81) let_expression -> LET formal IN . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 168
    if_then_else                   shift and go to state 76

state 142

    (57) expression -> expression GTEQ expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    LT              reduce using rule 57 (expression -> expression GTEQ expression .)
    GT              reduce using rule 57 (expression -> expression GTEQ expression .)
    LTEQ            reduce using rule 57 (expression -> expression GTEQ expression .)
    GTEQ            reduce using rule 57 (expression -> expression GTEQ expression .)
    EQUAL           reduce using rule 57 (expression -> expression GTEQ expression .)
    OR              reduce using rule 57 (expression -> expression GTEQ expression .)
    AND             reduce using rule 57 (expression -> expression GTEQ expression .)
    SEMICOLON       reduce using rule 57 (expression -> expression GTEQ expression .)
    LOOP            reduce using rule 57 (expression -> expression GTEQ expression .)
    THEN            reduce using rule 57 (expression -> expression GTEQ expression .)
    RPAREN          reduce using rule 57 (expression -> expression GTEQ expression .)
    RSQRBRACKET     reduce using rule 57 (expression -> expression GTEQ expression .)
    ID              reduce using rule 57 (expression -> expression GTEQ expression .)
    NEW             reduce using rule 57 (expression -> expression GTEQ expression .)
    ISVOID          reduce using rule 57 (expression -> expression GTEQ expression .)
    NOT             reduce using rule 57 (expression -> expression GTEQ expression .)
    TILDA           reduce using rule 57 (expression -> expression GTEQ expression .)
    LPAREN          reduce using rule 57 (expression -> expression GTEQ expression .)
    SELF            reduce using rule 57 (expression -> expression GTEQ expression .)
    INTEGER         reduce using rule 57 (expression -> expression GTEQ expression .)
    STRING          reduce using rule 57 (expression -> expression GTEQ expression .)
    TRUE            reduce using rule 57 (expression -> expression GTEQ expression .)
    FALSE           reduce using rule 57 (expression -> expression GTEQ expression .)
    BREAK           reduce using rule 57 (expression -> expression GTEQ expression .)
    CONTINUE        reduce using rule 57 (expression -> expression GTEQ expression .)
    IF              reduce using rule 57 (expression -> expression GTEQ expression .)
    WHILE           reduce using rule 57 (expression -> expression GTEQ expression .)
    FOR             reduce using rule 57 (expression -> expression GTEQ expression .)
    LBRACE          reduce using rule 57 (expression -> expression GTEQ expression .)
    LET             reduce using rule 57 (expression -> expression GTEQ expression .)
    RBRACE          reduce using rule 57 (expression -> expression GTEQ expression .)
    POOL            reduce using rule 57 (expression -> expression GTEQ expression .)
    ELSE            reduce using rule 57 (expression -> expression GTEQ expression .)
    FI              reduce using rule 57 (expression -> expression GTEQ expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123

  ! PERIOD          [ reduce using rule 57 (expression -> expression GTEQ expression .) ]
  ! AT              [ reduce using rule 57 (expression -> expression GTEQ expression .) ]
  ! PLUS            [ reduce using rule 57 (expression -> expression GTEQ expression .) ]
  ! MINUS           [ reduce using rule 57 (expression -> expression GTEQ expression .) ]
  ! TIMES           [ reduce using rule 57 (expression -> expression GTEQ expression .) ]
  ! DIVIDE          [ reduce using rule 57 (expression -> expression GTEQ expression .) ]
  ! MOD             [ reduce using rule 57 (expression -> expression GTEQ expression .) ]
  ! LT              [ shift and go to state 113 ]
  ! GT              [ shift and go to state 115 ]
  ! LTEQ            [ shift and go to state 121 ]
  ! GTEQ            [ shift and go to state 109 ]
  ! EQUAL           [ shift and go to state 110 ]
  ! OR              [ shift and go to state 122 ]
  ! AND             [ shift and go to state 120 ]


state 143

    (58) expression -> expression EQUAL expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    LT              reduce using rule 58 (expression -> expression EQUAL expression .)
    GT              reduce using rule 58 (expression -> expression EQUAL expression .)
    LTEQ            reduce using rule 58 (expression -> expression EQUAL expression .)
    GTEQ            reduce using rule 58 (expression -> expression EQUAL expression .)
    EQUAL           reduce using rule 58 (expression -> expression EQUAL expression .)
    OR              reduce using rule 58 (expression -> expression EQUAL expression .)
    AND             reduce using rule 58 (expression -> expression EQUAL expression .)
    SEMICOLON       reduce using rule 58 (expression -> expression EQUAL expression .)
    LOOP            reduce using rule 58 (expression -> expression EQUAL expression .)
    THEN            reduce using rule 58 (expression -> expression EQUAL expression .)
    RPAREN          reduce using rule 58 (expression -> expression EQUAL expression .)
    RSQRBRACKET     reduce using rule 58 (expression -> expression EQUAL expression .)
    ID              reduce using rule 58 (expression -> expression EQUAL expression .)
    NEW             reduce using rule 58 (expression -> expression EQUAL expression .)
    ISVOID          reduce using rule 58 (expression -> expression EQUAL expression .)
    NOT             reduce using rule 58 (expression -> expression EQUAL expression .)
    TILDA           reduce using rule 58 (expression -> expression EQUAL expression .)
    LPAREN          reduce using rule 58 (expression -> expression EQUAL expression .)
    SELF            reduce using rule 58 (expression -> expression EQUAL expression .)
    INTEGER         reduce using rule 58 (expression -> expression EQUAL expression .)
    STRING          reduce using rule 58 (expression -> expression EQUAL expression .)
    TRUE            reduce using rule 58 (expression -> expression EQUAL expression .)
    FALSE           reduce using rule 58 (expression -> expression EQUAL expression .)
    BREAK           reduce using rule 58 (expression -> expression EQUAL expression .)
    CONTINUE        reduce using rule 58 (expression -> expression EQUAL expression .)
    IF              reduce using rule 58 (expression -> expression EQUAL expression .)
    WHILE           reduce using rule 58 (expression -> expression EQUAL expression .)
    FOR             reduce using rule 58 (expression -> expression EQUAL expression .)
    LBRACE          reduce using rule 58 (expression -> expression EQUAL expression .)
    LET             reduce using rule 58 (expression -> expression EQUAL expression .)
    RBRACE          reduce using rule 58 (expression -> expression EQUAL expression .)
    POOL            reduce using rule 58 (expression -> expression EQUAL expression .)
    ELSE            reduce using rule 58 (expression -> expression EQUAL expression .)
    FI              reduce using rule 58 (expression -> expression EQUAL expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123

  ! PERIOD          [ reduce using rule 58 (expression -> expression EQUAL expression .) ]
  ! AT              [ reduce using rule 58 (expression -> expression EQUAL expression .) ]
  ! PLUS            [ reduce using rule 58 (expression -> expression EQUAL expression .) ]
  ! MINUS           [ reduce using rule 58 (expression -> expression EQUAL expression .) ]
  ! TIMES           [ reduce using rule 58 (expression -> expression EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 58 (expression -> expression EQUAL expression .) ]
  ! MOD             [ reduce using rule 58 (expression -> expression EQUAL expression .) ]
  ! LT              [ shift and go to state 113 ]
  ! GT              [ shift and go to state 115 ]
  ! LTEQ            [ shift and go to state 121 ]
  ! GTEQ            [ shift and go to state 109 ]
  ! EQUAL           [ shift and go to state 110 ]
  ! OR              [ shift and go to state 122 ]
  ! AND             [ shift and go to state 120 ]


state 144

    (50) expression -> expression MINUS expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    PLUS            reduce using rule 50 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 50 (expression -> expression MINUS expression .)
    LT              reduce using rule 50 (expression -> expression MINUS expression .)
    GT              reduce using rule 50 (expression -> expression MINUS expression .)
    LTEQ            reduce using rule 50 (expression -> expression MINUS expression .)
    GTEQ            reduce using rule 50 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 50 (expression -> expression MINUS expression .)
    OR              reduce using rule 50 (expression -> expression MINUS expression .)
    AND             reduce using rule 50 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 50 (expression -> expression MINUS expression .)
    LOOP            reduce using rule 50 (expression -> expression MINUS expression .)
    THEN            reduce using rule 50 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 50 (expression -> expression MINUS expression .)
    RSQRBRACKET     reduce using rule 50 (expression -> expression MINUS expression .)
    ID              reduce using rule 50 (expression -> expression MINUS expression .)
    NEW             reduce using rule 50 (expression -> expression MINUS expression .)
    ISVOID          reduce using rule 50 (expression -> expression MINUS expression .)
    NOT             reduce using rule 50 (expression -> expression MINUS expression .)
    TILDA           reduce using rule 50 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 50 (expression -> expression MINUS expression .)
    SELF            reduce using rule 50 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 50 (expression -> expression MINUS expression .)
    STRING          reduce using rule 50 (expression -> expression MINUS expression .)
    TRUE            reduce using rule 50 (expression -> expression MINUS expression .)
    FALSE           reduce using rule 50 (expression -> expression MINUS expression .)
    BREAK           reduce using rule 50 (expression -> expression MINUS expression .)
    CONTINUE        reduce using rule 50 (expression -> expression MINUS expression .)
    IF              reduce using rule 50 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 50 (expression -> expression MINUS expression .)
    FOR             reduce using rule 50 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 50 (expression -> expression MINUS expression .)
    LET             reduce using rule 50 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 50 (expression -> expression MINUS expression .)
    POOL            reduce using rule 50 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 50 (expression -> expression MINUS expression .)
    FI              reduce using rule 50 (expression -> expression MINUS expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123

  ! PERIOD          [ reduce using rule 50 (expression -> expression MINUS expression .) ]
  ! AT              [ reduce using rule 50 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 50 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 50 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 114 ]
  ! MINUS           [ shift and go to state 111 ]
  ! LT              [ shift and go to state 113 ]
  ! GT              [ shift and go to state 115 ]
  ! LTEQ            [ shift and go to state 121 ]
  ! GTEQ            [ shift and go to state 109 ]
  ! EQUAL           [ shift and go to state 110 ]
  ! OR              [ shift and go to state 122 ]
  ! AND             [ shift and go to state 120 ]


state 145

    (54) expression -> expression LT expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    LT              reduce using rule 54 (expression -> expression LT expression .)
    GT              reduce using rule 54 (expression -> expression LT expression .)
    LTEQ            reduce using rule 54 (expression -> expression LT expression .)
    GTEQ            reduce using rule 54 (expression -> expression LT expression .)
    EQUAL           reduce using rule 54 (expression -> expression LT expression .)
    OR              reduce using rule 54 (expression -> expression LT expression .)
    AND             reduce using rule 54 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 54 (expression -> expression LT expression .)
    LOOP            reduce using rule 54 (expression -> expression LT expression .)
    THEN            reduce using rule 54 (expression -> expression LT expression .)
    RPAREN          reduce using rule 54 (expression -> expression LT expression .)
    RSQRBRACKET     reduce using rule 54 (expression -> expression LT expression .)
    ID              reduce using rule 54 (expression -> expression LT expression .)
    NEW             reduce using rule 54 (expression -> expression LT expression .)
    ISVOID          reduce using rule 54 (expression -> expression LT expression .)
    NOT             reduce using rule 54 (expression -> expression LT expression .)
    TILDA           reduce using rule 54 (expression -> expression LT expression .)
    LPAREN          reduce using rule 54 (expression -> expression LT expression .)
    SELF            reduce using rule 54 (expression -> expression LT expression .)
    INTEGER         reduce using rule 54 (expression -> expression LT expression .)
    STRING          reduce using rule 54 (expression -> expression LT expression .)
    TRUE            reduce using rule 54 (expression -> expression LT expression .)
    FALSE           reduce using rule 54 (expression -> expression LT expression .)
    BREAK           reduce using rule 54 (expression -> expression LT expression .)
    CONTINUE        reduce using rule 54 (expression -> expression LT expression .)
    IF              reduce using rule 54 (expression -> expression LT expression .)
    WHILE           reduce using rule 54 (expression -> expression LT expression .)
    FOR             reduce using rule 54 (expression -> expression LT expression .)
    LBRACE          reduce using rule 54 (expression -> expression LT expression .)
    LET             reduce using rule 54 (expression -> expression LT expression .)
    RBRACE          reduce using rule 54 (expression -> expression LT expression .)
    POOL            reduce using rule 54 (expression -> expression LT expression .)
    ELSE            reduce using rule 54 (expression -> expression LT expression .)
    FI              reduce using rule 54 (expression -> expression LT expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123

  ! PERIOD          [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! AT              [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! PLUS            [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 113 ]
  ! GT              [ shift and go to state 115 ]
  ! LTEQ            [ shift and go to state 121 ]
  ! GTEQ            [ shift and go to state 109 ]
  ! EQUAL           [ shift and go to state 110 ]
  ! OR              [ shift and go to state 122 ]
  ! AND             [ shift and go to state 120 ]


state 146

    (49) expression -> expression PLUS expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    PLUS            reduce using rule 49 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 49 (expression -> expression PLUS expression .)
    LT              reduce using rule 49 (expression -> expression PLUS expression .)
    GT              reduce using rule 49 (expression -> expression PLUS expression .)
    LTEQ            reduce using rule 49 (expression -> expression PLUS expression .)
    GTEQ            reduce using rule 49 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 49 (expression -> expression PLUS expression .)
    OR              reduce using rule 49 (expression -> expression PLUS expression .)
    AND             reduce using rule 49 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 49 (expression -> expression PLUS expression .)
    LOOP            reduce using rule 49 (expression -> expression PLUS expression .)
    THEN            reduce using rule 49 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 49 (expression -> expression PLUS expression .)
    RSQRBRACKET     reduce using rule 49 (expression -> expression PLUS expression .)
    ID              reduce using rule 49 (expression -> expression PLUS expression .)
    NEW             reduce using rule 49 (expression -> expression PLUS expression .)
    ISVOID          reduce using rule 49 (expression -> expression PLUS expression .)
    NOT             reduce using rule 49 (expression -> expression PLUS expression .)
    TILDA           reduce using rule 49 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 49 (expression -> expression PLUS expression .)
    SELF            reduce using rule 49 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 49 (expression -> expression PLUS expression .)
    STRING          reduce using rule 49 (expression -> expression PLUS expression .)
    TRUE            reduce using rule 49 (expression -> expression PLUS expression .)
    FALSE           reduce using rule 49 (expression -> expression PLUS expression .)
    BREAK           reduce using rule 49 (expression -> expression PLUS expression .)
    CONTINUE        reduce using rule 49 (expression -> expression PLUS expression .)
    IF              reduce using rule 49 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 49 (expression -> expression PLUS expression .)
    FOR             reduce using rule 49 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 49 (expression -> expression PLUS expression .)
    LET             reduce using rule 49 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 49 (expression -> expression PLUS expression .)
    POOL            reduce using rule 49 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 49 (expression -> expression PLUS expression .)
    FI              reduce using rule 49 (expression -> expression PLUS expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123

  ! PERIOD          [ reduce using rule 49 (expression -> expression PLUS expression .) ]
  ! AT              [ reduce using rule 49 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 49 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 49 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 114 ]
  ! MINUS           [ shift and go to state 111 ]
  ! LT              [ shift and go to state 113 ]
  ! GT              [ shift and go to state 115 ]
  ! LTEQ            [ shift and go to state 121 ]
  ! GTEQ            [ shift and go to state 109 ]
  ! EQUAL           [ shift and go to state 110 ]
  ! OR              [ shift and go to state 122 ]
  ! AND             [ shift and go to state 120 ]


state 147

    (55) expression -> expression GT expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    LT              reduce using rule 55 (expression -> expression GT expression .)
    GT              reduce using rule 55 (expression -> expression GT expression .)
    LTEQ            reduce using rule 55 (expression -> expression GT expression .)
    GTEQ            reduce using rule 55 (expression -> expression GT expression .)
    EQUAL           reduce using rule 55 (expression -> expression GT expression .)
    OR              reduce using rule 55 (expression -> expression GT expression .)
    AND             reduce using rule 55 (expression -> expression GT expression .)
    SEMICOLON       reduce using rule 55 (expression -> expression GT expression .)
    LOOP            reduce using rule 55 (expression -> expression GT expression .)
    THEN            reduce using rule 55 (expression -> expression GT expression .)
    RPAREN          reduce using rule 55 (expression -> expression GT expression .)
    RSQRBRACKET     reduce using rule 55 (expression -> expression GT expression .)
    ID              reduce using rule 55 (expression -> expression GT expression .)
    NEW             reduce using rule 55 (expression -> expression GT expression .)
    ISVOID          reduce using rule 55 (expression -> expression GT expression .)
    NOT             reduce using rule 55 (expression -> expression GT expression .)
    TILDA           reduce using rule 55 (expression -> expression GT expression .)
    LPAREN          reduce using rule 55 (expression -> expression GT expression .)
    SELF            reduce using rule 55 (expression -> expression GT expression .)
    INTEGER         reduce using rule 55 (expression -> expression GT expression .)
    STRING          reduce using rule 55 (expression -> expression GT expression .)
    TRUE            reduce using rule 55 (expression -> expression GT expression .)
    FALSE           reduce using rule 55 (expression -> expression GT expression .)
    BREAK           reduce using rule 55 (expression -> expression GT expression .)
    CONTINUE        reduce using rule 55 (expression -> expression GT expression .)
    IF              reduce using rule 55 (expression -> expression GT expression .)
    WHILE           reduce using rule 55 (expression -> expression GT expression .)
    FOR             reduce using rule 55 (expression -> expression GT expression .)
    LBRACE          reduce using rule 55 (expression -> expression GT expression .)
    LET             reduce using rule 55 (expression -> expression GT expression .)
    RBRACE          reduce using rule 55 (expression -> expression GT expression .)
    POOL            reduce using rule 55 (expression -> expression GT expression .)
    ELSE            reduce using rule 55 (expression -> expression GT expression .)
    FI              reduce using rule 55 (expression -> expression GT expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123

  ! PERIOD          [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! AT              [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! PLUS            [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 55 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 113 ]
  ! GT              [ shift and go to state 115 ]
  ! LTEQ            [ shift and go to state 121 ]
  ! GTEQ            [ shift and go to state 109 ]
  ! EQUAL           [ shift and go to state 110 ]
  ! OR              [ shift and go to state 122 ]
  ! AND             [ shift and go to state 120 ]


state 148

    (52) expression -> expression DIVIDE expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    PLUS            reduce using rule 52 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 52 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 52 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 52 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 52 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 52 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 52 (expression -> expression DIVIDE expression .)
    LTEQ            reduce using rule 52 (expression -> expression DIVIDE expression .)
    GTEQ            reduce using rule 52 (expression -> expression DIVIDE expression .)
    EQUAL           reduce using rule 52 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 52 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 52 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 52 (expression -> expression DIVIDE expression .)
    LOOP            reduce using rule 52 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 52 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 52 (expression -> expression DIVIDE expression .)
    RSQRBRACKET     reduce using rule 52 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 52 (expression -> expression DIVIDE expression .)
    NEW             reduce using rule 52 (expression -> expression DIVIDE expression .)
    ISVOID          reduce using rule 52 (expression -> expression DIVIDE expression .)
    NOT             reduce using rule 52 (expression -> expression DIVIDE expression .)
    TILDA           reduce using rule 52 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 52 (expression -> expression DIVIDE expression .)
    SELF            reduce using rule 52 (expression -> expression DIVIDE expression .)
    INTEGER         reduce using rule 52 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 52 (expression -> expression DIVIDE expression .)
    TRUE            reduce using rule 52 (expression -> expression DIVIDE expression .)
    FALSE           reduce using rule 52 (expression -> expression DIVIDE expression .)
    BREAK           reduce using rule 52 (expression -> expression DIVIDE expression .)
    CONTINUE        reduce using rule 52 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 52 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 52 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 52 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 52 (expression -> expression DIVIDE expression .)
    LET             reduce using rule 52 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 52 (expression -> expression DIVIDE expression .)
    POOL            reduce using rule 52 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 52 (expression -> expression DIVIDE expression .)
    FI              reduce using rule 52 (expression -> expression DIVIDE expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119

  ! PERIOD          [ reduce using rule 52 (expression -> expression DIVIDE expression .) ]
  ! AT              [ reduce using rule 52 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 114 ]
  ! MINUS           [ shift and go to state 111 ]
  ! TIMES           [ shift and go to state 118 ]
  ! DIVIDE          [ shift and go to state 116 ]
  ! MOD             [ shift and go to state 123 ]
  ! LT              [ shift and go to state 113 ]
  ! GT              [ shift and go to state 115 ]
  ! LTEQ            [ shift and go to state 121 ]
  ! GTEQ            [ shift and go to state 109 ]
  ! EQUAL           [ shift and go to state 110 ]
  ! OR              [ shift and go to state 122 ]
  ! AND             [ shift and go to state 120 ]


state 149

    (36) expression -> expression PERIOD ID . LPAREN argument_list RPAREN
    (37) expression -> expression PERIOD ID . LPAREN RPAREN

    LPAREN          shift and go to state 169


state 150

    (51) expression -> expression TIMES expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    PLUS            reduce using rule 51 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 51 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 51 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 51 (expression -> expression TIMES expression .)
    MOD             reduce using rule 51 (expression -> expression TIMES expression .)
    LT              reduce using rule 51 (expression -> expression TIMES expression .)
    GT              reduce using rule 51 (expression -> expression TIMES expression .)
    LTEQ            reduce using rule 51 (expression -> expression TIMES expression .)
    GTEQ            reduce using rule 51 (expression -> expression TIMES expression .)
    EQUAL           reduce using rule 51 (expression -> expression TIMES expression .)
    OR              reduce using rule 51 (expression -> expression TIMES expression .)
    AND             reduce using rule 51 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 51 (expression -> expression TIMES expression .)
    LOOP            reduce using rule 51 (expression -> expression TIMES expression .)
    THEN            reduce using rule 51 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 51 (expression -> expression TIMES expression .)
    RSQRBRACKET     reduce using rule 51 (expression -> expression TIMES expression .)
    ID              reduce using rule 51 (expression -> expression TIMES expression .)
    NEW             reduce using rule 51 (expression -> expression TIMES expression .)
    ISVOID          reduce using rule 51 (expression -> expression TIMES expression .)
    NOT             reduce using rule 51 (expression -> expression TIMES expression .)
    TILDA           reduce using rule 51 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 51 (expression -> expression TIMES expression .)
    SELF            reduce using rule 51 (expression -> expression TIMES expression .)
    INTEGER         reduce using rule 51 (expression -> expression TIMES expression .)
    STRING          reduce using rule 51 (expression -> expression TIMES expression .)
    TRUE            reduce using rule 51 (expression -> expression TIMES expression .)
    FALSE           reduce using rule 51 (expression -> expression TIMES expression .)
    BREAK           reduce using rule 51 (expression -> expression TIMES expression .)
    CONTINUE        reduce using rule 51 (expression -> expression TIMES expression .)
    IF              reduce using rule 51 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 51 (expression -> expression TIMES expression .)
    FOR             reduce using rule 51 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 51 (expression -> expression TIMES expression .)
    LET             reduce using rule 51 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 51 (expression -> expression TIMES expression .)
    POOL            reduce using rule 51 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 51 (expression -> expression TIMES expression .)
    FI              reduce using rule 51 (expression -> expression TIMES expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119

  ! PERIOD          [ reduce using rule 51 (expression -> expression TIMES expression .) ]
  ! AT              [ reduce using rule 51 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 114 ]
  ! MINUS           [ shift and go to state 111 ]
  ! TIMES           [ shift and go to state 118 ]
  ! DIVIDE          [ shift and go to state 116 ]
  ! MOD             [ shift and go to state 123 ]
  ! LT              [ shift and go to state 113 ]
  ! GT              [ shift and go to state 115 ]
  ! LTEQ            [ shift and go to state 121 ]
  ! GTEQ            [ shift and go to state 109 ]
  ! EQUAL           [ shift and go to state 110 ]
  ! OR              [ shift and go to state 122 ]
  ! AND             [ shift and go to state 120 ]


state 151

    (40) expression -> expression AT CLASS_TYPE . PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression AT CLASS_TYPE . PERIOD ID LPAREN RPAREN

    PERIOD          shift and go to state 170


state 152

    (60) expression -> expression AND expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    OR              reduce using rule 60 (expression -> expression AND expression .)
    AND             reduce using rule 60 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 60 (expression -> expression AND expression .)
    LOOP            reduce using rule 60 (expression -> expression AND expression .)
    THEN            reduce using rule 60 (expression -> expression AND expression .)
    RPAREN          reduce using rule 60 (expression -> expression AND expression .)
    RSQRBRACKET     reduce using rule 60 (expression -> expression AND expression .)
    ID              reduce using rule 60 (expression -> expression AND expression .)
    NEW             reduce using rule 60 (expression -> expression AND expression .)
    ISVOID          reduce using rule 60 (expression -> expression AND expression .)
    NOT             reduce using rule 60 (expression -> expression AND expression .)
    TILDA           reduce using rule 60 (expression -> expression AND expression .)
    LPAREN          reduce using rule 60 (expression -> expression AND expression .)
    SELF            reduce using rule 60 (expression -> expression AND expression .)
    INTEGER         reduce using rule 60 (expression -> expression AND expression .)
    STRING          reduce using rule 60 (expression -> expression AND expression .)
    TRUE            reduce using rule 60 (expression -> expression AND expression .)
    FALSE           reduce using rule 60 (expression -> expression AND expression .)
    BREAK           reduce using rule 60 (expression -> expression AND expression .)
    CONTINUE        reduce using rule 60 (expression -> expression AND expression .)
    IF              reduce using rule 60 (expression -> expression AND expression .)
    WHILE           reduce using rule 60 (expression -> expression AND expression .)
    FOR             reduce using rule 60 (expression -> expression AND expression .)
    LBRACE          reduce using rule 60 (expression -> expression AND expression .)
    LET             reduce using rule 60 (expression -> expression AND expression .)
    RBRACE          reduce using rule 60 (expression -> expression AND expression .)
    POOL            reduce using rule 60 (expression -> expression AND expression .)
    ELSE            reduce using rule 60 (expression -> expression AND expression .)
    FI              reduce using rule 60 (expression -> expression AND expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110

  ! PERIOD          [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! AT              [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! LTEQ            [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! GTEQ            [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! EQUAL           [ reduce using rule 60 (expression -> expression AND expression .) ]
  ! OR              [ shift and go to state 122 ]
  ! AND             [ shift and go to state 120 ]


state 153

    (56) expression -> expression LTEQ expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    LT              reduce using rule 56 (expression -> expression LTEQ expression .)
    GT              reduce using rule 56 (expression -> expression LTEQ expression .)
    LTEQ            reduce using rule 56 (expression -> expression LTEQ expression .)
    GTEQ            reduce using rule 56 (expression -> expression LTEQ expression .)
    EQUAL           reduce using rule 56 (expression -> expression LTEQ expression .)
    OR              reduce using rule 56 (expression -> expression LTEQ expression .)
    AND             reduce using rule 56 (expression -> expression LTEQ expression .)
    SEMICOLON       reduce using rule 56 (expression -> expression LTEQ expression .)
    LOOP            reduce using rule 56 (expression -> expression LTEQ expression .)
    THEN            reduce using rule 56 (expression -> expression LTEQ expression .)
    RPAREN          reduce using rule 56 (expression -> expression LTEQ expression .)
    RSQRBRACKET     reduce using rule 56 (expression -> expression LTEQ expression .)
    ID              reduce using rule 56 (expression -> expression LTEQ expression .)
    NEW             reduce using rule 56 (expression -> expression LTEQ expression .)
    ISVOID          reduce using rule 56 (expression -> expression LTEQ expression .)
    NOT             reduce using rule 56 (expression -> expression LTEQ expression .)
    TILDA           reduce using rule 56 (expression -> expression LTEQ expression .)
    LPAREN          reduce using rule 56 (expression -> expression LTEQ expression .)
    SELF            reduce using rule 56 (expression -> expression LTEQ expression .)
    INTEGER         reduce using rule 56 (expression -> expression LTEQ expression .)
    STRING          reduce using rule 56 (expression -> expression LTEQ expression .)
    TRUE            reduce using rule 56 (expression -> expression LTEQ expression .)
    FALSE           reduce using rule 56 (expression -> expression LTEQ expression .)
    BREAK           reduce using rule 56 (expression -> expression LTEQ expression .)
    CONTINUE        reduce using rule 56 (expression -> expression LTEQ expression .)
    IF              reduce using rule 56 (expression -> expression LTEQ expression .)
    WHILE           reduce using rule 56 (expression -> expression LTEQ expression .)
    FOR             reduce using rule 56 (expression -> expression LTEQ expression .)
    LBRACE          reduce using rule 56 (expression -> expression LTEQ expression .)
    LET             reduce using rule 56 (expression -> expression LTEQ expression .)
    RBRACE          reduce using rule 56 (expression -> expression LTEQ expression .)
    POOL            reduce using rule 56 (expression -> expression LTEQ expression .)
    ELSE            reduce using rule 56 (expression -> expression LTEQ expression .)
    FI              reduce using rule 56 (expression -> expression LTEQ expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123

  ! PERIOD          [ reduce using rule 56 (expression -> expression LTEQ expression .) ]
  ! AT              [ reduce using rule 56 (expression -> expression LTEQ expression .) ]
  ! PLUS            [ reduce using rule 56 (expression -> expression LTEQ expression .) ]
  ! MINUS           [ reduce using rule 56 (expression -> expression LTEQ expression .) ]
  ! TIMES           [ reduce using rule 56 (expression -> expression LTEQ expression .) ]
  ! DIVIDE          [ reduce using rule 56 (expression -> expression LTEQ expression .) ]
  ! MOD             [ reduce using rule 56 (expression -> expression LTEQ expression .) ]
  ! LT              [ shift and go to state 113 ]
  ! GT              [ shift and go to state 115 ]
  ! LTEQ            [ shift and go to state 121 ]
  ! GTEQ            [ shift and go to state 109 ]
  ! EQUAL           [ shift and go to state 110 ]
  ! OR              [ shift and go to state 122 ]
  ! AND             [ shift and go to state 120 ]


state 154

    (59) expression -> expression OR expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    OR              reduce using rule 59 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 59 (expression -> expression OR expression .)
    LOOP            reduce using rule 59 (expression -> expression OR expression .)
    THEN            reduce using rule 59 (expression -> expression OR expression .)
    RPAREN          reduce using rule 59 (expression -> expression OR expression .)
    RSQRBRACKET     reduce using rule 59 (expression -> expression OR expression .)
    ID              reduce using rule 59 (expression -> expression OR expression .)
    NEW             reduce using rule 59 (expression -> expression OR expression .)
    ISVOID          reduce using rule 59 (expression -> expression OR expression .)
    NOT             reduce using rule 59 (expression -> expression OR expression .)
    TILDA           reduce using rule 59 (expression -> expression OR expression .)
    LPAREN          reduce using rule 59 (expression -> expression OR expression .)
    SELF            reduce using rule 59 (expression -> expression OR expression .)
    INTEGER         reduce using rule 59 (expression -> expression OR expression .)
    STRING          reduce using rule 59 (expression -> expression OR expression .)
    TRUE            reduce using rule 59 (expression -> expression OR expression .)
    FALSE           reduce using rule 59 (expression -> expression OR expression .)
    BREAK           reduce using rule 59 (expression -> expression OR expression .)
    CONTINUE        reduce using rule 59 (expression -> expression OR expression .)
    IF              reduce using rule 59 (expression -> expression OR expression .)
    WHILE           reduce using rule 59 (expression -> expression OR expression .)
    FOR             reduce using rule 59 (expression -> expression OR expression .)
    LBRACE          reduce using rule 59 (expression -> expression OR expression .)
    LET             reduce using rule 59 (expression -> expression OR expression .)
    RBRACE          reduce using rule 59 (expression -> expression OR expression .)
    POOL            reduce using rule 59 (expression -> expression OR expression .)
    ELSE            reduce using rule 59 (expression -> expression OR expression .)
    FI              reduce using rule 59 (expression -> expression OR expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    AND             shift and go to state 120

  ! PERIOD          [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! AT              [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! LTEQ            [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! GTEQ            [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! EQUAL           [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 59 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 122 ]


state 155

    (53) expression -> expression MOD expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    PLUS            reduce using rule 53 (expression -> expression MOD expression .)
    MINUS           reduce using rule 53 (expression -> expression MOD expression .)
    TIMES           reduce using rule 53 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 53 (expression -> expression MOD expression .)
    MOD             reduce using rule 53 (expression -> expression MOD expression .)
    LT              reduce using rule 53 (expression -> expression MOD expression .)
    GT              reduce using rule 53 (expression -> expression MOD expression .)
    LTEQ            reduce using rule 53 (expression -> expression MOD expression .)
    GTEQ            reduce using rule 53 (expression -> expression MOD expression .)
    EQUAL           reduce using rule 53 (expression -> expression MOD expression .)
    OR              reduce using rule 53 (expression -> expression MOD expression .)
    AND             reduce using rule 53 (expression -> expression MOD expression .)
    SEMICOLON       reduce using rule 53 (expression -> expression MOD expression .)
    LOOP            reduce using rule 53 (expression -> expression MOD expression .)
    THEN            reduce using rule 53 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 53 (expression -> expression MOD expression .)
    RSQRBRACKET     reduce using rule 53 (expression -> expression MOD expression .)
    ID              reduce using rule 53 (expression -> expression MOD expression .)
    NEW             reduce using rule 53 (expression -> expression MOD expression .)
    ISVOID          reduce using rule 53 (expression -> expression MOD expression .)
    NOT             reduce using rule 53 (expression -> expression MOD expression .)
    TILDA           reduce using rule 53 (expression -> expression MOD expression .)
    LPAREN          reduce using rule 53 (expression -> expression MOD expression .)
    SELF            reduce using rule 53 (expression -> expression MOD expression .)
    INTEGER         reduce using rule 53 (expression -> expression MOD expression .)
    STRING          reduce using rule 53 (expression -> expression MOD expression .)
    TRUE            reduce using rule 53 (expression -> expression MOD expression .)
    FALSE           reduce using rule 53 (expression -> expression MOD expression .)
    BREAK           reduce using rule 53 (expression -> expression MOD expression .)
    CONTINUE        reduce using rule 53 (expression -> expression MOD expression .)
    IF              reduce using rule 53 (expression -> expression MOD expression .)
    WHILE           reduce using rule 53 (expression -> expression MOD expression .)
    FOR             reduce using rule 53 (expression -> expression MOD expression .)
    LBRACE          reduce using rule 53 (expression -> expression MOD expression .)
    LET             reduce using rule 53 (expression -> expression MOD expression .)
    RBRACE          reduce using rule 53 (expression -> expression MOD expression .)
    POOL            reduce using rule 53 (expression -> expression MOD expression .)
    ELSE            reduce using rule 53 (expression -> expression MOD expression .)
    FI              reduce using rule 53 (expression -> expression MOD expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119

  ! PERIOD          [ reduce using rule 53 (expression -> expression MOD expression .) ]
  ! AT              [ reduce using rule 53 (expression -> expression MOD expression .) ]
  ! PLUS            [ shift and go to state 114 ]
  ! MINUS           [ shift and go to state 111 ]
  ! TIMES           [ shift and go to state 118 ]
  ! DIVIDE          [ shift and go to state 116 ]
  ! MOD             [ shift and go to state 123 ]
  ! LT              [ shift and go to state 113 ]
  ! GT              [ shift and go to state 115 ]
  ! LTEQ            [ shift and go to state 121 ]
  ! GTEQ            [ shift and go to state 109 ]
  ! EQUAL           [ shift and go to state 110 ]
  ! OR              [ shift and go to state 122 ]
  ! AND             [ shift and go to state 120 ]


state 156

    (15) feature -> ID LPAREN formal_parameter_list RPAREN COLON type LBRACE . expression RBRACE
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    expression                     shift and go to state 171
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    if_then_else                   shift and go to state 76

state 157

    (16) feature -> ID LPAREN RPAREN COLON type LBRACE expression . RBRACE
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    RBRACE          shift and go to state 172
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 158

    (30) formal_parameter -> ID LSQRBRACKET RSQRBRACKET COLON type .

    RPAREN          reduce using rule 30 (formal_parameter -> ID LSQRBRACKET RSQRBRACKET COLON type .)
    ID              reduce using rule 30 (formal_parameter -> ID LSQRBRACKET RSQRBRACKET COLON type .)


state 159

    (13) feature -> modifier ID LPAREN formal_parameter_list RPAREN COLON type . LBRACE expression RBRACE

    LBRACE          shift and go to state 173


state 160

    (14) feature -> modifier ID LPAREN RPAREN COLON type LBRACE . expression RBRACE
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 174
    if_then_else                   shift and go to state 76

state 161

    (76) while -> WHILE expression LOOP expression . POOL
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    POOL            shift and go to state 175
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 162

    (75) if_then_else -> IF expression THEN expression . ELSE expression FI
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    ELSE            shift and go to state 176
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 163

    (77) for -> FOR LPAREN expression SEMICOLON . expression SEMICOLON expression LOOP expression POOL
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 177
    if_then_else                   shift and go to state 76

state 164

    (35) expression -> ID LSQRBRACKET expression RSQRBRACKET . GETS expression
    (66) expression -> ID LSQRBRACKET expression RSQRBRACKET .

    GETS            shift and go to state 178
    PERIOD          reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    AT              reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    PLUS            reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    MINUS           reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    TIMES           reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    DIVIDE          reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    MOD             reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    LT              reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    GT              reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    LTEQ            reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    GTEQ            reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    EQUAL           reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    OR              reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    AND             reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    SEMICOLON       reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    LOOP            reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    THEN            reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    RPAREN          reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    RSQRBRACKET     reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    ID              reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    NEW             reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    ISVOID          reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    NOT             reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    TILDA           reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    LPAREN          reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    SELF            reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    INTEGER         reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    STRING          reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    TRUE            reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    FALSE           reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    BREAK           reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    CONTINUE        reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    IF              reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    WHILE           reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    FOR             reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    LBRACE          reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    LET             reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    RBRACE          reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    POOL            reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    ELSE            reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)
    FI              reduce using rule 66 (expression -> ID LSQRBRACKET expression RSQRBRACKET .)


state 165

    (38) expression -> ID LPAREN argument_list RPAREN .

    PERIOD          reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    AT              reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    DIVIDE          reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    MOD             reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    LT              reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    GT              reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    LTEQ            reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    GTEQ            reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    EQUAL           reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    OR              reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    AND             reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    SEMICOLON       reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    LOOP            reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    THEN            reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    RSQRBRACKET     reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    ID              reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    NEW             reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    ISVOID          reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    NOT             reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    TILDA           reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    SELF            reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    INTEGER         reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    STRING          reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    TRUE            reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    FALSE           reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    BREAK           reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    CONTINUE        reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    IF              reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    WHILE           reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    FOR             reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    LBRACE          reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    LET             reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    POOL            reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    ELSE            reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)
    FI              reduce using rule 38 (expression -> ID LPAREN argument_list RPAREN .)


state 166

    (73) argument_list -> argument_list expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    RPAREN          reduce using rule 73 (argument_list -> argument_list expression .)
    ID              reduce using rule 73 (argument_list -> argument_list expression .)
    NEW             reduce using rule 73 (argument_list -> argument_list expression .)
    ISVOID          reduce using rule 73 (argument_list -> argument_list expression .)
    NOT             reduce using rule 73 (argument_list -> argument_list expression .)
    TILDA           reduce using rule 73 (argument_list -> argument_list expression .)
    LPAREN          reduce using rule 73 (argument_list -> argument_list expression .)
    SELF            reduce using rule 73 (argument_list -> argument_list expression .)
    INTEGER         reduce using rule 73 (argument_list -> argument_list expression .)
    STRING          reduce using rule 73 (argument_list -> argument_list expression .)
    TRUE            reduce using rule 73 (argument_list -> argument_list expression .)
    FALSE           reduce using rule 73 (argument_list -> argument_list expression .)
    BREAK           reduce using rule 73 (argument_list -> argument_list expression .)
    CONTINUE        reduce using rule 73 (argument_list -> argument_list expression .)
    IF              reduce using rule 73 (argument_list -> argument_list expression .)
    WHILE           reduce using rule 73 (argument_list -> argument_list expression .)
    FOR             reduce using rule 73 (argument_list -> argument_list expression .)
    LBRACE          reduce using rule 73 (argument_list -> argument_list expression .)
    LET             reduce using rule 73 (argument_list -> argument_list expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 167

    (79) block_list -> block_list expression SEMICOLON .

    RBRACE          reduce using rule 79 (block_list -> block_list expression SEMICOLON .)
    ID              reduce using rule 79 (block_list -> block_list expression SEMICOLON .)
    NEW             reduce using rule 79 (block_list -> block_list expression SEMICOLON .)
    ISVOID          reduce using rule 79 (block_list -> block_list expression SEMICOLON .)
    NOT             reduce using rule 79 (block_list -> block_list expression SEMICOLON .)
    TILDA           reduce using rule 79 (block_list -> block_list expression SEMICOLON .)
    LPAREN          reduce using rule 79 (block_list -> block_list expression SEMICOLON .)
    SELF            reduce using rule 79 (block_list -> block_list expression SEMICOLON .)
    INTEGER         reduce using rule 79 (block_list -> block_list expression SEMICOLON .)
    STRING          reduce using rule 79 (block_list -> block_list expression SEMICOLON .)
    TRUE            reduce using rule 79 (block_list -> block_list expression SEMICOLON .)
    FALSE           reduce using rule 79 (block_list -> block_list expression SEMICOLON .)
    BREAK           reduce using rule 79 (block_list -> block_list expression SEMICOLON .)
    CONTINUE        reduce using rule 79 (block_list -> block_list expression SEMICOLON .)
    IF              reduce using rule 79 (block_list -> block_list expression SEMICOLON .)
    WHILE           reduce using rule 79 (block_list -> block_list expression SEMICOLON .)
    FOR             reduce using rule 79 (block_list -> block_list expression SEMICOLON .)
    LBRACE          reduce using rule 79 (block_list -> block_list expression SEMICOLON .)
    LET             reduce using rule 79 (block_list -> block_list expression SEMICOLON .)


state 168

    (81) let_expression -> LET formal IN expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    SEMICOLON       reduce using rule 81 (let_expression -> LET formal IN expression .)
    LOOP            reduce using rule 81 (let_expression -> LET formal IN expression .)
    THEN            reduce using rule 81 (let_expression -> LET formal IN expression .)
    RPAREN          reduce using rule 81 (let_expression -> LET formal IN expression .)
    RSQRBRACKET     reduce using rule 81 (let_expression -> LET formal IN expression .)
    ID              reduce using rule 81 (let_expression -> LET formal IN expression .)
    NEW             reduce using rule 81 (let_expression -> LET formal IN expression .)
    ISVOID          reduce using rule 81 (let_expression -> LET formal IN expression .)
    NOT             reduce using rule 81 (let_expression -> LET formal IN expression .)
    TILDA           reduce using rule 81 (let_expression -> LET formal IN expression .)
    LPAREN          reduce using rule 81 (let_expression -> LET formal IN expression .)
    SELF            reduce using rule 81 (let_expression -> LET formal IN expression .)
    INTEGER         reduce using rule 81 (let_expression -> LET formal IN expression .)
    STRING          reduce using rule 81 (let_expression -> LET formal IN expression .)
    TRUE            reduce using rule 81 (let_expression -> LET formal IN expression .)
    FALSE           reduce using rule 81 (let_expression -> LET formal IN expression .)
    BREAK           reduce using rule 81 (let_expression -> LET formal IN expression .)
    CONTINUE        reduce using rule 81 (let_expression -> LET formal IN expression .)
    IF              reduce using rule 81 (let_expression -> LET formal IN expression .)
    WHILE           reduce using rule 81 (let_expression -> LET formal IN expression .)
    FOR             reduce using rule 81 (let_expression -> LET formal IN expression .)
    LBRACE          reduce using rule 81 (let_expression -> LET formal IN expression .)
    LET             reduce using rule 81 (let_expression -> LET formal IN expression .)
    RBRACE          reduce using rule 81 (let_expression -> LET formal IN expression .)
    POOL            reduce using rule 81 (let_expression -> LET formal IN expression .)
    ELSE            reduce using rule 81 (let_expression -> LET formal IN expression .)
    FI              reduce using rule 81 (let_expression -> LET formal IN expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120

  ! PERIOD          [ reduce using rule 81 (let_expression -> LET formal IN expression .) ]
  ! AT              [ reduce using rule 81 (let_expression -> LET formal IN expression .) ]
  ! PLUS            [ reduce using rule 81 (let_expression -> LET formal IN expression .) ]
  ! MINUS           [ reduce using rule 81 (let_expression -> LET formal IN expression .) ]
  ! TIMES           [ reduce using rule 81 (let_expression -> LET formal IN expression .) ]
  ! DIVIDE          [ reduce using rule 81 (let_expression -> LET formal IN expression .) ]
  ! MOD             [ reduce using rule 81 (let_expression -> LET formal IN expression .) ]
  ! LT              [ reduce using rule 81 (let_expression -> LET formal IN expression .) ]
  ! GT              [ reduce using rule 81 (let_expression -> LET formal IN expression .) ]
  ! LTEQ            [ reduce using rule 81 (let_expression -> LET formal IN expression .) ]
  ! GTEQ            [ reduce using rule 81 (let_expression -> LET formal IN expression .) ]
  ! EQUAL           [ reduce using rule 81 (let_expression -> LET formal IN expression .) ]
  ! OR              [ reduce using rule 81 (let_expression -> LET formal IN expression .) ]
  ! AND             [ reduce using rule 81 (let_expression -> LET formal IN expression .) ]


state 169

    (36) expression -> expression PERIOD ID LPAREN . argument_list RPAREN
    (37) expression -> expression PERIOD ID LPAREN . RPAREN
    (73) argument_list -> . argument_list expression
    (74) argument_list -> . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    RPAREN          shift and go to state 179
    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    argument_list                  shift and go to state 180
    block_expression               shift and go to state 74
    expression                     shift and go to state 136
    if_then_else                   shift and go to state 76

state 170

    (40) expression -> expression AT CLASS_TYPE PERIOD . ID LPAREN argument_list RPAREN
    (41) expression -> expression AT CLASS_TYPE PERIOD . ID LPAREN RPAREN

    ID              shift and go to state 181


state 171

    (15) feature -> ID LPAREN formal_parameter_list RPAREN COLON type LBRACE expression . RBRACE
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    RBRACE          shift and go to state 182
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 172

    (16) feature -> ID LPAREN RPAREN COLON type LBRACE expression RBRACE .

    SEMICOLON       reduce using rule 16 (feature -> ID LPAREN RPAREN COLON type LBRACE expression RBRACE .)


state 173

    (13) feature -> modifier ID LPAREN formal_parameter_list RPAREN COLON type LBRACE . expression RBRACE
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    expression                     shift and go to state 183
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    if_then_else                   shift and go to state 76

state 174

    (14) feature -> modifier ID LPAREN RPAREN COLON type LBRACE expression . RBRACE
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    RBRACE          shift and go to state 184
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 175

    (76) while -> WHILE expression LOOP expression POOL .

    PERIOD          reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    AT              reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    PLUS            reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    MINUS           reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    TIMES           reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    DIVIDE          reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    MOD             reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    LT              reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    GT              reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    LTEQ            reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    GTEQ            reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    EQUAL           reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    OR              reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    AND             reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    RPAREN          reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    ID              reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    NEW             reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    ISVOID          reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    NOT             reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    TILDA           reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    LPAREN          reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    SELF            reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    INTEGER         reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    STRING          reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    TRUE            reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    FALSE           reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    BREAK           reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    CONTINUE        reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    IF              reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    WHILE           reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    FOR             reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    LBRACE          reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    LET             reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    SEMICOLON       reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    LOOP            reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    THEN            reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    RSQRBRACKET     reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    RBRACE          reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    POOL            reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    ELSE            reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)
    FI              reduce using rule 76 (while -> WHILE expression LOOP expression POOL .)


state 176

    (75) if_then_else -> IF expression THEN expression ELSE . expression FI
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 185
    if_then_else                   shift and go to state 76

state 177

    (77) for -> FOR LPAREN expression SEMICOLON expression . SEMICOLON expression LOOP expression POOL
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    SEMICOLON       shift and go to state 186
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 178

    (35) expression -> ID LSQRBRACKET expression RSQRBRACKET GETS . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 187
    if_then_else                   shift and go to state 76

state 179

    (37) expression -> expression PERIOD ID LPAREN RPAREN .

    PERIOD          reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    AT              reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    PLUS            reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    MINUS           reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    TIMES           reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    MOD             reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    LT              reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    GT              reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    LTEQ            reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    GTEQ            reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    EQUAL           reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    OR              reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    AND             reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    LOOP            reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    THEN            reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    RPAREN          reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    RSQRBRACKET     reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    ID              reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    NEW             reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    ISVOID          reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    NOT             reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    TILDA           reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    LPAREN          reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    SELF            reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    INTEGER         reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    STRING          reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    TRUE            reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    FALSE           reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    BREAK           reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    CONTINUE        reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    IF              reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    WHILE           reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    FOR             reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    LBRACE          reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    LET             reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    RBRACE          reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    POOL            reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    ELSE            reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)
    FI              reduce using rule 37 (expression -> expression PERIOD ID LPAREN RPAREN .)


state 180

    (36) expression -> expression PERIOD ID LPAREN argument_list . RPAREN
    (73) argument_list -> argument_list . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    RPAREN          shift and go to state 188
    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 166
    if_then_else                   shift and go to state 76

state 181

    (40) expression -> expression AT CLASS_TYPE PERIOD ID . LPAREN argument_list RPAREN
    (41) expression -> expression AT CLASS_TYPE PERIOD ID . LPAREN RPAREN

    LPAREN          shift and go to state 189


state 182

    (15) feature -> ID LPAREN formal_parameter_list RPAREN COLON type LBRACE expression RBRACE .

    SEMICOLON       reduce using rule 15 (feature -> ID LPAREN formal_parameter_list RPAREN COLON type LBRACE expression RBRACE .)


state 183

    (13) feature -> modifier ID LPAREN formal_parameter_list RPAREN COLON type LBRACE expression . RBRACE
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    RBRACE          shift and go to state 190
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 184

    (14) feature -> modifier ID LPAREN RPAREN COLON type LBRACE expression RBRACE .

    SEMICOLON       reduce using rule 14 (feature -> modifier ID LPAREN RPAREN COLON type LBRACE expression RBRACE .)


state 185

    (75) if_then_else -> IF expression THEN expression ELSE expression . FI
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    FI              shift and go to state 191
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 186

    (77) for -> FOR LPAREN expression SEMICOLON expression SEMICOLON . expression LOOP expression POOL
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 192
    if_then_else                   shift and go to state 76

state 187

    (35) expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    SEMICOLON       reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    LOOP            reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    THEN            reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    RPAREN          reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    RSQRBRACKET     reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    ID              reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    NEW             reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    ISVOID          reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    NOT             reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    TILDA           reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    LPAREN          reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    SELF            reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    INTEGER         reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    STRING          reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    TRUE            reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    FALSE           reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    BREAK           reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    CONTINUE        reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    IF              reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    WHILE           reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    FOR             reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    LBRACE          reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    LET             reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    RBRACE          reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    POOL            reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    ELSE            reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    FI              reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .)
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120

  ! PERIOD          [ reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .) ]
  ! AT              [ reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .) ]
  ! PLUS            [ reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .) ]
  ! MOD             [ reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .) ]
  ! LT              [ reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .) ]
  ! GT              [ reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .) ]
  ! LTEQ            [ reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .) ]
  ! GTEQ            [ reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .) ]
  ! EQUAL           [ reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .) ]
  ! OR              [ reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .) ]
  ! AND             [ reduce using rule 35 (expression -> ID LSQRBRACKET expression RSQRBRACKET GETS expression .) ]


state 188

    (36) expression -> expression PERIOD ID LPAREN argument_list RPAREN .

    PERIOD          reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    AT              reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    DIVIDE          reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    MOD             reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    LT              reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    GT              reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    LTEQ            reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    GTEQ            reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    EQUAL           reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    OR              reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    AND             reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    SEMICOLON       reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    LOOP            reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    THEN            reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    RSQRBRACKET     reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    ID              reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    NEW             reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    ISVOID          reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    NOT             reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    TILDA           reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    SELF            reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    INTEGER         reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    STRING          reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    TRUE            reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    FALSE           reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    BREAK           reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    CONTINUE        reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    IF              reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    WHILE           reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    FOR             reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    LBRACE          reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    LET             reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    POOL            reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    ELSE            reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)
    FI              reduce using rule 36 (expression -> expression PERIOD ID LPAREN argument_list RPAREN .)


state 189

    (40) expression -> expression AT CLASS_TYPE PERIOD ID LPAREN . argument_list RPAREN
    (41) expression -> expression AT CLASS_TYPE PERIOD ID LPAREN . RPAREN
    (73) argument_list -> . argument_list expression
    (74) argument_list -> . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    RPAREN          shift and go to state 193
    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    argument_list                  shift and go to state 194
    block_expression               shift and go to state 74
    expression                     shift and go to state 136
    if_then_else                   shift and go to state 76

state 190

    (13) feature -> modifier ID LPAREN formal_parameter_list RPAREN COLON type LBRACE expression RBRACE .

    SEMICOLON       reduce using rule 13 (feature -> modifier ID LPAREN formal_parameter_list RPAREN COLON type LBRACE expression RBRACE .)


state 191

    (75) if_then_else -> IF expression THEN expression ELSE expression FI .

    PERIOD          reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    AT              reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    PLUS            reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    MINUS           reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    TIMES           reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    DIVIDE          reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    MOD             reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    LT              reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    GT              reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    LTEQ            reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    GTEQ            reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    EQUAL           reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    OR              reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    AND             reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    SEMICOLON       reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    LOOP            reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    THEN            reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    RPAREN          reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    RSQRBRACKET     reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    ID              reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    NEW             reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    ISVOID          reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    NOT             reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    TILDA           reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    LPAREN          reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    SELF            reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    INTEGER         reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    STRING          reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    TRUE            reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    FALSE           reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    BREAK           reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    CONTINUE        reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    IF              reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    WHILE           reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    FOR             reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    LBRACE          reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    LET             reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    RBRACE          reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    POOL            reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    ELSE            reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)
    FI              reduce using rule 75 (if_then_else -> IF expression THEN expression ELSE expression FI .)


state 192

    (77) for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression . LOOP expression POOL
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    LOOP            shift and go to state 195
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 193

    (41) expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .

    PERIOD          reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    AT              reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    PLUS            reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    MINUS           reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    TIMES           reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    MOD             reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    LT              reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    GT              reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    LTEQ            reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    GTEQ            reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    EQUAL           reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    OR              reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    AND             reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    LOOP            reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    THEN            reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    RPAREN          reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    RSQRBRACKET     reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    ID              reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    NEW             reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    ISVOID          reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    NOT             reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    TILDA           reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    LPAREN          reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    SELF            reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    INTEGER         reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    STRING          reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    TRUE            reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    FALSE           reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    BREAK           reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    CONTINUE        reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    IF              reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    WHILE           reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    FOR             reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    LBRACE          reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    LET             reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    RBRACE          reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    POOL            reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    ELSE            reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)
    FI              reduce using rule 41 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN .)


state 194

    (40) expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list . RPAREN
    (73) argument_list -> argument_list . expression
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    RPAREN          shift and go to state 196
    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 166
    if_then_else                   shift and go to state 76

state 195

    (77) for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP . expression POOL
    (34) expression -> . ID GETS expression
    (35) expression -> . ID LSQRBRACKET expression RSQRBRACKET GETS expression
    (36) expression -> . expression PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> . expression PERIOD ID LPAREN RPAREN
    (38) expression -> . ID LPAREN argument_list RPAREN
    (39) expression -> . ID LPAREN RPAREN
    (40) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> . expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (42) expression -> . if_then_else
    (43) expression -> . while
    (44) expression -> . for
    (45) expression -> . block_expression
    (46) expression -> . let_expression
    (47) expression -> . NEW type
    (48) expression -> . ISVOID expression
    (49) expression -> . expression PLUS expression
    (50) expression -> . expression MINUS expression
    (51) expression -> . expression TIMES expression
    (52) expression -> . expression DIVIDE expression
    (53) expression -> . expression MOD expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression GT expression
    (56) expression -> . expression LTEQ expression
    (57) expression -> . expression GTEQ expression
    (58) expression -> . expression EQUAL expression
    (59) expression -> . expression OR expression
    (60) expression -> . expression AND expression
    (61) expression -> . NOT expression
    (62) expression -> . TILDA expression
    (63) expression -> . LPAREN expression RPAREN
    (64) expression -> . SELF
    (65) expression -> . ID
    (66) expression -> . ID LSQRBRACKET expression RSQRBRACKET
    (67) expression -> . INTEGER
    (68) expression -> . STRING
    (69) expression -> . TRUE
    (70) expression -> . FALSE
    (71) expression -> . BREAK
    (72) expression -> . CONTINUE
    (75) if_then_else -> . IF expression THEN expression ELSE expression FI
    (76) while -> . WHILE expression LOOP expression POOL
    (77) for -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL
    (78) block_expression -> . LBRACE block_list RBRACE
    (81) let_expression -> . LET formal IN expression

    ID              shift and go to state 75
    NEW             shift and go to state 66
    ISVOID          shift and go to state 70
    NOT             shift and go to state 85
    TILDA           shift and go to state 71
    LPAREN          shift and go to state 73
    SELF            shift and go to state 81
    INTEGER         shift and go to state 79
    STRING          shift and go to state 68
    TRUE            shift and go to state 67
    FALSE           shift and go to state 78
    BREAK           shift and go to state 80
    CONTINUE        shift and go to state 83
    IF              shift and go to state 65
    WHILE           shift and go to state 64
    FOR             shift and go to state 72
    LBRACE          shift and go to state 77
    LET             shift and go to state 84

    for                            shift and go to state 69
    let_expression                 shift and go to state 63
    while                          shift and go to state 82
    block_expression               shift and go to state 74
    expression                     shift and go to state 197
    if_then_else                   shift and go to state 76

state 196

    (40) expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .

    PERIOD          reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    AT              reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    DIVIDE          reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    MOD             reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    LT              reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    GT              reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    LTEQ            reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    GTEQ            reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    EQUAL           reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    OR              reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    AND             reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    SEMICOLON       reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    LOOP            reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    THEN            reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    RSQRBRACKET     reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    ID              reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    NEW             reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    ISVOID          reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    NOT             reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    TILDA           reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    SELF            reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    INTEGER         reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    STRING          reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    TRUE            reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    FALSE           reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    BREAK           reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    CONTINUE        reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    IF              reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    WHILE           reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    FOR             reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    LBRACE          reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    LET             reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    POOL            reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    ELSE            reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)
    FI              reduce using rule 40 (expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN .)


state 197

    (77) for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression . POOL
    (36) expression -> expression . PERIOD ID LPAREN argument_list RPAREN
    (37) expression -> expression . PERIOD ID LPAREN RPAREN
    (40) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN
    (41) expression -> expression . AT CLASS_TYPE PERIOD ID LPAREN RPAREN
    (49) expression -> expression . PLUS expression
    (50) expression -> expression . MINUS expression
    (51) expression -> expression . TIMES expression
    (52) expression -> expression . DIVIDE expression
    (53) expression -> expression . MOD expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . GT expression
    (56) expression -> expression . LTEQ expression
    (57) expression -> expression . GTEQ expression
    (58) expression -> expression . EQUAL expression
    (59) expression -> expression . OR expression
    (60) expression -> expression . AND expression

    POOL            shift and go to state 198
    PERIOD          shift and go to state 117
    AT              shift and go to state 119
    PLUS            shift and go to state 114
    MINUS           shift and go to state 111
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 116
    MOD             shift and go to state 123
    LT              shift and go to state 113
    GT              shift and go to state 115
    LTEQ            shift and go to state 121
    GTEQ            shift and go to state 109
    EQUAL           shift and go to state 110
    OR              shift and go to state 122
    AND             shift and go to state 120


state 198

    (77) for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .

    PERIOD          reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    AT              reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    PLUS            reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    MINUS           reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    TIMES           reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    DIVIDE          reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    MOD             reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    LT              reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    GT              reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    LTEQ            reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    GTEQ            reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    EQUAL           reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    OR              reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    AND             reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    RPAREN          reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    ID              reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    NEW             reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    ISVOID          reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    NOT             reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    TILDA           reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    LPAREN          reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    SELF            reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    INTEGER         reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    STRING          reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    TRUE            reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    FALSE           reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    BREAK           reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    CONTINUE        reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    IF              reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    WHILE           reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    FOR             reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    LBRACE          reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    LET             reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    RSQRBRACKET     reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    SEMICOLON       reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    LOOP            reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    THEN            reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    RBRACE          reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    POOL            reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    ELSE            reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)
    FI              reduce using rule 77 (for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression LOOP expression POOL .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 75 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 168 resolved as shift
WARNING: shift/reduce conflict for AT in state 168 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 168 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 168 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 168 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 168 resolved as shift
WARNING: shift/reduce conflict for MOD in state 168 resolved as shift
WARNING: shift/reduce conflict for LT in state 168 resolved as shift
WARNING: shift/reduce conflict for GT in state 168 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 168 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 168 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 168 resolved as shift
WARNING: shift/reduce conflict for OR in state 168 resolved as shift
WARNING: shift/reduce conflict for AND in state 168 resolved as shift
