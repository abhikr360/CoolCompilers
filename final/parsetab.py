
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightGETSleftORleftANDleftBITWISEANDleftBITWISEORrightNOTnonassocLTEQGTEQLTGTEQUALleftPLUSMINUSleftTIMESDIVIDEMODrightISVOIDrightTILDAleftATleftPERIODIMPORT CLASS INHERITS PUBLIC PRIVATE SEMICOLON COLON ID LSQRBRACKET RSQRBRACKET LPAREN RPAREN LBRACE RBRACE PERIOD DEF RETURN OBJECT CLASS_TYPE INTEGER INTEGER_TYPE BOOL_TYPE STRING_TYPE SELF_TYPE STRING TRUE FALSE MOD TILDA GT LT EQUAL LTEQ GTEQ GETS OR AND NOT IF THEN ELSE FI WHILE LOOP POOL FOR LET TEL IN BREAK CONTINUE ISVOID NEW PLUS MINUS TIMES DIVIDE COMMA BITWISEAND BITWISEOR AT OUT_INT OUT_STRING SCAN_INT SCAN_STRING READ_FILE WRITE_FILEstart : programprogram : imports classesprogram : classesimports : imports IMPORT ID SEMICOLONimports : IMPORT ID SEMICOLONclasses : classes class SEMICOLONclasses : class SEMICOLONclass : class_header class_bodyclass_header : CLASS CLASS_TYPE INHERITS CLASS_TYPEclass_header : CLASS CLASS_TYPEclass_body : LBRACE RBRACEclass_body : LBRACE features_list RBRACEfeatures_list : features_list feature SEMICOLONfeatures_list : feature SEMICOLONfeature : feature_header feature_bodyfeature_header : DEF modifier ID COLON typefeature_header : DEF ID COLON typefeature_body : LPAREN formal_parameter_list RPAREN LBRACE expression RBRACEfeature_body : LPAREN RPAREN LBRACE expression RBRACEfeature : modifier formalfeature : formalmodifier : PUBLICmodifier : PRIVATEtype : CLASS_TYPEtype : INTEGER_TYPEtype : BOOL_TYPEtype : STRING_TYPEtype : OBJECTtype : SELF_TYPEformal_parameter_list : formal_parameter_list COMMA formal_parameterformal_parameter_list : formal_parameterformal_parameter : ID COLON typeformal_parameter : ID LSQRBRACKET RSQRBRACKET COLON typeformal : ID COLON type GETS expressionformal : ID COLON typeformal : ID COLON type LSQRBRACKET expression RSQRBRACKETexpression : block_expressionblock_expression : LBRACE block_list RBRACEblock_list : block_list expression SEMICOLONblock_list : expression SEMICOLONexpression : ID GETS expressionexpression : expression LSQRBRACKET expression RSQRBRACKET GETS expressionexpression : OUT_INT LPAREN expression RPARENexpression : OUT_STRING LPAREN expression RPARENexpression : SCAN_INT LPAREN expression RPARENexpression : SCAN_STRING LPAREN expression RPARENexpression : ID LPAREN argument_list RPARENexpression : ID LPAREN RPARENargument_list : expressionargument_list : argument_list COMMA expressionexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : expression TIMES expressionexpression : expression DIVIDE expressionexpression : expression MOD expressionexpression : expression BITWISEAND expressionexpression : expression BITWISEOR expressionexpression : expression LT expressionexpression : expression GT expressionexpression : expression LTEQ expressionexpression : expression GTEQ expressionexpression : expression EQUAL expressionexpression : expression OR expressionexpression : expression AND expressionexpression : NOT expressionexpression : TILDA expressionexpression : LPAREN expression RPARENexpression : IDexpression : expression LSQRBRACKET expression RSQRBRACKETexpression : INTEGERexpression : STRINGexpression : TRUEexpression : FALSEexpression : BREAKexpression : CONTINUEexpression : RETURN expression SEMICOLONexpression : expression PERIOD ID LPAREN argument_list RPARENexpression : expression PERIOD ID LPAREN RPARENexpression : NEW typeexpression : ISVOID expressionexpression : let_expressionlet : LETlet_expression : let formaldehyde IN expression TELexpression : expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPARENexpression : expression AT CLASS_TYPE PERIOD ID LPAREN RPARENexpression : if_then_elseif_then_else : IF expression THEN expression ELSE expression FIexpression : whilewhile : WHILE expression LOOP expression POOLexpression : forfor : FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LOOP expression POOLformaldehyde : formaldehyde COMMA ID COLON type GETS expressionformaldehyde : formaldehyde COMMA ID COLON typeformaldehyde : formaldehyde COMMA ID COLON type LSQRBRACKET expression RSQRBRACKETformaldehyde : ID COLON type GETS expressionformaldehyde : ID COLON typeformaldehyde : ID COLON type LSQRBRACKET expression RSQRBRACKETexpression : expression PERIOD IDexpression : expression PERIOD ID GETS expressionexpression : READ_FILE LPAREN ID COMMA expression RPARENexpression : WRITE_FILE LPAREN expression COMMA expression RPAREN'
    
_lr_action_items = {'THEN':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,107,108,112,113,122,146,151,154,158,160,167,168,169,170,171,172,173,174,175,176,179,180,181,182,183,185,188,189,194,196,203,204,210,214,216,221,222,226,228,229,234,239,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,149,-79,-80,-66,-65,-76,-48,-41,-67,-38,-61,-62,-52,-54,-58,-51,-59,-57,-98,-53,-64,-60,-56,-63,-55,-45,-46,-47,-44,-43,-69,-89,-83,-78,-99,-101,-100,-77,-42,-87,-85,-84,-91,]),'SELF_TYPE':([39,55,59,63,72,143,166,211,],[47,47,47,47,47,47,47,47,]),'GTEQ':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,97,100,101,103,104,106,107,108,112,113,117,120,122,146,147,150,151,153,154,155,156,158,159,160,161,163,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,189,194,196,197,203,204,206,207,208,209,210,214,216,219,221,222,224,225,226,228,229,230,234,237,238,239,242,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,125,125,125,125,125,125,125,-79,-80,-66,125,125,125,-76,125,125,-48,125,125,125,125,-67,125,-38,125,125,None,None,-52,-54,None,-51,None,125,-98,-53,125,125,None,125,125,-55,-45,125,125,-46,-47,-44,-43,125,-69,-89,125,125,125,125,-83,-78,125,125,-101,-100,125,125,-77,125,-87,125,-85,125,125,-84,125,-91,]),'OBJECT':([39,55,59,63,72,143,166,211,],[49,49,49,49,49,49,49,49,]),'STRING_TYPE':([39,55,59,63,72,143,166,211,],[50,50,50,50,50,50,50,50,]),'ELSE':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,108,112,113,122,146,151,154,158,160,167,168,169,170,171,172,173,174,175,176,179,180,181,182,183,185,187,188,189,194,196,203,204,210,214,216,221,222,226,228,229,234,239,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,-79,-80,-66,-65,-76,-48,-41,-67,-38,-61,-62,-52,-54,-58,-51,-59,-57,-98,-53,-64,-60,-56,-63,-55,-45,205,-46,-47,-44,-43,-69,-89,-83,-78,-99,-101,-100,-77,-42,-87,-85,-84,-91,]),'SCAN_INT':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-40,69,69,69,69,69,-39,69,69,69,69,69,69,69,69,69,69,69,]),'WHILE':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-40,70,70,70,70,70,-39,70,70,70,70,70,70,70,70,70,70,70,]),'STRING':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-40,79,79,79,79,79,-39,79,79,79,79,79,79,79,79,79,79,79,]),'IF':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-40,71,71,71,71,71,-39,71,71,71,71,71,71,71,71,71,71,71,]),'NEW':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-40,72,72,72,72,72,-39,72,72,72,72,72,72,72,72,72,72,72,]),'FI':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,108,112,113,122,146,151,154,158,160,167,168,169,170,171,172,173,174,175,176,179,180,181,182,183,185,188,189,194,196,203,204,210,214,216,219,221,222,226,228,229,234,239,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,-79,-80,-66,-65,-76,-48,-41,-67,-38,-61,-62,-52,-54,-58,-51,-59,-57,-98,-53,-64,-60,-56,-63,-55,-45,-46,-47,-44,-43,-69,-89,-83,-78,-99,229,-101,-100,-77,-42,-87,-85,-84,-91,]),'TRUE':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-40,73,73,73,73,73,-39,73,73,73,73,73,73,73,73,73,73,73,]),'MINUS':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,97,100,101,103,104,106,107,108,112,113,117,120,122,146,147,150,151,153,154,155,156,158,159,160,161,163,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,189,194,196,197,203,204,206,207,208,209,210,214,216,219,221,222,224,225,226,228,229,230,234,237,238,239,242,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,127,127,127,127,127,127,127,-79,-80,-66,127,127,127,-76,127,127,-48,127,127,127,127,-67,127,-38,127,127,127,127,-52,-54,127,-51,127,127,-98,-53,127,127,127,127,127,-55,-45,127,127,-46,-47,-44,-43,127,-69,-89,127,127,127,127,-83,-78,127,127,-101,-100,127,127,-77,127,-87,127,-85,127,127,-84,127,-91,]),'BOOL_TYPE':([39,55,59,63,72,143,166,211,],[53,53,53,53,53,53,53,53,]),'DIVIDE':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,97,100,101,103,104,106,107,108,112,113,117,120,122,146,147,150,151,153,154,155,156,158,159,160,161,163,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,189,194,196,197,203,204,206,207,208,209,210,214,216,219,221,222,224,225,226,228,229,230,234,237,238,239,242,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,128,128,128,128,128,128,128,-79,-80,-66,128,128,128,-76,128,128,-48,128,128,128,128,-67,128,-38,128,128,128,128,128,-54,128,128,128,128,-98,-53,128,128,128,128,128,-55,-45,128,128,-46,-47,-44,-43,128,-69,-89,128,128,128,128,-83,-78,128,128,-101,-100,128,128,-77,128,-87,128,-85,128,128,-84,128,-91,]),'SCAN_STRING':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-40,74,74,74,74,74,-39,74,74,74,74,74,74,74,74,74,74,74,]),'RPAREN':([37,43,45,47,48,49,50,51,53,66,68,73,75,78,79,81,85,87,89,91,92,93,98,108,110,112,113,117,122,146,147,150,151,152,153,154,158,159,160,163,167,168,169,170,171,172,173,174,175,176,179,180,181,182,183,184,185,188,189,194,196,200,203,204,206,208,209,210,214,215,216,221,222,226,227,228,229,230,234,235,239,243,],[44,56,-31,-29,-24,-28,-27,-25,-26,-30,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,-32,-79,151,-80,-66,158,-65,-76,185,188,-48,189,-49,-41,-67,194,-38,196,-61,-62,-52,-54,-58,-51,-59,-57,-98,-53,-64,-60,-56,-63,-55,-33,-45,-46,-47,-44,-43,214,-69,-89,-50,221,222,-83,-78,226,-99,-101,-100,-77,234,-42,-87,236,-85,239,-84,-91,]),'SEMICOLON':([3,13,14,16,17,21,22,30,34,35,36,38,47,48,49,50,51,52,53,68,73,75,78,79,81,85,87,89,91,92,93,100,104,108,112,113,120,122,132,144,145,146,151,154,155,158,160,161,167,168,169,170,171,172,173,174,175,176,179,180,181,182,183,185,188,189,194,196,203,204,207,210,214,216,221,222,226,228,229,234,239,243,],[11,19,20,-8,31,-11,33,-21,-12,42,-15,-20,-29,-24,-28,-27,-25,-35,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,-34,146,-79,-80,-66,162,-65,-19,-36,-18,-76,-48,-41,191,-67,-38,195,-61,-62,-52,-54,-58,-51,-59,-57,-98,-53,-64,-60,-56,-63,-55,-45,-46,-47,-44,-43,-69,-89,220,-83,-78,-99,-101,-100,-77,-42,-87,-85,-84,-91,]),'PRIVATE':([15,24,29,33,42,],[23,23,23,-14,-13,]),'ID':([7,10,15,23,24,25,27,29,33,37,40,42,57,58,61,62,65,67,70,71,76,77,84,88,94,95,96,105,109,110,111,114,115,116,118,119,121,125,126,127,128,129,130,131,133,134,135,137,138,139,140,141,142,148,149,162,164,165,190,191,192,193,195,200,201,202,205,212,213,218,220,227,231,232,240,],[14,17,28,-23,28,-22,28,41,-14,46,54,-13,46,75,75,75,75,75,75,75,75,75,75,75,-82,75,124,75,75,75,75,75,75,157,75,75,75,75,75,75,75,75,75,75,75,175,75,75,75,75,75,75,75,75,75,-40,75,198,75,75,75,75,-39,75,75,217,75,75,75,75,75,75,75,75,75,]),'ISVOID':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-40,76,76,76,76,76,-39,76,76,76,76,76,76,76,76,76,76,76,]),'INTEGER_TYPE':([39,55,59,63,72,143,166,211,],[51,51,51,51,51,51,51,51,]),'LT':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,97,100,101,103,104,106,107,108,112,113,117,120,122,146,147,150,151,153,154,155,156,158,159,160,161,163,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,189,194,196,197,203,204,206,207,208,209,210,214,216,219,221,222,224,225,226,228,229,230,234,237,238,239,242,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,129,129,129,129,129,129,129,-79,-80,-66,129,129,129,-76,129,129,-48,129,129,129,129,-67,129,-38,129,129,None,None,-52,-54,None,-51,None,129,-98,-53,129,129,None,129,129,-55,-45,129,129,-46,-47,-44,-43,129,-69,-89,129,129,129,129,-83,-78,129,129,-101,-100,129,129,-77,129,-87,129,-85,129,129,-84,129,-91,]),'TILDA':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-40,77,77,77,77,77,-39,77,77,77,77,77,77,77,77,77,77,77,]),'COLON':([28,41,46,54,99,124,198,],[39,55,59,63,143,166,211,]),'DEF':([15,24,33,42,],[29,29,-14,-13,]),'IMPORT':([0,2,20,31,],[7,10,-5,-4,]),'IN':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,108,112,113,122,123,146,151,154,158,160,167,168,169,170,171,172,173,174,175,176,179,180,181,182,183,185,188,189,194,196,199,203,204,210,214,216,221,222,223,224,226,228,229,233,234,238,239,241,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,-79,-80,-66,-65,164,-76,-48,-41,-67,-38,-61,-62,-52,-54,-58,-51,-59,-57,-98,-53,-64,-60,-56,-63,-55,-45,-46,-47,-44,-43,-96,-69,-89,-83,-78,-99,-101,-100,-93,-95,-77,-42,-87,-97,-85,-92,-84,-94,-91,]),'GETS':([47,48,49,50,51,52,53,75,175,199,203,223,],[-29,-24,-28,-27,-25,61,-26,111,201,212,218,232,]),'CLASS':([0,2,6,9,11,19,20,31,],[5,5,5,5,-7,-6,-5,-4,]),'$end':([1,4,6,9,11,19,],[-1,0,-3,-2,-7,-6,]),'INHERITS':([12,],[18,]),'GT':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,97,100,101,103,104,106,107,108,112,113,117,120,122,146,147,150,151,153,154,155,156,158,159,160,161,163,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,189,194,196,197,203,204,206,207,208,209,210,214,216,219,221,222,224,225,226,228,229,230,234,237,238,239,242,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,131,131,131,131,131,131,131,-79,-80,-66,131,131,131,-76,131,131,-48,131,131,131,131,-67,131,-38,131,131,None,None,-52,-54,None,-51,None,131,-98,-53,131,131,None,131,131,-55,-45,131,131,-46,-47,-44,-43,131,-69,-89,131,131,131,131,-83,-78,131,131,-101,-100,131,131,-77,131,-87,131,-85,131,131,-84,131,-91,]),'RBRACE':([15,24,33,42,47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,97,103,108,112,113,119,122,146,151,154,158,160,162,167,168,169,170,171,172,173,174,175,176,179,180,181,182,183,185,188,189,194,195,196,203,204,210,214,216,221,222,226,228,229,234,239,243,],[21,34,-14,-13,-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,132,145,-79,-80,-66,160,-65,-76,-48,-41,-67,-38,-40,-61,-62,-52,-54,-58,-51,-59,-57,-98,-53,-64,-60,-56,-63,-55,-45,-46,-47,-44,-39,-43,-69,-89,-83,-78,-99,-101,-100,-77,-42,-87,-85,-84,-91,]),'FOR':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-40,80,80,80,80,80,-39,80,80,80,80,80,80,80,80,80,80,80,]),'BITWISEOR':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,97,100,101,103,104,106,107,108,112,113,117,120,122,146,147,150,151,153,154,155,156,158,159,160,161,163,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,189,194,196,197,203,204,206,207,208,209,210,214,216,219,221,222,224,225,226,228,229,230,234,237,238,239,242,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,133,133,133,133,133,133,133,-79,-80,-66,133,133,-65,-76,133,133,-48,133,133,133,133,-67,133,-38,133,133,-61,-62,-52,-54,-58,-51,-59,-57,-98,-53,133,133,-60,133,133,-55,-45,133,133,-46,-47,-44,-43,133,-69,-89,133,133,133,133,-83,-78,133,133,-101,-100,133,133,-77,133,-87,133,-85,133,133,-84,133,-91,]),'OUT_STRING':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-40,86,86,86,86,86,-39,86,86,86,86,86,86,86,86,86,86,86,]),'PERIOD':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,97,100,101,103,104,106,107,108,112,113,117,120,122,146,147,150,151,153,154,155,156,158,159,160,161,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,194,196,197,203,204,206,207,208,209,210,214,216,219,221,222,224,225,226,228,229,230,234,237,238,239,242,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,134,134,134,134,134,134,134,-79,134,134,134,134,134,-76,134,134,-48,134,134,134,134,-67,134,-38,134,134,134,134,134,134,134,134,134,134,-98,134,202,134,134,134,134,134,134,-45,134,134,-46,-47,-44,-43,134,-69,-89,134,134,134,134,-83,-78,134,134,-101,-100,134,134,-77,134,-87,134,-85,134,134,-84,134,-91,]),'EQUAL':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,97,100,101,103,104,106,107,108,112,113,117,120,122,146,147,150,151,153,154,155,156,158,159,160,161,163,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,189,194,196,197,203,204,206,207,208,209,210,214,216,219,221,222,224,225,226,228,229,230,234,237,238,239,242,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,126,126,126,126,126,126,126,-79,-80,-66,126,126,126,-76,126,126,-48,126,126,126,126,-67,126,-38,126,126,None,None,-52,-54,None,-51,None,126,-98,-53,126,126,None,126,126,-55,-45,126,126,-46,-47,-44,-43,126,-69,-89,126,126,126,126,-83,-78,126,126,-101,-100,126,126,-77,126,-87,126,-85,126,126,-84,126,-91,]),'WRITE_FILE':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-40,82,82,82,82,82,-39,82,82,82,82,82,82,82,82,82,82,82,]),'READ_FILE':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-40,83,83,83,83,83,-39,83,83,83,83,83,83,83,83,83,83,83,]),'AT':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,97,100,101,103,104,106,107,108,112,113,117,120,122,146,147,150,151,153,154,155,156,158,159,160,161,163,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,189,194,196,197,203,204,206,207,208,209,210,214,216,219,221,222,224,225,226,228,229,230,234,237,238,239,242,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,136,136,136,136,136,136,136,-79,136,136,136,136,136,-76,136,136,-48,136,136,136,136,-67,136,-38,136,136,136,136,136,136,136,136,136,136,-98,136,136,136,136,136,136,136,-45,136,136,-46,-47,-44,-43,136,-69,-89,136,136,136,136,-83,-78,136,136,-101,-100,136,136,-77,136,-87,136,-85,136,136,-84,136,-91,]),'LPAREN':([26,47,48,49,50,51,53,58,61,62,64,65,67,69,70,71,74,75,76,77,80,82,83,84,86,88,90,95,102,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,175,190,191,192,193,195,200,201,205,212,213,217,218,220,227,231,232,240,],[37,-29,-24,-28,-27,-25,-26,84,84,84,-17,84,84,105,84,84,109,110,84,84,114,115,116,84,118,84,121,84,-16,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-40,84,200,84,84,84,84,-39,84,84,84,84,84,227,84,84,84,84,84,84,]),'RSQRBRACKET':([47,48,49,50,51,53,60,68,73,75,78,79,81,85,87,89,91,92,93,101,108,112,113,122,146,151,154,158,160,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,185,188,189,194,196,203,204,210,214,216,221,222,225,226,228,229,234,237,239,243,],[-29,-24,-28,-27,-25,-26,99,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,144,-79,-80,-66,-65,-76,-48,-41,-67,-38,-61,-62,-52,-54,-58,-51,-59,-57,-98,-53,203,-64,-60,-56,-63,-55,-45,-46,-47,-44,-43,-69,-89,-83,-78,-99,-101,-100,233,-77,-42,-87,-85,241,-84,-91,]),'TEL':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,108,112,113,122,146,151,154,158,160,167,168,169,170,171,172,173,174,175,176,179,180,181,182,183,185,188,189,194,196,197,203,204,210,214,216,221,222,226,228,229,234,239,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,-79,-80,-66,-65,-76,-48,-41,-67,-38,-61,-62,-52,-54,-58,-51,-59,-57,-98,-53,-64,-60,-56,-63,-55,-45,-46,-47,-44,-43,210,-69,-89,-83,-78,-99,-101,-100,-77,-42,-87,-85,-84,-91,]),'TIMES':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,97,100,101,103,104,106,107,108,112,113,117,120,122,146,147,150,151,153,154,155,156,158,159,160,161,163,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,189,194,196,197,203,204,206,207,208,209,210,214,216,219,221,222,224,225,226,228,229,230,234,237,238,239,242,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,135,135,135,135,135,135,135,-79,-80,-66,135,135,135,-76,135,135,-48,135,135,135,135,-67,135,-38,135,135,135,135,135,-54,135,135,135,135,-98,-53,135,135,135,135,135,-55,-45,135,135,-46,-47,-44,-43,135,-69,-89,135,135,135,135,-83,-78,135,135,-101,-100,135,135,-77,135,-87,135,-85,135,135,-84,135,-91,]),'LSQRBRACKET':([46,47,48,49,50,51,52,53,68,73,75,78,79,81,85,87,89,91,92,93,97,100,101,103,104,106,107,108,112,113,117,120,122,146,147,150,151,153,154,155,156,158,159,160,161,163,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,189,194,196,197,199,203,204,206,207,208,209,210,214,216,219,221,222,223,224,225,226,228,229,230,234,237,238,239,242,243,],[60,-29,-24,-28,-27,-25,62,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,137,137,137,137,137,137,137,-79,-80,-66,137,137,-65,-76,137,137,-48,137,-41,137,137,-67,137,-38,137,137,-61,-62,-52,-54,-58,-51,-59,-57,-98,-53,137,-64,-60,-56,-63,-55,-45,137,137,-46,-47,-44,-43,137,213,-69,-89,137,137,137,137,-83,-78,-99,137,-101,-100,231,137,137,-77,-42,-87,137,-85,137,137,-84,137,-91,]),'POOL':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,108,112,113,122,146,151,154,158,160,167,168,169,170,171,172,173,174,175,176,179,180,181,182,183,185,186,188,189,194,196,203,204,210,214,216,221,222,226,228,229,234,239,242,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,-79,-80,-66,-65,-76,-48,-41,-67,-38,-61,-62,-52,-54,-58,-51,-59,-57,-98,-53,-64,-60,-56,-63,-55,-45,204,-46,-47,-44,-43,-69,-89,-83,-78,-99,-101,-100,-77,-42,-87,-85,-84,243,-91,]),'PLUS':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,97,100,101,103,104,106,107,108,112,113,117,120,122,146,147,150,151,153,154,155,156,158,159,160,161,163,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,189,194,196,197,203,204,206,207,208,209,210,214,216,219,221,222,224,225,226,228,229,230,234,237,238,239,242,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,130,130,130,130,130,130,130,-79,-80,-66,130,130,130,-76,130,130,-48,130,130,130,130,-67,130,-38,130,130,130,130,-52,-54,130,-51,130,130,-98,-53,130,130,130,130,130,-55,-45,130,130,-46,-47,-44,-43,130,-69,-89,130,130,130,130,-83,-78,130,130,-101,-100,130,130,-77,130,-87,130,-85,130,130,-84,130,-91,]),'AND':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,97,100,101,103,104,106,107,108,112,113,117,120,122,146,147,150,151,153,154,155,156,158,159,160,161,163,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,189,194,196,197,203,204,206,207,208,209,210,214,216,219,221,222,224,225,226,228,229,230,234,237,238,239,242,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,138,138,138,138,138,138,138,-79,-80,-66,138,138,-65,-76,138,138,-48,138,138,138,138,-67,138,-38,138,138,-61,-62,-52,-54,-58,-51,-59,-57,-98,-53,138,-64,-60,-56,138,-55,-45,138,138,-46,-47,-44,-43,138,-69,-89,138,138,138,138,-83,-78,138,138,-101,-100,138,138,-77,138,-87,138,-85,138,138,-84,138,-91,]),'RETURN':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-40,67,67,67,67,67,-39,67,67,67,67,67,67,67,67,67,67,67,]),'LBRACE':([8,12,32,44,56,58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[15,-10,-9,58,65,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-40,88,88,88,88,88,-39,88,88,88,88,88,88,88,88,88,88,88,]),'FALSE':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-40,89,89,89,89,89,-39,89,89,89,89,89,89,89,89,89,89,89,]),'CLASS_TYPE':([5,18,39,55,59,63,72,136,143,166,211,],[12,32,48,48,48,48,48,177,48,48,48,]),'OUT_INT':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-40,90,90,90,90,90,-39,90,90,90,90,90,90,90,90,90,90,90,]),'INTEGER':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-40,78,78,78,78,78,-39,78,78,78,78,78,78,78,78,78,78,78,]),'LTEQ':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,97,100,101,103,104,106,107,108,112,113,117,120,122,146,147,150,151,153,154,155,156,158,159,160,161,163,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,189,194,196,197,203,204,206,207,208,209,210,214,216,219,221,222,224,225,226,228,229,230,234,237,238,239,242,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,139,139,139,139,139,139,139,-79,-80,-66,139,139,139,-76,139,139,-48,139,139,139,139,-67,139,-38,139,139,None,None,-52,-54,None,-51,None,139,-98,-53,139,139,None,139,139,-55,-45,139,139,-46,-47,-44,-43,139,-69,-89,139,139,139,139,-83,-78,139,139,-101,-100,139,139,-77,139,-87,139,-85,139,139,-84,139,-91,]),'BITWISEAND':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,97,100,101,103,104,106,107,108,112,113,117,120,122,146,147,150,151,153,154,155,156,158,159,160,161,163,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,189,194,196,197,203,204,206,207,208,209,210,214,216,219,221,222,224,225,226,228,229,230,234,237,238,239,242,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,140,140,140,140,140,140,140,-79,-80,-66,140,140,-65,-76,140,140,-48,140,140,140,140,-67,140,-38,140,140,-61,-62,-52,-54,-58,-51,-59,-57,-98,-53,140,140,-60,-56,140,-55,-45,140,140,-46,-47,-44,-43,140,-69,-89,140,140,140,140,-83,-78,140,140,-101,-100,140,140,-77,140,-87,140,-85,140,140,-84,140,-91,]),'OR':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,97,100,101,103,104,106,107,108,112,113,117,120,122,146,147,150,151,153,154,155,156,158,159,160,161,163,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,189,194,196,197,203,204,206,207,208,209,210,214,216,219,221,222,224,225,226,228,229,230,234,237,238,239,242,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,141,141,141,141,141,141,141,-79,-80,-66,141,141,-65,-76,141,141,-48,141,141,141,141,-67,141,-38,141,141,-61,-62,-52,-54,-58,-51,-59,-57,-98,-53,141,-64,-60,-56,-63,-55,-45,141,141,-46,-47,-44,-43,141,-69,-89,141,141,141,141,-83,-78,141,141,-101,-100,141,141,-77,141,-87,141,-85,141,141,-84,141,-91,]),'BREAK':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-40,91,91,91,91,91,-39,91,91,91,91,91,91,91,91,91,91,91,]),'CONTINUE':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-40,93,93,93,93,93,-39,93,93,93,93,93,93,93,93,93,93,93,]),'LET':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-40,94,94,94,94,94,-39,94,94,94,94,94,94,94,94,94,94,94,]),'NOT':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,162,164,190,191,192,193,195,200,201,205,212,213,218,220,227,231,232,240,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-40,95,95,95,95,95,-39,95,95,95,95,95,95,95,95,95,95,95,]),'COMMA':([43,45,47,48,49,50,51,53,66,68,73,75,78,79,81,85,87,89,91,92,93,98,108,112,113,122,123,146,151,152,153,154,156,157,158,160,167,168,169,170,171,172,173,174,175,176,179,180,181,182,183,184,185,188,189,194,196,199,203,204,206,210,214,215,216,221,222,223,224,226,228,229,233,234,235,238,239,241,243,],[57,-31,-29,-24,-28,-27,-25,-26,-30,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,-32,-79,-80,-66,-65,165,-76,-48,190,-49,-41,192,193,-67,-38,-61,-62,-52,-54,-58,-51,-59,-57,-98,-53,-64,-60,-56,-63,-55,-33,-45,-46,-47,-44,-43,-96,-69,-89,-50,-83,-78,190,-99,-101,-100,-93,-95,-77,-42,-87,-97,-85,190,-92,-84,-94,-91,]),'PUBLIC':([15,24,29,33,42,],[25,25,25,-14,-13,]),'LOOP':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,106,108,112,113,122,146,151,154,158,160,167,168,169,170,171,172,173,174,175,176,179,180,181,182,183,185,188,189,194,196,203,204,210,214,216,221,222,226,228,229,234,236,239,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,148,-79,-80,-66,-65,-76,-48,-41,-67,-38,-61,-62,-52,-54,-58,-51,-59,-57,-98,-53,-64,-60,-56,-63,-55,-45,-46,-47,-44,-43,-69,-89,-83,-78,-99,-101,-100,-77,-42,-87,-85,240,-84,-91,]),'MOD':([47,48,49,50,51,53,68,73,75,78,79,81,85,87,89,91,92,93,97,100,101,103,104,106,107,108,112,113,117,120,122,146,147,150,151,153,154,155,156,158,159,160,161,163,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,189,194,196,197,203,204,206,207,208,209,210,214,216,219,221,222,224,225,226,228,229,230,234,237,238,239,242,243,],[-29,-24,-28,-27,-25,-26,-81,-72,-68,-70,-71,-90,-37,-86,-73,-74,-88,-75,142,142,142,142,142,142,142,-79,-80,-66,142,142,142,-76,142,142,-48,142,142,142,142,-67,142,-38,142,142,142,142,142,-54,142,142,142,142,-98,-53,142,142,142,142,142,-55,-45,142,142,-46,-47,-44,-43,142,-69,-89,142,142,142,142,-83,-78,142,142,-101,-100,142,142,-77,142,-87,142,-85,142,142,-84,142,-91,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'imports':([0,],[2,]),'let_expression':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,164,190,191,192,193,200,201,205,212,213,218,220,227,231,232,240,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'block_list':([88,],[119,]),'feature_body':([26,],[36,]),'feature_header':([15,24,],[26,26,]),'for':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,164,190,191,192,193,200,201,205,212,213,218,220,227,231,232,240,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'feature':([15,24,],[22,35,]),'start':([0,],[4,]),'program':([0,],[1,]),'argument_list':([110,200,227,],[152,215,235,]),'if_then_else':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,164,190,191,192,193,200,201,205,212,213,218,220,227,231,232,240,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'type':([39,55,59,63,72,143,166,211,],[52,64,98,102,108,184,199,223,]),'formal_parameter_list':([37,],[43,]),'class_body':([8,],[16,]),'let':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,164,190,191,192,193,200,201,205,212,213,218,220,227,231,232,240,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'block_expression':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,164,190,191,192,193,200,201,205,212,213,218,220,227,231,232,240,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'class_header':([0,2,6,9,],[8,8,8,8,]),'class':([0,2,6,9,],[3,3,13,13,]),'formal':([15,24,27,],[30,30,38,]),'formal_parameter':([37,57,],[45,66,]),'features_list':([15,],[24,]),'while':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,164,190,191,192,193,200,201,205,212,213,218,220,227,231,232,240,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'classes':([0,2,],[6,9,]),'formaldehyde':([96,],[123,]),'modifier':([15,24,29,],[27,27,40,]),'expression':([58,61,62,65,67,70,71,76,77,84,88,95,105,109,110,111,114,115,118,119,121,125,126,127,128,129,130,131,133,135,137,138,139,140,141,142,148,149,164,190,191,192,193,200,201,205,212,213,218,220,227,231,232,240,],[97,100,101,103,104,106,107,112,113,117,120,122,147,150,153,154,155,156,159,161,163,167,168,169,170,171,172,173,174,176,178,179,180,181,182,183,186,187,197,206,207,208,209,153,216,219,224,225,228,230,153,237,238,242,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> program','start',1,'p_start','miniirgen.py',93),
  ('program -> imports classes','program',2,'p_program_with_imports','miniirgen.py',112),
  ('program -> classes','program',1,'p_program','miniirgen.py',119),
  ('imports -> imports IMPORT ID SEMICOLON','imports',4,'p_imports_multiple','miniirgen.py',124),
  ('imports -> IMPORT ID SEMICOLON','imports',3,'p_imports','miniirgen.py',129),
  ('classes -> classes class SEMICOLON','classes',3,'p_classes_multiple','miniirgen.py',135),
  ('classes -> class SEMICOLON','classes',2,'p_classes','miniirgen.py',146),
  ('class -> class_header class_body','class',2,'p_class_header_body','miniirgen.py',154),
  ('class_header -> CLASS CLASS_TYPE INHERITS CLASS_TYPE','class_header',4,'p_class_header_with_inheritance','miniirgen.py',164),
  ('class_header -> CLASS CLASS_TYPE','class_header',2,'p_class_header','miniirgen.py',191),
  ('class_body -> LBRACE RBRACE','class_body',2,'p_class_body_empty','miniirgen.py',208),
  ('class_body -> LBRACE features_list RBRACE','class_body',3,'p_class_body','miniirgen.py',211),
  ('features_list -> features_list feature SEMICOLON','features_list',3,'p_features_list_mult','miniirgen.py',217),
  ('features_list -> feature SEMICOLON','features_list',2,'p_features_list','miniirgen.py',227),
  ('feature -> feature_header feature_body','feature',2,'p_feature_header_body','miniirgen.py',233),
  ('feature_header -> DEF modifier ID COLON type','feature_header',5,'p_feature_header_with_modifier','miniirgen.py',250),
  ('feature_header -> DEF ID COLON type','feature_header',4,'p_feature_header','miniirgen.py',273),
  ('feature_body -> LPAREN formal_parameter_list RPAREN LBRACE expression RBRACE','feature_body',6,'p_feature_body_with_formal_parameter_list','miniirgen.py',297),
  ('feature_body -> LPAREN RPAREN LBRACE expression RBRACE','feature_body',5,'p_feature_body','miniirgen.py',310),
  ('feature -> modifier formal','feature',2,'p_feature_modifier_formal','miniirgen.py',324),
  ('feature -> formal','feature',1,'p_feature_formal','miniirgen.py',334),
  ('modifier -> PUBLIC','modifier',1,'p_modifier_public','miniirgen.py',340),
  ('modifier -> PRIVATE','modifier',1,'p_modifier_private','miniirgen.py',347),
  ('type -> CLASS_TYPE','type',1,'p_type_class_type','miniirgen.py',354),
  ('type -> INTEGER_TYPE','type',1,'p_type_integer_type','miniirgen.py',364),
  ('type -> BOOL_TYPE','type',1,'p_type_bool_type','miniirgen.py',369),
  ('type -> STRING_TYPE','type',1,'p_type_string_type','miniirgen.py',374),
  ('type -> OBJECT','type',1,'p_type_object','miniirgen.py',379),
  ('type -> SELF_TYPE','type',1,'p_type_self_type','miniirgen.py',384),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list_many','miniirgen.py',390),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','miniirgen.py',407),
  ('formal_parameter -> ID COLON type','formal_parameter',3,'p_formal_parameter','miniirgen.py',429),
  ('formal_parameter -> ID LSQRBRACKET RSQRBRACKET COLON type','formal_parameter',5,'p_formal_parameter_arr','miniirgen.py',442),
  ('formal -> ID COLON type GETS expression','formal',5,'p_formal_with_assign','miniirgen.py',456),
  ('formal -> ID COLON type','formal',3,'p_formal','miniirgen.py',485),
  ('formal -> ID COLON type LSQRBRACKET expression RSQRBRACKET','formal',6,'p_formal_arr','miniirgen.py',517),
  ('expression -> block_expression','expression',1,'p_expression_block_expression','miniirgen.py',541),
  ('block_expression -> LBRACE block_list RBRACE','block_expression',3,'p_block_expression','miniirgen.py',549),
  ('block_list -> block_list expression SEMICOLON','block_list',3,'p_block_list_many','miniirgen.py',555),
  ('block_list -> expression SEMICOLON','block_list',2,'p_block_list','miniirgen.py',562),
  ('expression -> ID GETS expression','expression',3,'p_expression_assign','miniirgen.py',570),
  ('expression -> expression LSQRBRACKET expression RSQRBRACKET GETS expression','expression',6,'p_expression_assign_arr','miniirgen.py',591),
  ('expression -> OUT_INT LPAREN expression RPAREN','expression',4,'p_expression_outint','miniirgen.py',611),
  ('expression -> OUT_STRING LPAREN expression RPAREN','expression',4,'p_expression_outstring','miniirgen.py',619),
  ('expression -> SCAN_INT LPAREN expression RPAREN','expression',4,'p_expression_scanint','miniirgen.py',628),
  ('expression -> SCAN_STRING LPAREN expression RPAREN','expression',4,'p_expression_scanstring','miniirgen.py',636),
  ('expression -> ID LPAREN argument_list RPAREN','expression',4,'p_expression_function_call_with_arguments_2','miniirgen.py',644),
  ('expression -> ID LPAREN RPAREN','expression',3,'p_expression_function_call_2','miniirgen.py',663),
  ('argument_list -> expression','argument_list',1,'p_argument_list','miniirgen.py',683),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list_many','miniirgen.py',699),
  ('expression -> expression PLUS expression','expression',3,'p_expression_plus','miniirgen.py',712),
  ('expression -> expression MINUS expression','expression',3,'p_expression_minus','miniirgen.py',732),
  ('expression -> expression TIMES expression','expression',3,'p_expression_times','miniirgen.py',747),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_divide','miniirgen.py',762),
  ('expression -> expression MOD expression','expression',3,'p_expression_mod','miniirgen.py',777),
  ('expression -> expression BITWISEAND expression','expression',3,'p_expression_bitwise_and','miniirgen.py',793),
  ('expression -> expression BITWISEOR expression','expression',3,'p_expression_bitwise_or','miniirgen.py',810),
  ('expression -> expression LT expression','expression',3,'p_expression_lt','miniirgen.py',828),
  ('expression -> expression GT expression','expression',3,'p_expression_gt','miniirgen.py',853),
  ('expression -> expression LTEQ expression','expression',3,'p_expression_lteq','miniirgen.py',878),
  ('expression -> expression GTEQ expression','expression',3,'p_expression_gteq','miniirgen.py',902),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_equal','miniirgen.py',928),
  ('expression -> expression OR expression','expression',3,'p_expression_or','miniirgen.py',954),
  ('expression -> expression AND expression','expression',3,'p_expression_and','miniirgen.py',983),
  ('expression -> NOT expression','expression',2,'p_expression_not','miniirgen.py',1008),
  ('expression -> TILDA expression','expression',2,'p_expression_tilda','miniirgen.py',1028),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','miniirgen.py',1040),
  ('expression -> ID','expression',1,'p_expression_id','miniirgen.py',1049),
  ('expression -> expression LSQRBRACKET expression RSQRBRACKET','expression',4,'p_expression_arr','miniirgen.py',1057),
  ('expression -> INTEGER','expression',1,'p_expression_integer','miniirgen.py',1071),
  ('expression -> STRING','expression',1,'p_expression_string','miniirgen.py',1077),
  ('expression -> TRUE','expression',1,'p_expression_true','miniirgen.py',1084),
  ('expression -> FALSE','expression',1,'p_expression_false','miniirgen.py',1089),
  ('expression -> BREAK','expression',1,'p_expression_break','miniirgen.py',1094),
  ('expression -> CONTINUE','expression',1,'p_expression_continue','miniirgen.py',1099),
  ('expression -> RETURN expression SEMICOLON','expression',3,'p_expression_return','miniirgen.py',1104),
  ('expression -> expression PERIOD ID LPAREN argument_list RPAREN','expression',6,'p_expression_function_call_with_arguments','miniirgen.py',1119),
  ('expression -> expression PERIOD ID LPAREN RPAREN','expression',5,'p_expression_function_call','miniirgen.py',1150),
  ('expression -> NEW type','expression',2,'p_expression_new','miniirgen.py',1176),
  ('expression -> ISVOID expression','expression',2,'p_expression_isvoid','miniirgen.py',1200),
  ('expression -> let_expression','expression',1,'p_expression_let_expression','miniirgen.py',1213),
  ('let -> LET','let',1,'p_let_to_let','miniirgen.py',1219),
  ('let_expression -> let formaldehyde IN expression TEL','let_expression',5,'p_let_expression','miniirgen.py',1233),
  ('expression -> expression AT CLASS_TYPE PERIOD ID LPAREN argument_list RPAREN','expression',8,'p_expression_at_function_with_arguments','miniirgen.py',1249),
  ('expression -> expression AT CLASS_TYPE PERIOD ID LPAREN RPAREN','expression',7,'p_expression_at_function','miniirgen.py',1271),
  ('expression -> if_then_else','expression',1,'p_expression_if_then_else','miniirgen.py',1295),
  ('if_then_else -> IF expression THEN expression ELSE expression FI','if_then_else',7,'p_if_then_else','miniirgen.py',1301),
  ('expression -> while','expression',1,'p_expression_while','miniirgen.py',1317),
  ('while -> WHILE expression LOOP expression POOL','while',5,'p_while','miniirgen.py',1324),
  ('expression -> for','expression',1,'p_expression_for','miniirgen.py',1346),
  ('for -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LOOP expression POOL','for',11,'p_for','miniirgen.py',1352),
  ('formaldehyde -> formaldehyde COMMA ID COLON type GETS expression','formaldehyde',7,'p_formaldehyde_with_assign_many','miniirgen.py',1379),
  ('formaldehyde -> formaldehyde COMMA ID COLON type','formaldehyde',5,'p_formaldehyde_many','miniirgen.py',1396),
  ('formaldehyde -> formaldehyde COMMA ID COLON type LSQRBRACKET expression RSQRBRACKET','formaldehyde',8,'p_formaldehyde_arr_many','miniirgen.py',1410),
  ('formaldehyde -> ID COLON type GETS expression','formaldehyde',5,'p_formaldehyde_with_assign','miniirgen.py',1426),
  ('formaldehyde -> ID COLON type','formaldehyde',3,'p_formaldehyde','miniirgen.py',1441),
  ('formaldehyde -> ID COLON type LSQRBRACKET expression RSQRBRACKET','formaldehyde',6,'p_formaldehyde_arr','miniirgen.py',1452),
  ('expression -> expression PERIOD ID','expression',3,'p_expression_objid','miniirgen.py',1472),
  ('expression -> expression PERIOD ID GETS expression','expression',5,'p_expression_objid_expression','miniirgen.py',1500),
  ('expression -> READ_FILE LPAREN ID COMMA expression RPAREN','expression',6,'p_read_file','miniirgen.py',1523),
  ('expression -> WRITE_FILE LPAREN expression COMMA expression RPAREN','expression',6,'p_write_file','miniirgen.py',1535),
]
